/*!
 * imagesLoaded PACKAGED v4.1.0
 * JavaScript is all like "You images are done yet or what?"
 * MIT License
 */

!function(t,e){"function"==typeof define&&define.amd?define("ev-emitter/ev-emitter",e):"object"==typeof module&&module.exports?module.exports=e():t.EvEmitter=e()}(this,function(){function t(){}var e=t.prototype;return e.on=function(t,e){if(t&&e){var i=this._events=this._events||{},n=i[t]=i[t]||[];return-1==n.indexOf(e)&&n.push(e),this}},e.once=function(t,e){if(t&&e){this.on(t,e);var i=this._onceEvents=this._onceEvents||{},n=i[t]=i[t]||[];return n[e]=!0,this}},e.off=function(t,e){var i=this._events&&this._events[t];if(i&&i.length){var n=i.indexOf(e);return-1!=n&&i.splice(n,1),this}},e.emitEvent=function(t,e){var i=this._events&&this._events[t];if(i&&i.length){var n=0,o=i[n];e=e||[];for(var r=this._onceEvents&&this._onceEvents[t];o;){var s=r&&r[o];s&&(this.off(t,o),delete r[o]),o.apply(this,e),n+=s?0:1,o=i[n]}return this}},t}),function(t,e){"use strict";"function"==typeof define&&define.amd?define(["ev-emitter/ev-emitter"],function(i){return e(t,i)}):"object"==typeof module&&module.exports?module.exports=e(t,require("ev-emitter")):t.imagesLoaded=e(t,t.EvEmitter)}(window,function(t,e){function i(t,e){for(var i in e)t[i]=e[i];return t}function n(t){var e=[];if(Array.isArray(t))e=t;else if("number"==typeof t.length)for(var i=0;i<t.length;i++)e.push(t[i]);else e.push(t);return e}function o(t,e,r){return this instanceof o?("string"==typeof t&&(t=document.querySelectorAll(t)),this.elements=n(t),this.options=i({},this.options),"function"==typeof e?r=e:i(this.options,e),r&&this.on("always",r),this.getImages(),h&&(this.jqDeferred=new h.Deferred),void setTimeout(function(){this.check()}.bind(this))):new o(t,e,r)}function r(t){this.img=t}function s(t,e){this.url=t,this.element=e,this.img=new Image}var h=t.jQuery,a=t.console;o.prototype=Object.create(e.prototype),o.prototype.options={},o.prototype.getImages=function(){this.images=[],this.elements.forEach(this.addElementImages,this)},o.prototype.addElementImages=function(t){"IMG"==t.nodeName&&this.addImage(t),this.options.background===!0&&this.addElementBackgroundImages(t);var e=t.nodeType;if(e&&d[e]){for(var i=t.querySelectorAll("img"),n=0;n<i.length;n++){var o=i[n];this.addImage(o)}if("string"==typeof this.options.background){var r=t.querySelectorAll(this.options.background);for(n=0;n<r.length;n++){var s=r[n];this.addElementBackgroundImages(s)}}}};var d={1:!0,9:!0,11:!0};return o.prototype.addElementBackgroundImages=function(t){var e=getComputedStyle(t);if(e)for(var i=/url\((['"])?(.*?)\1\)/gi,n=i.exec(e.backgroundImage);null!==n;){var o=n&&n[2];o&&this.addBackground(o,t),n=i.exec(e.backgroundImage)}},o.prototype.addImage=function(t){var e=new r(t);this.images.push(e)},o.prototype.addBackground=function(t,e){var i=new s(t,e);this.images.push(i)},o.prototype.check=function(){function t(t,i,n){setTimeout(function(){e.progress(t,i,n)})}var e=this;return this.progressedCount=0,this.hasAnyBroken=!1,this.images.length?void this.images.forEach(function(e){e.once("progress",t),e.check()}):void this.complete()},o.prototype.progress=function(t,e,i){this.progressedCount++,this.hasAnyBroken=this.hasAnyBroken||!t.isLoaded,this.emitEvent("progress",[this,t,e]),this.jqDeferred&&this.jqDeferred.notify&&this.jqDeferred.notify(this,t),this.progressedCount==this.images.length&&this.complete(),this.options.debug&&a&&a.log("progress: "+i,t,e)},o.prototype.complete=function(){var t=this.hasAnyBroken?"fail":"done";if(this.isComplete=!0,this.emitEvent(t,[this]),this.emitEvent("always",[this]),this.jqDeferred){var e=this.hasAnyBroken?"reject":"resolve";this.jqDeferred[e](this)}},r.prototype=Object.create(e.prototype),r.prototype.check=function(){var t=this.getIsImageComplete();return t?void this.confirm(0!==this.img.naturalWidth,"naturalWidth"):(this.proxyImage=new Image,this.proxyImage.addEventListener("load",this),this.proxyImage.addEventListener("error",this),this.img.addEventListener("load",this),this.img.addEventListener("error",this),void(this.proxyImage.src=this.img.src))},r.prototype.getIsImageComplete=function(){return this.img.complete&&void 0!==this.img.naturalWidth},r.prototype.confirm=function(t,e){this.isLoaded=t,this.emitEvent("progress",[this,this.img,e])},r.prototype.handleEvent=function(t){var e="on"+t.type;this[e]&&this[e](t)},r.prototype.onload=function(){this.confirm(!0,"onload"),this.unbindEvents()},r.prototype.onerror=function(){this.confirm(!1,"onerror"),this.unbindEvents()},r.prototype.unbindEvents=function(){this.proxyImage.removeEventListener("load",this),this.proxyImage.removeEventListener("error",this),this.img.removeEventListener("load",this),this.img.removeEventListener("error",this)},s.prototype=Object.create(r.prototype),s.prototype.check=function(){this.img.addEventListener("load",this),this.img.addEventListener("error",this),this.img.src=this.url;var t=this.getIsImageComplete();t&&(this.confirm(0!==this.img.naturalWidth,"naturalWidth"),this.unbindEvents())},s.prototype.unbindEvents=function(){this.img.removeEventListener("load",this),this.img.removeEventListener("error",this)},s.prototype.confirm=function(t,e){this.isLoaded=t,this.emitEvent("progress",[this,this.element,e])},o.makeJQueryPlugin=function(e){e=e||t.jQuery,e&&(h=e,h.fn.imagesLoaded=function(t,e){var i=new o(this,t,e);return i.jqDeferred.promise(h(this))})},o.makeJQueryPlugin(),o});
var imgLiquid=imgLiquid||{VER:"0.9.944"};imgLiquid.bgs_Available=!1,imgLiquid.bgs_CheckRunned=!1,imgLiquid.injectCss=".imgLiquid img {visibility:hidden}",function(i){function t(){if(!imgLiquid.bgs_CheckRunned){imgLiquid.bgs_CheckRunned=!0;var t=i('<span style="background-size:cover" />');i("body").append(t),!function(){var i=t[0];if(i&&window.getComputedStyle){var e=window.getComputedStyle(i,null);e&&e.backgroundSize&&(imgLiquid.bgs_Available="cover"===e.backgroundSize)}}(),t.remove()}}i.fn.extend({imgLiquid:function(e){this.defaults={fill:!0,verticalAlign:"center",horizontalAlign:"center",useBackgroundSize:!0,useDataHtmlAttr:!0,responsive:!0,delay:0,fadeInTime:0,removeBoxBackground:!0,hardPixels:!0,responsiveCheckTime:500,timecheckvisibility:500,onStart:null,onFinish:null,onItemStart:null,onItemFinish:null,onItemError:null},t();var a=this;return this.options=e,this.settings=i.extend({},this.defaults,this.options),this.settings.onStart&&this.settings.onStart(),this.each(function(t){function e(){-1===u.css("background-image").indexOf(encodeURI(c.attr("src")))&&u.css({"background-image":'url("'+encodeURI(c.attr("src"))+'")'}),u.css({"background-size":g.fill?"cover":"contain","background-position":(g.horizontalAlign+" "+g.verticalAlign).toLowerCase(),"background-repeat":"no-repeat"}),i("a:first",u).css({display:"block",width:"100%",height:"100%"}),i("img",u).css({display:"none"}),g.onItemFinish&&g.onItemFinish(t,u,c),u.addClass("imgLiquid_bgSize"),u.addClass("imgLiquid_ready"),l()}function d(){function e(){c.data("imgLiquid_error")||c.data("imgLiquid_loaded")||c.data("imgLiquid_oldProcessed")||(u.is(":visible")&&c[0].complete&&c[0].width>0&&c[0].height>0?(c.data("imgLiquid_loaded",!0),setTimeout(r,t*g.delay)):setTimeout(e,g.timecheckvisibility))}if(c.data("oldSrc")&&c.data("oldSrc")!==c.attr("src")){var a=c.clone().removeAttr("style");return a.data("imgLiquid_settings",c.data("imgLiquid_settings")),c.parent().prepend(a),c.remove(),c=a,c[0].width=0,setTimeout(d,10),void 0}return c.data("imgLiquid_oldProcessed")?(r(),void 0):(c.data("imgLiquid_oldProcessed",!1),c.data("oldSrc",c.attr("src")),i("img:not(:first)",u).css("display","none"),u.css({overflow:"hidden"}),c.fadeTo(0,0).removeAttr("width").removeAttr("height").css({visibility:"visible","max-width":"none","max-height":"none",width:"auto",height:"auto",display:"block"}),c.on("error",n),c[0].onerror=n,e(),o(),void 0)}function o(){(g.responsive||c.data("imgLiquid_oldProcessed"))&&c.data("imgLiquid_settings")&&(g=c.data("imgLiquid_settings"),u.actualSize=u.get(0).offsetWidth+u.get(0).offsetHeight/1e4,u.sizeOld&&u.actualSize!==u.sizeOld&&r(),u.sizeOld=u.actualSize,setTimeout(o,g.responsiveCheckTime))}function n(){c.data("imgLiquid_error",!0),u.addClass("imgLiquid_error"),g.onItemError&&g.onItemError(t,u,c),l()}function s(){var i={};if(a.settings.useDataHtmlAttr){var t=u.attr("data-imgLiquid-fill"),e=u.attr("data-imgLiquid-horizontalAlign"),d=u.attr("data-imgLiquid-verticalAlign");("true"===t||"false"===t)&&(i.fill=Boolean("true"===t)),void 0===e||"left"!==e&&"center"!==e&&"right"!==e&&-1===e.indexOf("%")||(i.horizontalAlign=e),void 0===d||"top"!==d&&"bottom"!==d&&"center"!==d&&-1===d.indexOf("%")||(i.verticalAlign=d)}return imgLiquid.isIE&&a.settings.ieFadeInDisabled&&(i.fadeInTime=0),i}function r(){var i,e,a,d,o,n,s,r,m=0,h=0,f=u.width(),v=u.height();void 0===c.data("owidth")&&c.data("owidth",c[0].width),void 0===c.data("oheight")&&c.data("oheight",c[0].height),g.fill===f/v>=c.data("owidth")/c.data("oheight")?(i="100%",e="auto",a=Math.floor(f),d=Math.floor(f*(c.data("oheight")/c.data("owidth")))):(i="auto",e="100%",a=Math.floor(v*(c.data("owidth")/c.data("oheight"))),d=Math.floor(v)),o=g.horizontalAlign.toLowerCase(),s=f-a,"left"===o&&(h=0),"center"===o&&(h=.5*s),"right"===o&&(h=s),-1!==o.indexOf("%")&&(o=parseInt(o.replace("%",""),10),o>0&&(h=.01*s*o)),n=g.verticalAlign.toLowerCase(),r=v-d,"left"===n&&(m=0),"center"===n&&(m=.5*r),"bottom"===n&&(m=r),-1!==n.indexOf("%")&&(n=parseInt(n.replace("%",""),10),n>0&&(m=.01*r*n)),g.hardPixels&&(i=a,e=d),c.css({width:i,height:e,"margin-left":Math.floor(h),"margin-top":Math.floor(m)}),c.data("imgLiquid_oldProcessed")||(c.fadeTo(g.fadeInTime,1),c.data("imgLiquid_oldProcessed",!0),g.removeBoxBackground&&u.css("background-image","none"),u.addClass("imgLiquid_nobgSize"),u.addClass("imgLiquid_ready")),g.onItemFinish&&g.onItemFinish(t,u,c),l()}function l(){t===a.length-1&&a.settings.onFinish&&a.settings.onFinish()}var g=a.settings,u=i(this),c=i("img:first",u);return c.length?(c.data("imgLiquid_settings")?(u.removeClass("imgLiquid_error").removeClass("imgLiquid_ready"),g=i.extend({},c.data("imgLiquid_settings"),a.options)):g=i.extend({},a.settings,s()),c.data("imgLiquid_settings",g),g.onItemStart&&g.onItemStart(t,u,c),imgLiquid.bgs_Available&&g.useBackgroundSize?e():d(),void 0):(n(),void 0)})}})}(jQuery),!function(){var i=imgLiquid.injectCss,t=document.getElementsByTagName("head")[0],e=document.createElement("style");e.type="text/css",e.styleSheet?e.styleSheet.cssText=i:e.appendChild(document.createTextNode(i)),t.appendChild(e)}();
/*!
 * Isotope PACKAGED v3.0.1
 *
 * Licensed GPLv3 for open source use
 * or Isotope Commercial License for commercial use
 *
 * http://isotope.metafizzy.co
 * Copyright 2016 Metafizzy
 */

!function(t,e){"use strict";"function"==typeof define&&define.amd?define("jquery-bridget/jquery-bridget",["jquery"],function(i){e(t,i)}):"object"==typeof module&&module.exports?module.exports=e(t,require("jquery")):t.jQueryBridget=e(t,t.jQuery)}(window,function(t,e){"use strict";function i(i,s,a){function u(t,e,n){var o,s="$()."+i+'("'+e+'")';return t.each(function(t,u){var h=a.data(u,i);if(!h)return void r(i+" not initialized. Cannot call methods, i.e. "+s);var d=h[e];if(!d||"_"==e.charAt(0))return void r(s+" is not a valid method");var l=d.apply(h,n);o=void 0===o?l:o}),void 0!==o?o:t}function h(t,e){t.each(function(t,n){var o=a.data(n,i);o?(o.option(e),o._init()):(o=new s(n,e),a.data(n,i,o))})}a=a||e||t.jQuery,a&&(s.prototype.option||(s.prototype.option=function(t){a.isPlainObject(t)&&(this.options=a.extend(!0,this.options,t))}),a.fn[i]=function(t){if("string"==typeof t){var e=o.call(arguments,1);return u(this,t,e)}return h(this,t),this},n(a))}function n(t){!t||t&&t.bridget||(t.bridget=i)}var o=Array.prototype.slice,s=t.console,r="undefined"==typeof s?function(){}:function(t){s.error(t)};return n(e||t.jQuery),i}),function(t,e){"function"==typeof define&&define.amd?define("ev-emitter/ev-emitter",e):"object"==typeof module&&module.exports?module.exports=e():t.EvEmitter=e()}("undefined"!=typeof window?window:this,function(){function t(){}var e=t.prototype;return e.on=function(t,e){if(t&&e){var i=this._events=this._events||{},n=i[t]=i[t]||[];return-1==n.indexOf(e)&&n.push(e),this}},e.once=function(t,e){if(t&&e){this.on(t,e);var i=this._onceEvents=this._onceEvents||{},n=i[t]=i[t]||{};return n[e]=!0,this}},e.off=function(t,e){var i=this._events&&this._events[t];if(i&&i.length){var n=i.indexOf(e);return-1!=n&&i.splice(n,1),this}},e.emitEvent=function(t,e){var i=this._events&&this._events[t];if(i&&i.length){var n=0,o=i[n];e=e||[];for(var s=this._onceEvents&&this._onceEvents[t];o;){var r=s&&s[o];r&&(this.off(t,o),delete s[o]),o.apply(this,e),n+=r?0:1,o=i[n]}return this}},t}),function(t,e){"use strict";"function"==typeof define&&define.amd?define("get-size/get-size",[],function(){return e()}):"object"==typeof module&&module.exports?module.exports=e():t.getSize=e()}(window,function(){"use strict";function t(t){var e=parseFloat(t),i=-1==t.indexOf("%")&&!isNaN(e);return i&&e}function e(){}function i(){for(var t={width:0,height:0,innerWidth:0,innerHeight:0,outerWidth:0,outerHeight:0},e=0;h>e;e++){var i=u[e];t[i]=0}return t}function n(t){var e=getComputedStyle(t);return e||a("Style returned "+e+". Are you running this code in a hidden iframe on Firefox? See http://bit.ly/getsizebug1"),e}function o(){if(!d){d=!0;var e=document.createElement("div");e.style.width="200px",e.style.padding="1px 2px 3px 4px",e.style.borderStyle="solid",e.style.borderWidth="1px 2px 3px 4px",e.style.boxSizing="border-box";var i=document.body||document.documentElement;i.appendChild(e);var o=n(e);s.isBoxSizeOuter=r=200==t(o.width),i.removeChild(e)}}function s(e){if(o(),"string"==typeof e&&(e=document.querySelector(e)),e&&"object"==typeof e&&e.nodeType){var s=n(e);if("none"==s.display)return i();var a={};a.width=e.offsetWidth,a.height=e.offsetHeight;for(var d=a.isBorderBox="border-box"==s.boxSizing,l=0;h>l;l++){var f=u[l],c=s[f],m=parseFloat(c);a[f]=isNaN(m)?0:m}var p=a.paddingLeft+a.paddingRight,y=a.paddingTop+a.paddingBottom,g=a.marginLeft+a.marginRight,v=a.marginTop+a.marginBottom,_=a.borderLeftWidth+a.borderRightWidth,I=a.borderTopWidth+a.borderBottomWidth,z=d&&r,x=t(s.width);x!==!1&&(a.width=x+(z?0:p+_));var S=t(s.height);return S!==!1&&(a.height=S+(z?0:y+I)),a.innerWidth=a.width-(p+_),a.innerHeight=a.height-(y+I),a.outerWidth=a.width+g,a.outerHeight=a.height+v,a}}var r,a="undefined"==typeof console?e:function(t){console.error(t)},u=["paddingLeft","paddingRight","paddingTop","paddingBottom","marginLeft","marginRight","marginTop","marginBottom","borderLeftWidth","borderRightWidth","borderTopWidth","borderBottomWidth"],h=u.length,d=!1;return s}),function(t,e){"use strict";"function"==typeof define&&define.amd?define("desandro-matches-selector/matches-selector",e):"object"==typeof module&&module.exports?module.exports=e():t.matchesSelector=e()}(window,function(){"use strict";var t=function(){var t=Element.prototype;if(t.matches)return"matches";if(t.matchesSelector)return"matchesSelector";for(var e=["webkit","moz","ms","o"],i=0;i<e.length;i++){var n=e[i],o=n+"MatchesSelector";if(t[o])return o}}();return function(e,i){return e[t](i)}}),function(t,e){"function"==typeof define&&define.amd?define("fizzy-ui-utils/utils",["desandro-matches-selector/matches-selector"],function(i){return e(t,i)}):"object"==typeof module&&module.exports?module.exports=e(t,require("desandro-matches-selector")):t.fizzyUIUtils=e(t,t.matchesSelector)}(window,function(t,e){var i={};i.extend=function(t,e){for(var i in e)t[i]=e[i];return t},i.modulo=function(t,e){return(t%e+e)%e},i.makeArray=function(t){var e=[];if(Array.isArray(t))e=t;else if(t&&"number"==typeof t.length)for(var i=0;i<t.length;i++)e.push(t[i]);else e.push(t);return e},i.removeFrom=function(t,e){var i=t.indexOf(e);-1!=i&&t.splice(i,1)},i.getParent=function(t,i){for(;t!=document.body;)if(t=t.parentNode,e(t,i))return t},i.getQueryElement=function(t){return"string"==typeof t?document.querySelector(t):t},i.handleEvent=function(t){var e="on"+t.type;this[e]&&this[e](t)},i.filterFindElements=function(t,n){t=i.makeArray(t);var o=[];return t.forEach(function(t){if(t instanceof HTMLElement){if(!n)return void o.push(t);e(t,n)&&o.push(t);for(var i=t.querySelectorAll(n),s=0;s<i.length;s++)o.push(i[s])}}),o},i.debounceMethod=function(t,e,i){var n=t.prototype[e],o=e+"Timeout";t.prototype[e]=function(){var t=this[o];t&&clearTimeout(t);var e=arguments,s=this;this[o]=setTimeout(function(){n.apply(s,e),delete s[o]},i||100)}},i.docReady=function(t){var e=document.readyState;"complete"==e||"interactive"==e?t():document.addEventListener("DOMContentLoaded",t)},i.toDashed=function(t){return t.replace(/(.)([A-Z])/g,function(t,e,i){return e+"-"+i}).toLowerCase()};var n=t.console;return i.htmlInit=function(e,o){i.docReady(function(){var s=i.toDashed(o),r="data-"+s,a=document.querySelectorAll("["+r+"]"),u=document.querySelectorAll(".js-"+s),h=i.makeArray(a).concat(i.makeArray(u)),d=r+"-options",l=t.jQuery;h.forEach(function(t){var i,s=t.getAttribute(r)||t.getAttribute(d);try{i=s&&JSON.parse(s)}catch(a){return void(n&&n.error("Error parsing "+r+" on "+t.className+": "+a))}var u=new e(t,i);l&&l.data(t,o,u)})})},i}),function(t,e){"function"==typeof define&&define.amd?define("outlayer/item",["ev-emitter/ev-emitter","get-size/get-size"],e):"object"==typeof module&&module.exports?module.exports=e(require("ev-emitter"),require("get-size")):(t.Outlayer={},t.Outlayer.Item=e(t.EvEmitter,t.getSize))}(window,function(t,e){"use strict";function i(t){for(var e in t)return!1;return e=null,!0}function n(t,e){t&&(this.element=t,this.layout=e,this.position={x:0,y:0},this._create())}function o(t){return t.replace(/([A-Z])/g,function(t){return"-"+t.toLowerCase()})}var s=document.documentElement.style,r="string"==typeof s.transition?"transition":"WebkitTransition",a="string"==typeof s.transform?"transform":"WebkitTransform",u={WebkitTransition:"webkitTransitionEnd",transition:"transitionend"}[r],h={transform:a,transition:r,transitionDuration:r+"Duration",transitionProperty:r+"Property",transitionDelay:r+"Delay"},d=n.prototype=Object.create(t.prototype);d.constructor=n,d._create=function(){this._transn={ingProperties:{},clean:{},onEnd:{}},this.css({position:"absolute"})},d.handleEvent=function(t){var e="on"+t.type;this[e]&&this[e](t)},d.getSize=function(){this.size=e(this.element)},d.css=function(t){var e=this.element.style;for(var i in t){var n=h[i]||i;e[n]=t[i]}},d.getPosition=function(){var t=getComputedStyle(this.element),e=this.layout._getOption("originLeft"),i=this.layout._getOption("originTop"),n=t[e?"left":"right"],o=t[i?"top":"bottom"],s=this.layout.size,r=-1!=n.indexOf("%")?parseFloat(n)/100*s.width:parseInt(n,10),a=-1!=o.indexOf("%")?parseFloat(o)/100*s.height:parseInt(o,10);r=isNaN(r)?0:r,a=isNaN(a)?0:a,r-=e?s.paddingLeft:s.paddingRight,a-=i?s.paddingTop:s.paddingBottom,this.position.x=r,this.position.y=a},d.layoutPosition=function(){var t=this.layout.size,e={},i=this.layout._getOption("originLeft"),n=this.layout._getOption("originTop"),o=i?"paddingLeft":"paddingRight",s=i?"left":"right",r=i?"right":"left",a=this.position.x+t[o];e[s]=this.getXValue(a),e[r]="";var u=n?"paddingTop":"paddingBottom",h=n?"top":"bottom",d=n?"bottom":"top",l=this.position.y+t[u];e[h]=this.getYValue(l),e[d]="",this.css(e),this.emitEvent("layout",[this])},d.getXValue=function(t){var e=this.layout._getOption("horizontal");return this.layout.options.percentPosition&&!e?t/this.layout.size.width*100+"%":t+"px"},d.getYValue=function(t){var e=this.layout._getOption("horizontal");return this.layout.options.percentPosition&&e?t/this.layout.size.height*100+"%":t+"px"},d._transitionTo=function(t,e){this.getPosition();var i=this.position.x,n=this.position.y,o=parseInt(t,10),s=parseInt(e,10),r=o===this.position.x&&s===this.position.y;if(this.setPosition(t,e),r&&!this.isTransitioning)return void this.layoutPosition();var a=t-i,u=e-n,h={};h.transform=this.getTranslate(a,u),this.transition({to:h,onTransitionEnd:{transform:this.layoutPosition},isCleaning:!0})},d.getTranslate=function(t,e){var i=this.layout._getOption("originLeft"),n=this.layout._getOption("originTop");return t=i?t:-t,e=n?e:-e,"translate3d("+t+"px, "+e+"px, 0)"},d.goTo=function(t,e){this.setPosition(t,e),this.layoutPosition()},d.moveTo=d._transitionTo,d.setPosition=function(t,e){this.position.x=parseInt(t,10),this.position.y=parseInt(e,10)},d._nonTransition=function(t){this.css(t.to),t.isCleaning&&this._removeStyles(t.to);for(var e in t.onTransitionEnd)t.onTransitionEnd[e].call(this)},d.transition=function(t){if(!parseFloat(this.layout.options.transitionDuration))return void this._nonTransition(t);var e=this._transn;for(var i in t.onTransitionEnd)e.onEnd[i]=t.onTransitionEnd[i];for(i in t.to)e.ingProperties[i]=!0,t.isCleaning&&(e.clean[i]=!0);if(t.from){this.css(t.from);var n=this.element.offsetHeight;n=null}this.enableTransition(t.to),this.css(t.to),this.isTransitioning=!0};var l="opacity,"+o(a);d.enableTransition=function(){if(!this.isTransitioning){var t=this.layout.options.transitionDuration;t="number"==typeof t?t+"ms":t,this.css({transitionProperty:l,transitionDuration:t,transitionDelay:this.staggerDelay||0}),this.element.addEventListener(u,this,!1)}},d.onwebkitTransitionEnd=function(t){this.ontransitionend(t)},d.onotransitionend=function(t){this.ontransitionend(t)};var f={"-webkit-transform":"transform"};d.ontransitionend=function(t){if(t.target===this.element){var e=this._transn,n=f[t.propertyName]||t.propertyName;if(delete e.ingProperties[n],i(e.ingProperties)&&this.disableTransition(),n in e.clean&&(this.element.style[t.propertyName]="",delete e.clean[n]),n in e.onEnd){var o=e.onEnd[n];o.call(this),delete e.onEnd[n]}this.emitEvent("transitionEnd",[this])}},d.disableTransition=function(){this.removeTransitionStyles(),this.element.removeEventListener(u,this,!1),this.isTransitioning=!1},d._removeStyles=function(t){var e={};for(var i in t)e[i]="";this.css(e)};var c={transitionProperty:"",transitionDuration:"",transitionDelay:""};return d.removeTransitionStyles=function(){this.css(c)},d.stagger=function(t){t=isNaN(t)?0:t,this.staggerDelay=t+"ms"},d.removeElem=function(){this.element.parentNode.removeChild(this.element),this.css({display:""}),this.emitEvent("remove",[this])},d.remove=function(){return r&&parseFloat(this.layout.options.transitionDuration)?(this.once("transitionEnd",function(){this.removeElem()}),void this.hide()):void this.removeElem()},d.reveal=function(){delete this.isHidden,this.css({display:""});var t=this.layout.options,e={},i=this.getHideRevealTransitionEndProperty("visibleStyle");e[i]=this.onRevealTransitionEnd,this.transition({from:t.hiddenStyle,to:t.visibleStyle,isCleaning:!0,onTransitionEnd:e})},d.onRevealTransitionEnd=function(){this.isHidden||this.emitEvent("reveal")},d.getHideRevealTransitionEndProperty=function(t){var e=this.layout.options[t];if(e.opacity)return"opacity";for(var i in e)return i},d.hide=function(){this.isHidden=!0,this.css({display:""});var t=this.layout.options,e={},i=this.getHideRevealTransitionEndProperty("hiddenStyle");e[i]=this.onHideTransitionEnd,this.transition({from:t.visibleStyle,to:t.hiddenStyle,isCleaning:!0,onTransitionEnd:e})},d.onHideTransitionEnd=function(){this.isHidden&&(this.css({display:"none"}),this.emitEvent("hide"))},d.destroy=function(){this.css({position:"",left:"",right:"",top:"",bottom:"",transition:"",transform:""})},n}),function(t,e){"use strict";"function"==typeof define&&define.amd?define("outlayer/outlayer",["ev-emitter/ev-emitter","get-size/get-size","fizzy-ui-utils/utils","./item"],function(i,n,o,s){return e(t,i,n,o,s)}):"object"==typeof module&&module.exports?module.exports=e(t,require("ev-emitter"),require("get-size"),require("fizzy-ui-utils"),require("./item")):t.Outlayer=e(t,t.EvEmitter,t.getSize,t.fizzyUIUtils,t.Outlayer.Item)}(window,function(t,e,i,n,o){"use strict";function s(t,e){var i=n.getQueryElement(t);if(!i)return void(u&&u.error("Bad element for "+this.constructor.namespace+": "+(i||t)));this.element=i,h&&(this.$element=h(this.element)),this.options=n.extend({},this.constructor.defaults),this.option(e);var o=++l;this.element.outlayerGUID=o,f[o]=this,this._create();var s=this._getOption("initLayout");s&&this.layout()}function r(t){function e(){t.apply(this,arguments)}return e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e}function a(t){if("number"==typeof t)return t;var e=t.match(/(^\d*\.?\d*)(\w*)/),i=e&&e[1],n=e&&e[2];if(!i.length)return 0;i=parseFloat(i);var o=m[n]||1;return i*o}var u=t.console,h=t.jQuery,d=function(){},l=0,f={};s.namespace="outlayer",s.Item=o,s.defaults={containerStyle:{position:"relative"},initLayout:!0,originLeft:!0,originTop:!0,resize:!0,resizeContainer:!0,transitionDuration:"0.4s",hiddenStyle:{opacity:0,transform:"scale(0.001)"},visibleStyle:{opacity:1,transform:"scale(1)"}};var c=s.prototype;n.extend(c,e.prototype),c.option=function(t){n.extend(this.options,t)},c._getOption=function(t){var e=this.constructor.compatOptions[t];return e&&void 0!==this.options[e]?this.options[e]:this.options[t]},s.compatOptions={initLayout:"isInitLayout",horizontal:"isHorizontal",layoutInstant:"isLayoutInstant",originLeft:"isOriginLeft",originTop:"isOriginTop",resize:"isResizeBound",resizeContainer:"isResizingContainer"},c._create=function(){this.reloadItems(),this.stamps=[],this.stamp(this.options.stamp),n.extend(this.element.style,this.options.containerStyle);var t=this._getOption("resize");t&&this.bindResize()},c.reloadItems=function(){this.items=this._itemize(this.element.children)},c._itemize=function(t){for(var e=this._filterFindItemElements(t),i=this.constructor.Item,n=[],o=0;o<e.length;o++){var s=e[o],r=new i(s,this);n.push(r)}return n},c._filterFindItemElements=function(t){return n.filterFindElements(t,this.options.itemSelector)},c.getItemElements=function(){return this.items.map(function(t){return t.element})},c.layout=function(){this._resetLayout(),this._manageStamps();var t=this._getOption("layoutInstant"),e=void 0!==t?t:!this._isLayoutInited;this.layoutItems(this.items,e),this._isLayoutInited=!0},c._init=c.layout,c._resetLayout=function(){this.getSize()},c.getSize=function(){this.size=i(this.element)},c._getMeasurement=function(t,e){var n,o=this.options[t];o?("string"==typeof o?n=this.element.querySelector(o):o instanceof HTMLElement&&(n=o),this[t]=n?i(n)[e]:o):this[t]=0},c.layoutItems=function(t,e){t=this._getItemsForLayout(t),this._layoutItems(t,e),this._postLayout()},c._getItemsForLayout=function(t){return t.filter(function(t){return!t.isIgnored})},c._layoutItems=function(t,e){if(this._emitCompleteOnItems("layout",t),t&&t.length){var i=[];t.forEach(function(t){var n=this._getItemLayoutPosition(t);n.item=t,n.isInstant=e||t.isLayoutInstant,i.push(n)},this),this._processLayoutQueue(i)}},c._getItemLayoutPosition=function(){return{x:0,y:0}},c._processLayoutQueue=function(t){this.updateStagger(),t.forEach(function(t,e){this._positionItem(t.item,t.x,t.y,t.isInstant,e)},this)},c.updateStagger=function(){var t=this.options.stagger;return null===t||void 0===t?void(this.stagger=0):(this.stagger=a(t),this.stagger)},c._positionItem=function(t,e,i,n,o){n?t.goTo(e,i):(t.stagger(o*this.stagger),t.moveTo(e,i))},c._postLayout=function(){this.resizeContainer()},c.resizeContainer=function(){var t=this._getOption("resizeContainer");if(t){var e=this._getContainerSize();e&&(this._setContainerMeasure(e.width,!0),this._setContainerMeasure(e.height,!1))}},c._getContainerSize=d,c._setContainerMeasure=function(t,e){if(void 0!==t){var i=this.size;i.isBorderBox&&(t+=e?i.paddingLeft+i.paddingRight+i.borderLeftWidth+i.borderRightWidth:i.paddingBottom+i.paddingTop+i.borderTopWidth+i.borderBottomWidth),t=Math.max(t,0),this.element.style[e?"width":"height"]=t+"px"}},c._emitCompleteOnItems=function(t,e){function i(){o.dispatchEvent(t+"Complete",null,[e])}function n(){r++,r==s&&i()}var o=this,s=e.length;if(!e||!s)return void i();var r=0;e.forEach(function(e){e.once(t,n)})},c.dispatchEvent=function(t,e,i){var n=e?[e].concat(i):i;if(this.emitEvent(t,n),h)if(this.$element=this.$element||h(this.element),e){var o=h.Event(e);o.type=t,this.$element.trigger(o,i)}else this.$element.trigger(t,i)},c.ignore=function(t){var e=this.getItem(t);e&&(e.isIgnored=!0)},c.unignore=function(t){var e=this.getItem(t);e&&delete e.isIgnored},c.stamp=function(t){t=this._find(t),t&&(this.stamps=this.stamps.concat(t),t.forEach(this.ignore,this))},c.unstamp=function(t){t=this._find(t),t&&t.forEach(function(t){n.removeFrom(this.stamps,t),this.unignore(t)},this)},c._find=function(t){return t?("string"==typeof t&&(t=this.element.querySelectorAll(t)),t=n.makeArray(t)):void 0},c._manageStamps=function(){this.stamps&&this.stamps.length&&(this._getBoundingRect(),this.stamps.forEach(this._manageStamp,this))},c._getBoundingRect=function(){var t=this.element.getBoundingClientRect(),e=this.size;this._boundingRect={left:t.left+e.paddingLeft+e.borderLeftWidth,top:t.top+e.paddingTop+e.borderTopWidth,right:t.right-(e.paddingRight+e.borderRightWidth),bottom:t.bottom-(e.paddingBottom+e.borderBottomWidth)}},c._manageStamp=d,c._getElementOffset=function(t){var e=t.getBoundingClientRect(),n=this._boundingRect,o=i(t),s={left:e.left-n.left-o.marginLeft,top:e.top-n.top-o.marginTop,right:n.right-e.right-o.marginRight,bottom:n.bottom-e.bottom-o.marginBottom};return s},c.handleEvent=n.handleEvent,c.bindResize=function(){t.addEventListener("resize",this),this.isResizeBound=!0},c.unbindResize=function(){t.removeEventListener("resize",this),this.isResizeBound=!1},c.onresize=function(){this.resize()},n.debounceMethod(s,"onresize",100),c.resize=function(){this.isResizeBound&&this.needsResizeLayout()&&this.layout()},c.needsResizeLayout=function(){var t=i(this.element),e=this.size&&t;return e&&t.innerWidth!==this.size.innerWidth},c.addItems=function(t){var e=this._itemize(t);return e.length&&(this.items=this.items.concat(e)),e},c.appended=function(t){var e=this.addItems(t);e.length&&(this.layoutItems(e,!0),this.reveal(e))},c.prepended=function(t){var e=this._itemize(t);if(e.length){var i=this.items.slice(0);this.items=e.concat(i),this._resetLayout(),this._manageStamps(),this.layoutItems(e,!0),this.reveal(e),this.layoutItems(i)}},c.reveal=function(t){if(this._emitCompleteOnItems("reveal",t),t&&t.length){var e=this.updateStagger();t.forEach(function(t,i){t.stagger(i*e),t.reveal()})}},c.hide=function(t){if(this._emitCompleteOnItems("hide",t),t&&t.length){var e=this.updateStagger();t.forEach(function(t,i){t.stagger(i*e),t.hide()})}},c.revealItemElements=function(t){var e=this.getItems(t);this.reveal(e)},c.hideItemElements=function(t){var e=this.getItems(t);this.hide(e)},c.getItem=function(t){for(var e=0;e<this.items.length;e++){var i=this.items[e];if(i.element==t)return i}},c.getItems=function(t){t=n.makeArray(t);var e=[];return t.forEach(function(t){var i=this.getItem(t);i&&e.push(i)},this),e},c.remove=function(t){var e=this.getItems(t);this._emitCompleteOnItems("remove",e),e&&e.length&&e.forEach(function(t){t.remove(),n.removeFrom(this.items,t)},this)},c.destroy=function(){var t=this.element.style;t.height="",t.position="",t.width="",this.items.forEach(function(t){t.destroy()}),this.unbindResize();var e=this.element.outlayerGUID;delete f[e],delete this.element.outlayerGUID,h&&h.removeData(this.element,this.constructor.namespace)},s.data=function(t){t=n.getQueryElement(t);var e=t&&t.outlayerGUID;return e&&f[e]},s.create=function(t,e){var i=r(s);return i.defaults=n.extend({},s.defaults),n.extend(i.defaults,e),i.compatOptions=n.extend({},s.compatOptions),i.namespace=t,i.data=s.data,i.Item=r(o),n.htmlInit(i,t),h&&h.bridget&&h.bridget(t,i),i};var m={ms:1,s:1e3};return s.Item=o,s}),function(t,e){"function"==typeof define&&define.amd?define("isotope/js/item",["outlayer/outlayer"],e):"object"==typeof module&&module.exports?module.exports=e(require("outlayer")):(t.Isotope=t.Isotope||{},t.Isotope.Item=e(t.Outlayer))}(window,function(t){"use strict";function e(){t.Item.apply(this,arguments)}var i=e.prototype=Object.create(t.Item.prototype),n=i._create;i._create=function(){this.id=this.layout.itemGUID++,n.call(this),this.sortData={}},i.updateSortData=function(){if(!this.isIgnored){this.sortData.id=this.id,this.sortData["original-order"]=this.id,this.sortData.random=Math.random();var t=this.layout.options.getSortData,e=this.layout._sorters;for(var i in t){var n=e[i];this.sortData[i]=n(this.element,this)}}};var o=i.destroy;return i.destroy=function(){o.apply(this,arguments),this.css({display:""})},e}),function(t,e){"function"==typeof define&&define.amd?define("isotope/js/layout-mode",["get-size/get-size","outlayer/outlayer"],e):"object"==typeof module&&module.exports?module.exports=e(require("get-size"),require("outlayer")):(t.Isotope=t.Isotope||{},t.Isotope.LayoutMode=e(t.getSize,t.Outlayer))}(window,function(t,e){"use strict";function i(t){this.isotope=t,t&&(this.options=t.options[this.namespace],this.element=t.element,this.items=t.filteredItems,this.size=t.size)}var n=i.prototype,o=["_resetLayout","_getItemLayoutPosition","_manageStamp","_getContainerSize","_getElementOffset","needsResizeLayout","_getOption"];return o.forEach(function(t){n[t]=function(){return e.prototype[t].apply(this.isotope,arguments)}}),n.needsVerticalResizeLayout=function(){var e=t(this.isotope.element),i=this.isotope.size&&e;return i&&e.innerHeight!=this.isotope.size.innerHeight},n._getMeasurement=function(){this.isotope._getMeasurement.apply(this,arguments)},n.getColumnWidth=function(){this.getSegmentSize("column","Width")},n.getRowHeight=function(){this.getSegmentSize("row","Height")},n.getSegmentSize=function(t,e){var i=t+e,n="outer"+e;if(this._getMeasurement(i,n),!this[i]){var o=this.getFirstItemSize();this[i]=o&&o[n]||this.isotope.size["inner"+e]}},n.getFirstItemSize=function(){var e=this.isotope.filteredItems[0];return e&&e.element&&t(e.element)},n.layout=function(){this.isotope.layout.apply(this.isotope,arguments)},n.getSize=function(){this.isotope.getSize(),this.size=this.isotope.size},i.modes={},i.create=function(t,e){function o(){i.apply(this,arguments)}return o.prototype=Object.create(n),o.prototype.constructor=o,e&&(o.options=e),o.prototype.namespace=t,i.modes[t]=o,o},i}),function(t,e){"function"==typeof define&&define.amd?define("masonry/masonry",["outlayer/outlayer","get-size/get-size"],e):"object"==typeof module&&module.exports?module.exports=e(require("outlayer"),require("get-size")):t.Masonry=e(t.Outlayer,t.getSize)}(window,function(t,e){var i=t.create("masonry");return i.compatOptions.fitWidth="isFitWidth",i.prototype._resetLayout=function(){this.getSize(),this._getMeasurement("columnWidth","outerWidth"),this._getMeasurement("gutter","outerWidth"),this.measureColumns(),this.colYs=[];for(var t=0;t<this.cols;t++)this.colYs.push(0);this.maxY=0},i.prototype.measureColumns=function(){if(this.getContainerWidth(),!this.columnWidth){var t=this.items[0],i=t&&t.element;this.columnWidth=i&&e(i).outerWidth||this.containerWidth}var n=this.columnWidth+=this.gutter,o=this.containerWidth+this.gutter,s=o/n,r=n-o%n,a=r&&1>r?"round":"floor";s=Math[a](s),this.cols=Math.max(s,1)},i.prototype.getContainerWidth=function(){var t=this._getOption("fitWidth"),i=t?this.element.parentNode:this.element,n=e(i);this.containerWidth=n&&n.innerWidth},i.prototype._getItemLayoutPosition=function(t){t.getSize();var e=t.size.outerWidth%this.columnWidth,i=e&&1>e?"round":"ceil",n=Math[i](t.size.outerWidth/this.columnWidth);n=Math.min(n,this.cols);for(var o=this._getColGroup(n),s=Math.min.apply(Math,o),r=o.indexOf(s),a={x:this.columnWidth*r,y:s},u=s+t.size.outerHeight,h=this.cols+1-o.length,d=0;h>d;d++)this.colYs[r+d]=u;return a},i.prototype._getColGroup=function(t){if(2>t)return this.colYs;for(var e=[],i=this.cols+1-t,n=0;i>n;n++){var o=this.colYs.slice(n,n+t);e[n]=Math.max.apply(Math,o)}return e},i.prototype._manageStamp=function(t){var i=e(t),n=this._getElementOffset(t),o=this._getOption("originLeft"),s=o?n.left:n.right,r=s+i.outerWidth,a=Math.floor(s/this.columnWidth);a=Math.max(0,a);var u=Math.floor(r/this.columnWidth);u-=r%this.columnWidth?0:1,u=Math.min(this.cols-1,u);for(var h=this._getOption("originTop"),d=(h?n.top:n.bottom)+i.outerHeight,l=a;u>=l;l++)this.colYs[l]=Math.max(d,this.colYs[l])},i.prototype._getContainerSize=function(){this.maxY=Math.max.apply(Math,this.colYs);var t={height:this.maxY};return this._getOption("fitWidth")&&(t.width=this._getContainerFitWidth()),t},i.prototype._getContainerFitWidth=function(){for(var t=0,e=this.cols;--e&&0===this.colYs[e];)t++;return(this.cols-t)*this.columnWidth-this.gutter},i.prototype.needsResizeLayout=function(){var t=this.containerWidth;return this.getContainerWidth(),t!=this.containerWidth},i}),function(t,e){"function"==typeof define&&define.amd?define("isotope/js/layout-modes/masonry",["../layout-mode","masonry/masonry"],e):"object"==typeof module&&module.exports?module.exports=e(require("../layout-mode"),require("masonry-layout")):e(t.Isotope.LayoutMode,t.Masonry)}(window,function(t,e){"use strict";var i=t.create("masonry"),n=i.prototype,o={_getElementOffset:!0,layout:!0,_getMeasurement:!0};for(var s in e.prototype)o[s]||(n[s]=e.prototype[s]);var r=n.measureColumns;n.measureColumns=function(){this.items=this.isotope.filteredItems,r.call(this)};var a=n._getOption;return n._getOption=function(t){return"fitWidth"==t?void 0!==this.options.isFitWidth?this.options.isFitWidth:this.options.fitWidth:a.apply(this.isotope,arguments)},i}),function(t,e){"function"==typeof define&&define.amd?define("isotope/js/layout-modes/fit-rows",["../layout-mode"],e):"object"==typeof exports?module.exports=e(require("../layout-mode")):e(t.Isotope.LayoutMode)}(window,function(t){"use strict";var e=t.create("fitRows"),i=e.prototype;return i._resetLayout=function(){this.x=0,this.y=0,this.maxY=0,this._getMeasurement("gutter","outerWidth")},i._getItemLayoutPosition=function(t){t.getSize();var e=t.size.outerWidth+this.gutter,i=this.isotope.size.innerWidth+this.gutter;0!==this.x&&e+this.x>i&&(this.x=0,this.y=this.maxY);var n={x:this.x,y:this.y};return this.maxY=Math.max(this.maxY,this.y+t.size.outerHeight),this.x+=e,n},i._getContainerSize=function(){return{height:this.maxY}},e}),function(t,e){"function"==typeof define&&define.amd?define("isotope/js/layout-modes/vertical",["../layout-mode"],e):"object"==typeof module&&module.exports?module.exports=e(require("../layout-mode")):e(t.Isotope.LayoutMode)}(window,function(t){"use strict";var e=t.create("vertical",{horizontalAlignment:0}),i=e.prototype;return i._resetLayout=function(){this.y=0},i._getItemLayoutPosition=function(t){t.getSize();var e=(this.isotope.size.innerWidth-t.size.outerWidth)*this.options.horizontalAlignment,i=this.y;return this.y+=t.size.outerHeight,{x:e,y:i}},i._getContainerSize=function(){return{height:this.y}},e}),function(t,e){"function"==typeof define&&define.amd?define(["outlayer/outlayer","get-size/get-size","desandro-matches-selector/matches-selector","fizzy-ui-utils/utils","isotope/js/item","isotope/js/layout-mode","isotope/js/layout-modes/masonry","isotope/js/layout-modes/fit-rows","isotope/js/layout-modes/vertical"],function(i,n,o,s,r,a){return e(t,i,n,o,s,r,a)}):"object"==typeof module&&module.exports?module.exports=e(t,require("outlayer"),require("get-size"),require("desandro-matches-selector"),require("fizzy-ui-utils"),require("isotope/js/item"),require("isotope/js/layout-mode"),require("isotope/js/layout-modes/masonry"),require("isotope/js/layout-modes/fit-rows"),require("isotope/js/layout-modes/vertical")):t.Isotope=e(t,t.Outlayer,t.getSize,t.matchesSelector,t.fizzyUIUtils,t.Isotope.Item,t.Isotope.LayoutMode)}(window,function(t,e,i,n,o,s,r){function a(t,e){return function(i,n){for(var o=0;o<t.length;o++){var s=t[o],r=i.sortData[s],a=n.sortData[s];if(r>a||a>r){var u=void 0!==e[s]?e[s]:e,h=u?1:-1;return(r>a?1:-1)*h}}return 0}}var u=t.jQuery,h=String.prototype.trim?function(t){return t.trim()}:function(t){return t.replace(/^\s+|\s+$/g,"")},d=e.create("isotope",{layoutMode:"masonry",isJQueryFiltering:!0,sortAscending:!0});d.Item=s,d.LayoutMode=r;var l=d.prototype;l._create=function(){this.itemGUID=0,this._sorters={},this._getSorters(),e.prototype._create.call(this),this.modes={},this.filteredItems=this.items,this.sortHistory=["original-order"];for(var t in r.modes)this._initLayoutMode(t)},l.reloadItems=function(){this.itemGUID=0,e.prototype.reloadItems.call(this)},l._itemize=function(){for(var t=e.prototype._itemize.apply(this,arguments),i=0;i<t.length;i++){var n=t[i];n.id=this.itemGUID++}return this._updateItemsSortData(t),t},l._initLayoutMode=function(t){var e=r.modes[t],i=this.options[t]||{};this.options[t]=e.options?o.extend(e.options,i):i,this.modes[t]=new e(this)},l.layout=function(){return!this._isLayoutInited&&this._getOption("initLayout")?void this.arrange():void this._layout()},l._layout=function(){var t=this._getIsInstant();this._resetLayout(),this._manageStamps(),this.layoutItems(this.filteredItems,t),this._isLayoutInited=!0},l.arrange=function(t){this.option(t),this._getIsInstant();var e=this._filter(this.items);this.filteredItems=e.matches,this._bindArrangeComplete(),this._isInstant?this._noTransition(this._hideReveal,[e]):this._hideReveal(e),this._sort(),this._layout()},l._init=l.arrange,l._hideReveal=function(t){this.reveal(t.needReveal),this.hide(t.needHide)},l._getIsInstant=function(){var t=this._getOption("layoutInstant"),e=void 0!==t?t:!this._isLayoutInited;return this._isInstant=e,e},l._bindArrangeComplete=function(){function t(){e&&i&&n&&o.dispatchEvent("arrangeComplete",null,[o.filteredItems])}var e,i,n,o=this;this.once("layoutComplete",function(){e=!0,t()}),this.once("hideComplete",function(){i=!0,t()}),this.once("revealComplete",function(){n=!0,t()})},l._filter=function(t){var e=this.options.filter;e=e||"*";for(var i=[],n=[],o=[],s=this._getFilterTest(e),r=0;r<t.length;r++){var a=t[r];if(!a.isIgnored){var u=s(a);u&&i.push(a),u&&a.isHidden?n.push(a):u||a.isHidden||o.push(a)}}return{matches:i,needReveal:n,needHide:o}},l._getFilterTest=function(t){return u&&this.options.isJQueryFiltering?function(e){return u(e.element).is(t)}:"function"==typeof t?function(e){return t(e.element)}:function(e){return n(e.element,t)}},l.updateSortData=function(t){var e;t?(t=o.makeArray(t),e=this.getItems(t)):e=this.items,this._getSorters(),this._updateItemsSortData(e)},l._getSorters=function(){var t=this.options.getSortData;for(var e in t){var i=t[e];this._sorters[e]=f(i)}},l._updateItemsSortData=function(t){for(var e=t&&t.length,i=0;e&&e>i;i++){var n=t[i];n.updateSortData()}};var f=function(){function t(t){if("string"!=typeof t)return t;var i=h(t).split(" "),n=i[0],o=n.match(/^\[(.+)\]$/),s=o&&o[1],r=e(s,n),a=d.sortDataParsers[i[1]];
  return t=a?function(t){return t&&a(r(t))}:function(t){return t&&r(t)}}function e(t,e){return t?function(e){return e.getAttribute(t)}:function(t){var i=t.querySelector(e);return i&&i.textContent}}return t}();d.sortDataParsers={parseInt:function(t){return parseInt(t,10)},parseFloat:function(t){return parseFloat(t)}},l._sort=function(){var t=this.options.sortBy;if(t){var e=[].concat.apply(t,this.sortHistory),i=a(e,this.options.sortAscending);this.filteredItems.sort(i),t!=this.sortHistory[0]&&this.sortHistory.unshift(t)}},l._mode=function(){var t=this.options.layoutMode,e=this.modes[t];if(!e)throw new Error("No layout mode: "+t);return e.options=this.options[t],e},l._resetLayout=function(){e.prototype._resetLayout.call(this),this._mode()._resetLayout()},l._getItemLayoutPosition=function(t){return this._mode()._getItemLayoutPosition(t)},l._manageStamp=function(t){this._mode()._manageStamp(t)},l._getContainerSize=function(){return this._mode()._getContainerSize()},l.needsResizeLayout=function(){return this._mode().needsResizeLayout()},l.appended=function(t){var e=this.addItems(t);if(e.length){var i=this._filterRevealAdded(e);this.filteredItems=this.filteredItems.concat(i)}},l.prepended=function(t){var e=this._itemize(t);if(e.length){this._resetLayout(),this._manageStamps();var i=this._filterRevealAdded(e);this.layoutItems(this.filteredItems),this.filteredItems=i.concat(this.filteredItems),this.items=e.concat(this.items)}},l._filterRevealAdded=function(t){var e=this._filter(t);return this.hide(e.needHide),this.reveal(e.matches),this.layoutItems(e.matches,!0),e.matches},l.insert=function(t){var e=this.addItems(t);if(e.length){var i,n,o=e.length;for(i=0;o>i;i++)n=e[i],this.element.appendChild(n.element);var s=this._filter(e).matches;for(i=0;o>i;i++)e[i].isLayoutInstant=!0;for(this.arrange(),i=0;o>i;i++)delete e[i].isLayoutInstant;this.reveal(s)}};var c=l.remove;return l.remove=function(t){t=o.makeArray(t);var e=this.getItems(t);c.call(this,t);for(var i=e&&e.length,n=0;i&&i>n;n++){var s=e[n];o.removeFrom(this.filteredItems,s)}},l.shuffle=function(){for(var t=0;t<this.items.length;t++){var e=this.items[t];e.sortData.random=Math.random()}this.options.sortBy="random",this._sort(),this._layout()},l._noTransition=function(t,e){var i=this.options.transitionDuration;this.options.transitionDuration=0;var n=t.apply(this,e);return this.options.transitionDuration=i,n},l.getFilteredItemElements=function(){return this.filteredItems.map(function(t){return t.element})},d});
/**
 * BxSlider v4.1.2 - Fully loaded, responsive content slider
 * http://bxslider.com
 *
 * Copyright 2014, Steven Wanderski - http://stevenwanderski.com - http://bxcreative.com
 * Written while drinking Belgian ales and listening to jazz
 *
 * Released under the MIT license - http://opensource.org/licenses/MIT
 */

;(function($){

  var plugin = {};

  var defaults = {

    // GENERAL
    mode: 'horizontal',
    slideSelector: '',
    infiniteLoop: true,
    hideControlOnEnd: false,
    speed: 500,
    easing: null,
    slideMargin: 0,
    startSlide: 0,
    randomStart: false,
    captions: false,
    ticker: false,
    tickerHover: false,
    adaptiveHeight: false,
    adaptiveHeightSpeed: 500,
    video: false,
    useCSS: true,
    preloadImages: 'visible',
    responsive: true,
    slideZIndex: 50,
    wrapperClass: 'bx-wrapper',

    // TOUCH
    touchEnabled: true,
    swipeThreshold: 50,
    oneToOneTouch: true,
    preventDefaultSwipeX: true,
    preventDefaultSwipeY: false,

    // PAGER
    pager: true,
    pagerType: 'full',
    pagerShortSeparator: ' / ',
    pagerSelector: null,
    buildPager: null,
    pagerCustom: null,

    // CONTROLS
    controls: true,
    nextText: 'Next',
    prevText: 'Prev',
    nextSelector: null,
    prevSelector: null,
    autoControls: false,
    startText: 'Start',
    stopText: 'Stop',
    autoControlsCombine: false,
    autoControlsSelector: null,

    // AUTO
    auto: false,
    pause: 4000,
    autoStart: true,
    autoDirection: 'next',
    autoHover: false,
    autoDelay: 0,
    autoSlideForOnePage: false,

    // CAROUSEL
    minSlides: 1,
    maxSlides: 1,
    moveSlides: 0,
    slideWidth: 0,

    // CALLBACKS
    onSliderLoad: function() {},
    onSlideBefore: function() {},
    onSlideAfter: function() {},
    onSlideNext: function() {},
    onSlidePrev: function() {},
    onSliderResize: function() {}
  }

  $.fn.bxSlider = function(options){

    if(this.length == 0) return this;

    // support mutltiple elements
    if(this.length > 1){
      this.each(function(){$(this).bxSlider(options)});
      return this;
    }

    // create a namespace to be used throughout the plugin
    var slider = {};
    // set a reference to our slider element
    var el = this;
    plugin.el = this;

    /**
     * Makes slideshow responsive
     */
      // first get the original window dimens (thanks alot IE)
    var windowWidth = $(window).width();
    var windowHeight = $(window).height();



    /**
     * ===================================================================================
     * = PRIVATE FUNCTIONS
     * ===================================================================================
     */

    /**
     * Initializes namespace settings to be used throughout plugin
     */
    var init = function(){
      // merge user-supplied options with the defaults
      slider.settings = $.extend({}, defaults, options);
      // parse slideWidth setting
      slider.settings.slideWidth = parseInt(slider.settings.slideWidth);
      // store the original children
      slider.children = el.children(slider.settings.slideSelector);
      // check if actual number of slides is less than minSlides / maxSlides
      if(slider.children.length < slider.settings.minSlides) slider.settings.minSlides = slider.children.length;
      if(slider.children.length < slider.settings.maxSlides) slider.settings.maxSlides = slider.children.length;
      // if random start, set the startSlide setting to random number
      if(slider.settings.randomStart) slider.settings.startSlide = Math.floor(Math.random() * slider.children.length);
      // store active slide information
      slider.active = { index: slider.settings.startSlide }
      // store if the slider is in carousel mode (displaying / moving multiple slides)
      slider.carousel = slider.settings.minSlides > 1 || slider.settings.maxSlides > 1;
      // if carousel, force preloadImages = 'all'
      if(slider.carousel) slider.settings.preloadImages = 'all';
      // calculate the min / max width thresholds based on min / max number of slides
      // used to setup and update carousel slides dimensions
      slider.minThreshold = (slider.settings.minSlides * slider.settings.slideWidth) + ((slider.settings.minSlides - 1) * slider.settings.slideMargin);
      slider.maxThreshold = (slider.settings.maxSlides * slider.settings.slideWidth) + ((slider.settings.maxSlides - 1) * slider.settings.slideMargin);
      // store the current state of the slider (if currently animating, working is true)
      slider.working = false;
      // initialize the controls object
      slider.controls = {};
      // initialize an auto interval
      slider.interval = null;
      // determine which property to use for transitions
      slider.animProp = slider.settings.mode == 'vertical' ? 'top' : 'left';
      // determine if hardware acceleration can be used
      slider.usingCSS = slider.settings.useCSS && slider.settings.mode != 'fade' && (function(){
        // create our test div element
        var div = document.createElement('div');
        // css transition properties
        var props = ['WebkitPerspective', 'MozPerspective', 'OPerspective', 'msPerspective'];
        // test for each property
        for(var i in props){
          if(div.style[props[i]] !== undefined){
            slider.cssPrefix = props[i].replace('Perspective', '').toLowerCase();
            slider.animProp = '-' + slider.cssPrefix + '-transform';
            return true;
          }
        }
        return false;
      }());
      // if vertical mode always make maxSlides and minSlides equal
      if(slider.settings.mode == 'vertical') slider.settings.maxSlides = slider.settings.minSlides;
      // save original style data
      el.data("origStyle", el.attr("style"));
      el.children(slider.settings.slideSelector).each(function() {
        $(this).data("origStyle", $(this).attr("style"));
      });
      // perform all DOM / CSS modifications
      setup();
    }

    /**
     * Performs all DOM and CSS modifications
     */
    var setup = function(){
      // wrap el in a wrapper
      el.wrap('<div class="' + slider.settings.wrapperClass + '"><div class="bx-viewport"></div></div>');
      // store a namspace reference to .bx-viewport
      slider.viewport = el.parent();
      // add a loading div to display while images are loading
      slider.loader = $('<div class="bx-loading" />');
      slider.viewport.prepend(slider.loader);
      // set el to a massive width, to hold any needed slides
      // also strip any margin and padding from el
      el.css({
        width: slider.settings.mode == 'horizontal' ? (slider.children.length * 100 + 215) + '%' : 'auto',
        position: 'relative'
      });
      // if using CSS, add the easing property
      if(slider.usingCSS && slider.settings.easing){
        el.css('-' + slider.cssPrefix + '-transition-timing-function', slider.settings.easing);
        // if not using CSS and no easing value was supplied, use the default JS animation easing (swing)
      }else if(!slider.settings.easing){
        slider.settings.easing = 'swing';
      }
      var slidesShowing = getNumberSlidesShowing();
      // make modifications to the viewport (.bx-viewport)
      slider.viewport.css({
        width: '100%',
        overflow: 'hidden',
        position: 'relative'
      });
      slider.viewport.parent().css({
        maxWidth: getViewportMaxWidth()
      });
      // make modification to the wrapper (.bx-wrapper)
      if(!slider.settings.pager) {
        slider.viewport.parent().css({
          margin: '0 auto 0px'
        });
      }
      // apply css to all slider children
      slider.children.css({
        'float': slider.settings.mode == 'horizontal' ? 'left' : 'none',
        listStyle: 'none',
        position: 'relative'
      });
      // apply the calculated width after the float is applied to prevent scrollbar interference
      slider.children.css('width', getSlideWidth());
      // if slideMargin is supplied, add the css
      if(slider.settings.mode == 'horizontal' && slider.settings.slideMargin > 0) slider.children.css('marginRight', slider.settings.slideMargin);
      if(slider.settings.mode == 'vertical' && slider.settings.slideMargin > 0) slider.children.css('marginBottom', slider.settings.slideMargin);
      // if "fade" mode, add positioning and z-index CSS
      if(slider.settings.mode == 'fade'){
        slider.children.css({
          position: 'absolute',
          zIndex: 0,
          display: 'none'
        });
        // prepare the z-index on the showing element
        slider.children.eq(slider.settings.startSlide).css({zIndex: slider.settings.slideZIndex, display: 'block'});
      }
      // create an element to contain all slider controls (pager, start / stop, etc)
      slider.controls.el = $('<div class="bx-controls" />');
      // if captions are requested, add them
      if(slider.settings.captions) appendCaptions();
      // check if startSlide is last slide
      slider.active.last = slider.settings.startSlide == getPagerQty() - 1;
      // if video is true, set up the fitVids plugin
      if(slider.settings.video) el.fitVids();
      // set the default preload selector (visible)
      var preloadSelector = slider.children.eq(slider.settings.startSlide);
      if (slider.settings.preloadImages == "all") preloadSelector = slider.children;
      // only check for control addition if not in "ticker" mode
      if(!slider.settings.ticker){
        // if pager is requested, add it
        if(slider.settings.pager) appendPager();
        // if controls are requested, add them
        if(slider.settings.controls) appendControls();
        // if auto is true, and auto controls are requested, add them
        if(slider.settings.auto && slider.settings.autoControls) appendControlsAuto();
        // if any control option is requested, add the controls wrapper
        if(slider.settings.controls || slider.settings.autoControls || slider.settings.pager) slider.viewport.after(slider.controls.el);
        // if ticker mode, do not allow a pager
      }else{
        slider.settings.pager = false;
      }
      // preload all images, then perform final DOM / CSS modifications that depend on images being loaded
      loadElements(preloadSelector, start);
    }

    var loadElements = function(selector, callback){
      var total = selector.find('img, iframe').length;
      if (total == 0){
        callback();
        return;
      }
      var count = 0;
      selector.find('img, iframe').each(function(){
        $(this).one('load', function() {
          if(++count == total) callback();
        }).each(function() {
          if(this.complete) $(this).load();
        });
      });
    }

    /**
     * Start the slider
     */
    var start = function(){
      // if infinite loop, prepare additional slides
      if(slider.settings.infiniteLoop && slider.settings.mode != 'fade' && !slider.settings.ticker){
        var slice = slider.settings.mode == 'vertical' ? slider.settings.minSlides : slider.settings.maxSlides;
        var sliceAppend = slider.children.slice(0, slice).clone().addClass('bx-clone');
        var slicePrepend = slider.children.slice(-slice).clone().addClass('bx-clone');
        el.append(sliceAppend).prepend(slicePrepend);
      }
      // remove the loading DOM element
      slider.loader.remove();
      // set the left / top position of "el"
      setSlidePosition();
      // if "vertical" mode, always use adaptiveHeight to prevent odd behavior
      if (slider.settings.mode == 'vertical') slider.settings.adaptiveHeight = true;
      // set the viewport height
      slider.viewport.height(getViewportHeight());
      // make sure everything is positioned just right (same as a window resize)
      el.redrawSlider();
      // onSliderLoad callback
      slider.settings.onSliderLoad(slider.active.index);
      // slider has been fully initialized
      slider.initialized = true;
      // bind the resize call to the window
      if (slider.settings.responsive) $(window).bind('resize', resizeWindow);
      // if auto is true and has more than 1 page, start the show
      if (slider.settings.auto && slider.settings.autoStart && (getPagerQty() > 1 || slider.settings.autoSlideForOnePage)) initAuto();
      // if ticker is true, start the ticker
      if (slider.settings.ticker) initTicker();
      // if pager is requested, make the appropriate pager link active
      if (slider.settings.pager) updatePagerActive(slider.settings.startSlide);
      // check for any updates to the controls (like hideControlOnEnd updates)
      if (slider.settings.controls) updateDirectionControls();
      // if touchEnabled is true, setup the touch events
      if (slider.settings.touchEnabled && !slider.settings.ticker) initTouch();
    }

    /**
     * Returns the calculated height of the viewport, used to determine either adaptiveHeight or the maxHeight value
     */
    var getViewportHeight = function(){
      var height = 0;
      // first determine which children (slides) should be used in our height calculation
      var children = $();
      // if mode is not "vertical" and adaptiveHeight is false, include all children
      if(slider.settings.mode != 'vertical' && !slider.settings.adaptiveHeight){
        children = slider.children;
      }else{
        // if not carousel, return the single active child
        if(!slider.carousel){
          children = slider.children.eq(slider.active.index);
          // if carousel, return a slice of children
        }else{
          // get the individual slide index
          var currentIndex = slider.settings.moveSlides == 1 ? slider.active.index : slider.active.index * getMoveBy();
          // add the current slide to the children
          children = slider.children.eq(currentIndex);
          // cycle through the remaining "showing" slides
          for (i = 1; i <= slider.settings.maxSlides - 1; i++){
            // if looped back to the start
            if(currentIndex + i >= slider.children.length){
              children = children.add(slider.children.eq(i - 1));
            }else{
              children = children.add(slider.children.eq(currentIndex + i));
            }
          }
        }
      }
      // if "vertical" mode, calculate the sum of the heights of the children
      if(slider.settings.mode == 'vertical'){
        children.each(function(index) {
          height += $(this).outerHeight();
        });
        // add user-supplied margins
        if(slider.settings.slideMargin > 0){
          height += slider.settings.slideMargin * (slider.settings.minSlides - 1);
        }
        // if not "vertical" mode, calculate the max height of the children
      }else{
        height = Math.max.apply(Math, children.map(function(){
          return $(this).outerHeight(false);
        }).get());
      }

      if(slider.viewport.css('box-sizing') == 'border-box'){
        height +=	parseFloat(slider.viewport.css('padding-top')) + parseFloat(slider.viewport.css('padding-bottom')) +
          parseFloat(slider.viewport.css('border-top-width')) + parseFloat(slider.viewport.css('border-bottom-width'));
      }else if(slider.viewport.css('box-sizing') == 'padding-box'){
        height +=	parseFloat(slider.viewport.css('padding-top')) + parseFloat(slider.viewport.css('padding-bottom'));
      }

      return height;
    }

    /**
     * Returns the calculated width to be used for the outer wrapper / viewport
     */
    var getViewportMaxWidth = function(){
      var width = '100%';
      if(slider.settings.slideWidth > 0){
        if(slider.settings.mode == 'horizontal'){
          width = (slider.settings.maxSlides * slider.settings.slideWidth) + ((slider.settings.maxSlides - 1) * slider.settings.slideMargin);
        }else{
          width = slider.settings.slideWidth;
        }
      }
      return width;
    }

    /**
     * Returns the calculated width to be applied to each slide
     */
    var getSlideWidth = function(){
      // start with any user-supplied slide width
      var newElWidth = slider.settings.slideWidth;
      // get the current viewport width
      var wrapWidth = slider.viewport.width();
      // if slide width was not supplied, or is larger than the viewport use the viewport width
      if(slider.settings.slideWidth == 0 ||
        (slider.settings.slideWidth > wrapWidth && !slider.carousel) ||
        slider.settings.mode == 'vertical'){
        newElWidth = wrapWidth;
        // if carousel, use the thresholds to determine the width
      }else if(slider.settings.maxSlides > 1 && slider.settings.mode == 'horizontal'){
        if(wrapWidth > slider.maxThreshold){
          // newElWidth = (wrapWidth - (slider.settings.slideMargin * (slider.settings.maxSlides - 1))) / slider.settings.maxSlides;
        }else if(wrapWidth < slider.minThreshold){
          newElWidth = (wrapWidth - (slider.settings.slideMargin * (slider.settings.minSlides - 1))) / slider.settings.minSlides;
        }
      }
      return newElWidth;
    }

    /**
     * Returns the number of slides currently visible in the viewport (includes partially visible slides)
     */
    var getNumberSlidesShowing = function(){
      var slidesShowing = 1;
      if(slider.settings.mode == 'horizontal' && slider.settings.slideWidth > 0){
        // if viewport is smaller than minThreshold, return minSlides
        if(slider.viewport.width() < slider.minThreshold){
          slidesShowing = slider.settings.minSlides;
          // if viewport is larger than minThreshold, return maxSlides
        }else if(slider.viewport.width() > slider.maxThreshold){
          slidesShowing = slider.settings.maxSlides;
          // if viewport is between min / max thresholds, divide viewport width by first child width
        }else{
          var childWidth = slider.children.first().width() + slider.settings.slideMargin;
          slidesShowing = Math.floor((slider.viewport.width() +
            slider.settings.slideMargin) / childWidth);
        }
        // if "vertical" mode, slides showing will always be minSlides
      }else if(slider.settings.mode == 'vertical'){
        slidesShowing = slider.settings.minSlides;
      }
      return slidesShowing;
    }

    /**
     * Returns the number of pages (one full viewport of slides is one "page")
     */
    var getPagerQty = function(){
      var pagerQty = 0;
      // if moveSlides is specified by the user
      if(slider.settings.moveSlides > 0){
        if(slider.settings.infiniteLoop){
          pagerQty = Math.ceil(slider.children.length / getMoveBy());
        }else{
          // use a while loop to determine pages
          var breakPoint = 0;
          var counter = 0
          // when breakpoint goes above children length, counter is the number of pages
          while (breakPoint < slider.children.length){
            ++pagerQty;
            breakPoint = counter + getNumberSlidesShowing();
            counter += slider.settings.moveSlides <= getNumberSlidesShowing() ? slider.settings.moveSlides : getNumberSlidesShowing();
          }
        }
        // if moveSlides is 0 (auto) divide children length by sides showing, then round up
      }else{
        pagerQty = Math.ceil(slider.children.length / getNumberSlidesShowing());
      }
      return pagerQty;
    }

    /**
     * Returns the number of indivual slides by which to shift the slider
     */
    var getMoveBy = function(){
      // if moveSlides was set by the user and moveSlides is less than number of slides showing
      if(slider.settings.moveSlides > 0 && slider.settings.moveSlides <= getNumberSlidesShowing()){
        return slider.settings.moveSlides;
      }
      // if moveSlides is 0 (auto)
      return getNumberSlidesShowing();
    }

    /**
     * Sets the slider's (el) left or top position
     */
    var setSlidePosition = function(){
      // if last slide, not infinite loop, and number of children is larger than specified maxSlides
      if(slider.children.length > slider.settings.maxSlides && slider.active.last && !slider.settings.infiniteLoop){
        if (slider.settings.mode == 'horizontal'){
          // get the last child's position
          var lastChild = slider.children.last();
          var position = lastChild.position();
          // set the left position
          setPositionProperty(-(position.left - (slider.viewport.width() - lastChild.outerWidth())), 'reset', 0);
        }else if(slider.settings.mode == 'vertical'){
          // get the last showing index's position
          var lastShowingIndex = slider.children.length - slider.settings.minSlides;
          var position = slider.children.eq(lastShowingIndex).position();
          // set the top position
          setPositionProperty(-position.top, 'reset', 0);
        }
        // if not last slide
      }else{
        // get the position of the first showing slide
        var position = slider.children.eq(slider.active.index * getMoveBy()).position();
        // check for last slide
        if (slider.active.index == getPagerQty() - 1) slider.active.last = true;
        // set the repective position
        if (position != undefined){
          if (slider.settings.mode == 'horizontal') setPositionProperty(-position.left, 'reset', 0);
          else if (slider.settings.mode == 'vertical') setPositionProperty(-position.top, 'reset', 0);
        }
      }
    }

    /**
     * Sets the el's animating property position (which in turn will sometimes animate el).
     * If using CSS, sets the transform property. If not using CSS, sets the top / left property.
     *
     * @param value (int)
     *  - the animating property's value
     *
     * @param type (string) 'slider', 'reset', 'ticker'
     *  - the type of instance for which the function is being
     *
     * @param duration (int)
     *  - the amount of time (in ms) the transition should occupy
     *
     * @param params (array) optional
     *  - an optional parameter containing any variables that need to be passed in
     */
    var setPositionProperty = function(value, type, duration, params){
      // use CSS transform
      if(slider.usingCSS){
        // determine the translate3d value
        var propValue = slider.settings.mode == 'vertical' ? 'translate3d(0, ' + value + 'px, 0)' : 'translate3d(' + value + 'px, 0, 0)';
        // add the CSS transition-duration
        el.css('-' + slider.cssPrefix + '-transition-duration', duration / 1000 + 's');
        if(type == 'slide'){
          // set the property value
          el.css(slider.animProp, propValue);
          // bind a callback method - executes when CSS transition completes
          el.bind('transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd', function(){
            // unbind the callback
            el.unbind('transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd');
            updateAfterSlideTransition();
          });
        }else if(type == 'reset'){
          el.css(slider.animProp, propValue);
        }else if(type == 'ticker'){
          // make the transition use 'linear'
          el.css('-' + slider.cssPrefix + '-transition-timing-function', 'linear');
          el.css(slider.animProp, propValue);
          // bind a callback method - executes when CSS transition completes
          el.bind('transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd', function(){
            // unbind the callback
            el.unbind('transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd');
            // reset the position
            setPositionProperty(params['resetValue'], 'reset', 0);
            // start the loop again
            tickerLoop();
          });
        }
        // use JS animate
      }else{
        var animateObj = {};
        animateObj[slider.animProp] = value;
        if(type == 'slide'){
          el.animate(animateObj, duration, slider.settings.easing, function(){
            updateAfterSlideTransition();
          });
        }else if(type == 'reset'){
          el.css(slider.animProp, value)
        }else if(type == 'ticker'){
          el.animate(animateObj, speed, 'linear', function(){
            setPositionProperty(params['resetValue'], 'reset', 0);
            // run the recursive loop after animation
            tickerLoop();
          });
        }
      }
    }

    /**
     * Populates the pager with proper amount of pages
     */
    var populatePager = function(){
      var pagerHtml = '';
      var pagerQty = getPagerQty();
      // loop through each pager item
      for(var i=0; i < pagerQty; i++){
        var linkContent = '';
        // if a buildPager function is supplied, use it to get pager link value, else use index + 1
        if(slider.settings.buildPager && $.isFunction(slider.settings.buildPager)){
          linkContent = slider.settings.buildPager(i);
          slider.pagerEl.addClass('bx-custom-pager');
        }else{
          linkContent = i + 1;
          slider.pagerEl.addClass('bx-default-pager');
        }
        // var linkContent = slider.settings.buildPager && $.isFunction(slider.settings.buildPager) ? slider.settings.buildPager(i) : i + 1;
        // add the markup to the string
        pagerHtml += '<div class="bx-pager-item"><a href="" data-slide-index="' + i + '" class="bx-pager-link">' + linkContent + '</a></div>';
      };
      // populate the pager element with pager links
      slider.pagerEl.html(pagerHtml);
    }

    /**
     * Appends the pager to the controls element
     */
    var appendPager = function(){
      if(!slider.settings.pagerCustom){
        // create the pager DOM element
        slider.pagerEl = $('<div class="bx-pager" />');
        // if a pager selector was supplied, populate it with the pager
        if(slider.settings.pagerSelector){
          $(slider.settings.pagerSelector).html(slider.pagerEl);
          // if no pager selector was supplied, add it after the wrapper
        }else{
          slider.controls.el.addClass('bx-has-pager').append(slider.pagerEl);
        }
        // populate the pager
        populatePager();
      }else{
        slider.pagerEl = $(slider.settings.pagerCustom);
      }
      // assign the pager click binding
      slider.pagerEl.on('click', 'a', clickPagerBind);
    }

    /**
     * Appends prev / next controls to the controls element
     */
    var appendControls = function(){
      slider.controls.next = $('<a class="bx-next" href="">' + slider.settings.nextText + '</a>');
      slider.controls.prev = $('<a class="bx-prev" href="">' + slider.settings.prevText + '</a>');
      // bind click actions to the controls
      slider.controls.next.bind('click', clickNextBind);
      slider.controls.prev.bind('click', clickPrevBind);
      // if nextSlector was supplied, populate it
      if(slider.settings.nextSelector){
        $(slider.settings.nextSelector).append(slider.controls.next);
      }
      // if prevSlector was supplied, populate it
      if(slider.settings.prevSelector){
        $(slider.settings.prevSelector).append(slider.controls.prev);
      }
      // if no custom selectors were supplied
      if(!slider.settings.nextSelector && !slider.settings.prevSelector){
        // add the controls to the DOM
        slider.controls.directionEl = $('<div class="bx-controls-direction" />');
        // add the control elements to the directionEl
        slider.controls.directionEl.append(slider.controls.prev).append(slider.controls.next);
        // slider.viewport.append(slider.controls.directionEl);
        slider.controls.el.addClass('bx-has-controls-direction').append(slider.controls.directionEl);
      }
    }

    /**
     * Appends start / stop auto controls to the controls element
     */
    var appendControlsAuto = function(){
      slider.controls.start = $('<div class="bx-controls-auto-item"><a class="bx-start" href="">' + slider.settings.startText + '</a></div>');
      slider.controls.stop = $('<div class="bx-controls-auto-item"><a class="bx-stop" href="">' + slider.settings.stopText + '</a></div>');
      // add the controls to the DOM
      slider.controls.autoEl = $('<div class="bx-controls-auto" />');
      // bind click actions to the controls
      slider.controls.autoEl.on('click', '.bx-start', clickStartBind);
      slider.controls.autoEl.on('click', '.bx-stop', clickStopBind);
      // if autoControlsCombine, insert only the "start" control
      if(slider.settings.autoControlsCombine){
        slider.controls.autoEl.append(slider.controls.start);
        // if autoControlsCombine is false, insert both controls
      }else{
        slider.controls.autoEl.append(slider.controls.start).append(slider.controls.stop);
      }
      // if auto controls selector was supplied, populate it with the controls
      if(slider.settings.autoControlsSelector){
        $(slider.settings.autoControlsSelector).html(slider.controls.autoEl);
        // if auto controls selector was not supplied, add it after the wrapper
      }else{
        slider.controls.el.addClass('bx-has-controls-auto').append(slider.controls.autoEl);
      }
      // update the auto controls
      updateAutoControls(slider.settings.autoStart ? 'stop' : 'start');
    }

    /**
     * Appends image captions to the DOM
     */
    var appendCaptions = function(){
      // cycle through each child
      slider.children.each(function(index){
        // get the image title attribute
        var title = $(this).find('img:first').attr('title');
        // append the caption
        if (title != undefined && ('' + title).length) {
          $(this).append('<div class="bx-caption"><span>' + title + '</span></div>');
        }
      });
    }

    /**
     * Click next binding
     *
     * @param e (event)
     *  - DOM event object
     */
    var clickNextBind = function(e){
      // if auto show is running, stop it
      if (slider.settings.auto) el.stopAuto();
      el.goToNextSlide();
      e.preventDefault();
    }

    /**
     * Click prev binding
     *
     * @param e (event)
     *  - DOM event object
     */
    var clickPrevBind = function(e){
      // if auto show is running, stop it
      if (slider.settings.auto) el.stopAuto();
      el.goToPrevSlide();
      e.preventDefault();
    }

    /**
     * Click start binding
     *
     * @param e (event)
     *  - DOM event object
     */
    var clickStartBind = function(e){
      el.startAuto();
      e.preventDefault();
    }

    /**
     * Click stop binding
     *
     * @param e (event)
     *  - DOM event object
     */
    var clickStopBind = function(e){
      el.stopAuto();
      e.preventDefault();
    }

    /**
     * Click pager binding
     *
     * @param e (event)
     *  - DOM event object
     */
    var clickPagerBind = function(e){
      // if auto show is running, stop it
      if (slider.settings.auto) el.stopAuto();
      var pagerLink = $(e.currentTarget);
      if(pagerLink.attr('data-slide-index') !== undefined){
        var pagerIndex = parseInt(pagerLink.attr('data-slide-index'));
        // if clicked pager link is not active, continue with the goToSlide call
        if(pagerIndex != slider.active.index) el.goToSlide(pagerIndex);
        e.preventDefault();
      }
    }

    /**
     * Updates the pager links with an active class
     *
     * @param slideIndex (int)
     *  - index of slide to make active
     */
    var updatePagerActive = function(slideIndex){
      // if "short" pager type
      var len = slider.children.length; // nb of children
      if(slider.settings.pagerType == 'short'){
        if(slider.settings.maxSlides > 1) {
          len = Math.ceil(slider.children.length/slider.settings.maxSlides);
        }
        slider.pagerEl.html( (slideIndex + 1) + slider.settings.pagerShortSeparator + len);
        return;
      }
      // remove all pager active classes
      slider.pagerEl.find('a').removeClass('active');
      // apply the active class for all pagers
      slider.pagerEl.each(function(i, el) { $(el).find('a').eq(slideIndex).addClass('active'); });
    }

    /**
     * Performs needed actions after a slide transition
     */
    var updateAfterSlideTransition = function(){
      // if infinte loop is true
      if(slider.settings.infiniteLoop){
        var position = '';
        // first slide
        if(slider.active.index == 0){
          // set the new position
          position = slider.children.eq(0).position();
          // carousel, last slide
        }else if(slider.active.index == getPagerQty() - 1 && slider.carousel){
          position = slider.children.eq((getPagerQty() - 1) * getMoveBy()).position();
          // last slide
        }else if(slider.active.index == slider.children.length - 1){
          position = slider.children.eq(slider.children.length - 1).position();
        }
        if(position){
          if (slider.settings.mode == 'horizontal') { setPositionProperty(-position.left, 'reset', 0); }
          else if (slider.settings.mode == 'vertical') { setPositionProperty(-position.top, 'reset', 0); }
        }
      }
      // declare that the transition is complete
      slider.working = false;
      // onSlideAfter callback
      slider.settings.onSlideAfter(slider.children.eq(slider.active.index), slider.oldIndex, slider.active.index);
    }

    /**
     * Updates the auto controls state (either active, or combined switch)
     *
     * @param state (string) "start", "stop"
     *  - the new state of the auto show
     */
    var updateAutoControls = function(state){
      // if autoControlsCombine is true, replace the current control with the new state
      if(slider.settings.autoControlsCombine){
        slider.controls.autoEl.html(slider.controls[state]);
        // if autoControlsCombine is false, apply the "active" class to the appropriate control
      }else{
        slider.controls.autoEl.find('a').removeClass('active');
        slider.controls.autoEl.find('a:not(.bx-' + state + ')').addClass('active');
      }
    }

    /**
     * Updates the direction controls (checks if either should be hidden)
     */
    var updateDirectionControls = function(){
      if(getPagerQty() == 1){
        slider.controls.prev.addClass('disabled');
        slider.controls.next.addClass('disabled');
      }else if(!slider.settings.infiniteLoop && slider.settings.hideControlOnEnd){
        // if first slide
        if (slider.active.index == 0){
          slider.controls.prev.addClass('disabled');
          slider.controls.next.removeClass('disabled');
          // if last slide
        }else if(slider.active.index == getPagerQty() - 1){
          slider.controls.next.addClass('disabled');
          slider.controls.prev.removeClass('disabled');
          // if any slide in the middle
        }else{
          slider.controls.prev.removeClass('disabled');
          slider.controls.next.removeClass('disabled');
        }
      }
    }

    /**
     * Initialzes the auto process
     */
    var initAuto = function(){
      // if autoDelay was supplied, launch the auto show using a setTimeout() call
      if(slider.settings.autoDelay > 0){
        var timeout = setTimeout(el.startAuto, slider.settings.autoDelay);
        // if autoDelay was not supplied, start the auto show normally
      }else{
        el.startAuto();
      }
      // if autoHover is requested
      if(slider.settings.autoHover){
        // on el hover
        el.hover(function(){
          // if the auto show is currently playing (has an active interval)
          if(slider.interval){
            // stop the auto show and pass true agument which will prevent control update
            el.stopAuto(true);
            // create a new autoPaused value which will be used by the relative "mouseout" event
            slider.autoPaused = true;
          }
        }, function(){
          // if the autoPaused value was created be the prior "mouseover" event
          if(slider.autoPaused){
            // start the auto show and pass true agument which will prevent control update
            el.startAuto(true);
            // reset the autoPaused value
            slider.autoPaused = null;
          }
        });
      }
    }

    /**
     * Initialzes the ticker process
     */
    var initTicker = function(){
      var startPosition = 0;
      // if autoDirection is "next", append a clone of the entire slider
      if(slider.settings.autoDirection == 'next'){
        el.append(slider.children.clone().addClass('bx-clone'));
        // if autoDirection is "prev", prepend a clone of the entire slider, and set the left position
      }else{
        el.prepend(slider.children.clone().addClass('bx-clone'));
        var position = slider.children.first().position();
        startPosition = slider.settings.mode == 'horizontal' ? -position.left : -position.top;
      }
      setPositionProperty(startPosition, 'reset', 0);
      // do not allow controls in ticker mode
      slider.settings.pager = false;
      slider.settings.controls = false;
      slider.settings.autoControls = false;
      // if autoHover is requested
      if(slider.settings.tickerHover && !slider.usingCSS){
        // on el hover
        slider.viewport.hover(function(){
          el.stop();
        }, function(){
          // calculate the total width of children (used to calculate the speed ratio)
          var totalDimens = 0;
          slider.children.each(function(index){
            totalDimens += slider.settings.mode == 'horizontal' ? $(this).outerWidth(true) : $(this).outerHeight(true);
          });
          // calculate the speed ratio (used to determine the new speed to finish the paused animation)
          var ratio = slider.settings.speed / totalDimens;
          // determine which property to use
          var property = slider.settings.mode == 'horizontal' ? 'left' : 'top';
          // calculate the new speed
          var newSpeed = ratio * (totalDimens - (Math.abs(parseInt(el.css(property)))));
          tickerLoop(newSpeed);
        });
      }
      // start the ticker loop
      tickerLoop();
    }

    /**
     * Runs a continuous loop, news ticker-style
     */
    var tickerLoop = function(resumeSpeed){
      speed = resumeSpeed ? resumeSpeed : slider.settings.speed;
      var position = {left: 0, top: 0};
      var reset = {left: 0, top: 0};
      // if "next" animate left position to last child, then reset left to 0
      if(slider.settings.autoDirection == 'next'){
        position = el.find('.bx-clone').first().position();
        // if "prev" animate left position to 0, then reset left to first non-clone child
      }else{
        reset = slider.children.first().position();
      }
      var animateProperty = slider.settings.mode == 'horizontal' ? -position.left : -position.top;
      var resetValue = slider.settings.mode == 'horizontal' ? -reset.left : -reset.top;
      var params = {resetValue: resetValue};
      setPositionProperty(animateProperty, 'ticker', speed, params);
    }

    /**
     * Initializes touch events
     */
    var initTouch = function(){
      // initialize object to contain all touch values
      slider.touch = {
        start: {x: 0, y: 0},
        end: {x: 0, y: 0}
      }
      slider.viewport.bind('touchstart', onTouchStart);
    }

    /**
     * Event handler for "touchstart"
     *
     * @param e (event)
     *  - DOM event object
     */
    var onTouchStart = function(e){
      if(slider.working){
        e.preventDefault();
      }else{
        // record the original position when touch starts
        slider.touch.originalPos = el.position();
        var orig = e.originalEvent;
        // record the starting touch x, y coordinates
        slider.touch.start.x = orig.changedTouches[0].pageX;
        slider.touch.start.y = orig.changedTouches[0].pageY;
        // bind a "touchmove" event to the viewport
        slider.viewport.bind('touchmove', onTouchMove);
        // bind a "touchend" event to the viewport
        slider.viewport.bind('touchend', onTouchEnd);
      }
    }

    /**
     * Event handler for "touchmove"
     *
     * @param e (event)
     *  - DOM event object
     */
    var onTouchMove = function(e){
      var orig = e.originalEvent;
      // if scrolling on y axis, do not prevent default
      var xMovement = Math.abs(orig.changedTouches[0].pageX - slider.touch.start.x);
      var yMovement = Math.abs(orig.changedTouches[0].pageY - slider.touch.start.y);
      // x axis swipe
      if((xMovement * 3) > yMovement && slider.settings.preventDefaultSwipeX){
        e.preventDefault();
        // y axis swipe
      }else if((yMovement * 3) > xMovement && slider.settings.preventDefaultSwipeY){
        e.preventDefault();
      }
      if(slider.settings.mode != 'fade' && slider.settings.oneToOneTouch){
        var value = 0;
        // if horizontal, drag along x axis
        if(slider.settings.mode == 'horizontal'){
          var change = orig.changedTouches[0].pageX - slider.touch.start.x;
          value = slider.touch.originalPos.left + change;
          // if vertical, drag along y axis
        }else{
          var change = orig.changedTouches[0].pageY - slider.touch.start.y;
          value = slider.touch.originalPos.top + change;
        }
        setPositionProperty(value, 'reset', 0);
      }
    }

    /**
     * Event handler for "touchend"
     *
     * @param e (event)
     *  - DOM event object
     */
    var onTouchEnd = function(e){
      slider.viewport.unbind('touchmove', onTouchMove);
      var orig = e.originalEvent;
      var value = 0;
      // record end x, y positions
      slider.touch.end.x = orig.changedTouches[0].pageX;
      slider.touch.end.y = orig.changedTouches[0].pageY;
      // if fade mode, check if absolute x distance clears the threshold
      if(slider.settings.mode == 'fade'){
        var distance = Math.abs(slider.touch.start.x - slider.touch.end.x);
        if(distance >= slider.settings.swipeThreshold){
          slider.touch.start.x > slider.touch.end.x ? el.goToNextSlide() : el.goToPrevSlide();
          el.stopAuto();
        }
        // not fade mode
      }else{
        var distance = 0;
        // calculate distance and el's animate property
        if(slider.settings.mode == 'horizontal'){
          distance = slider.touch.end.x - slider.touch.start.x;
          value = slider.touch.originalPos.left;
        }else{
          distance = slider.touch.end.y - slider.touch.start.y;
          value = slider.touch.originalPos.top;
        }
        // if not infinite loop and first / last slide, do not attempt a slide transition
        if(!slider.settings.infiniteLoop && ((slider.active.index == 0 && distance > 0) || (slider.active.last && distance < 0))){
          setPositionProperty(value, 'reset', 200);
        }else{
          // check if distance clears threshold
          if(Math.abs(distance) >= slider.settings.swipeThreshold){
            distance < 0 ? el.goToNextSlide() : el.goToPrevSlide();
            el.stopAuto();
          }else{
            // el.animate(property, 200);
            setPositionProperty(value, 'reset', 200);
          }
        }
      }
      slider.viewport.unbind('touchend', onTouchEnd);
    }

    /**
     * Window resize event callback
     */
    var resizeWindow = function(e){
      // don't do anything if slider isn't initialized.
      if(!slider.initialized) return;
      // get the new window dimens (again, thank you IE)
      var windowWidthNew = $(window).width();
      var windowHeightNew = $(window).height();
      // make sure that it is a true window resize
      // *we must check this because our dinosaur friend IE fires a window resize event when certain DOM elements
      // are resized. Can you just die already?*
      if(windowWidth != windowWidthNew || windowHeight != windowHeightNew){
        // set the new window dimens
        windowWidth = windowWidthNew;
        windowHeight = windowHeightNew;
        // update all dynamic elements
        el.redrawSlider();
        // Call user resize handler
        slider.settings.onSliderResize.call(el, slider.active.index);
      }
    }

    /**
     * ===================================================================================
     * = PUBLIC FUNCTIONS
     * ===================================================================================
     */

    /**
     * Performs slide transition to the specified slide
     *
     * @param slideIndex (int)
     *  - the destination slide's index (zero-based)
     *
     * @param direction (string)
     *  - INTERNAL USE ONLY - the direction of travel ("prev" / "next")
     */
    el.goToSlide = function(slideIndex, direction){
      // if plugin is currently in motion, ignore request
      if(slider.working || slider.active.index == slideIndex) return;
      // declare that plugin is in motion
      slider.working = true;
      // store the old index
      slider.oldIndex = slider.active.index;
      // if slideIndex is less than zero, set active index to last child (this happens during infinite loop)
      if(slideIndex < 0){
        slider.active.index = getPagerQty() - 1;
        // if slideIndex is greater than children length, set active index to 0 (this happens during infinite loop)
      }else if(slideIndex >= getPagerQty()){
        slider.active.index = 0;
        // set active index to requested slide
      }else{
        slider.active.index = slideIndex;
      }
      // onSlideBefore, onSlideNext, onSlidePrev callbacks
      slider.settings.onSlideBefore(slider.children.eq(slider.active.index), slider.oldIndex, slider.active.index);
      if(direction == 'next'){
        slider.settings.onSlideNext(slider.children.eq(slider.active.index), slider.oldIndex, slider.active.index);
      }else if(direction == 'prev'){
        slider.settings.onSlidePrev(slider.children.eq(slider.active.index), slider.oldIndex, slider.active.index);
      }
      // check if last slide
      slider.active.last = slider.active.index >= getPagerQty() - 1;
      // update the pager with active class
      if(slider.settings.pager) updatePagerActive(slider.active.index);
      // // check for direction control update
      if(slider.settings.controls) updateDirectionControls();
      // if slider is set to mode: "fade"
      if(slider.settings.mode == 'fade'){
        // if adaptiveHeight is true and next height is different from current height, animate to the new height
        if(slider.settings.adaptiveHeight && slider.viewport.height() != getViewportHeight()){
          slider.viewport.animate({height: getViewportHeight()}, slider.settings.adaptiveHeightSpeed);
        }
        // fade out the visible child and reset its z-index value
        slider.children.filter(':visible').fadeOut(slider.settings.speed).css({zIndex: 0});
        // fade in the newly requested slide
        slider.children.eq(slider.active.index).css('zIndex', slider.settings.slideZIndex+1).fadeIn(slider.settings.speed, function(){
          $(this).css('zIndex', slider.settings.slideZIndex);
          updateAfterSlideTransition();
        });
        // slider mode is not "fade"
      }else{
        // if adaptiveHeight is true and next height is different from current height, animate to the new height
        if(slider.settings.adaptiveHeight && slider.viewport.height() != getViewportHeight()){
          slider.viewport.animate({height: getViewportHeight()}, slider.settings.adaptiveHeightSpeed);
        }
        var moveBy = 0;
        var position = {left: 0, top: 0};
        // if carousel and not infinite loop
        if(!slider.settings.infiniteLoop && slider.carousel && slider.active.last){
          if(slider.settings.mode == 'horizontal'){
            // get the last child position
            var lastChild = slider.children.eq(slider.children.length - 1);
            position = lastChild.position();
            // calculate the position of the last slide
            moveBy = slider.viewport.width() - lastChild.outerWidth();
          }else{
            // get last showing index position
            var lastShowingIndex = slider.children.length - slider.settings.minSlides;
            position = slider.children.eq(lastShowingIndex).position();
          }
          // horizontal carousel, going previous while on first slide (infiniteLoop mode)
        }else if(slider.carousel && slider.active.last && direction == 'prev'){
          // get the last child position
          var eq = slider.settings.moveSlides == 1 ? slider.settings.maxSlides - getMoveBy() : ((getPagerQty() - 1) * getMoveBy()) - (slider.children.length - slider.settings.maxSlides);
          var lastChild = el.children('.bx-clone').eq(eq);
          position = lastChild.position();
          // if infinite loop and "Next" is clicked on the last slide
        }else if(direction == 'next' && slider.active.index == 0){
          // get the last clone position
          position = el.find('> .bx-clone').eq(slider.settings.maxSlides).position();
          slider.active.last = false;
          // normal non-zero requests
        }else if(slideIndex >= 0){
          var requestEl = slideIndex * getMoveBy();
          position = slider.children.eq(requestEl).position();
        }

        /* If the position doesn't exist
				 * (e.g. if you destroy the slider on a next click),
				 * it doesn't throw an error.
				 */
        if ("undefined" !== typeof(position)) {
          var value = slider.settings.mode == 'horizontal' ? -(position.left - moveBy) : -position.top;
          // plugin values to be animated
          setPositionProperty(value, 'slide', slider.settings.speed);
        }
      }
    }

    /**
     * Transitions to the next slide in the show
     */
    el.goToNextSlide = function(){
      // if infiniteLoop is false and last page is showing, disregard call
      if (!slider.settings.infiniteLoop && slider.active.last) return;
      var pagerIndex = parseInt(slider.active.index) + 1;
      el.goToSlide(pagerIndex, 'next');
    }

    /**
     * Transitions to the prev slide in the show
     */
    el.goToPrevSlide = function(){
      // if infiniteLoop is false and last page is showing, disregard call
      if (!slider.settings.infiniteLoop && slider.active.index == 0) return;
      var pagerIndex = parseInt(slider.active.index) - 1;
      el.goToSlide(pagerIndex, 'prev');
    }

    /**
     * Starts the auto show
     *
     * @param preventControlUpdate (boolean)
     *  - if true, auto controls state will not be updated
     */
    el.startAuto = function(preventControlUpdate){
      // if an interval already exists, disregard call
      if(slider.interval) return;
      // create an interval
      slider.interval = setInterval(function(){
        slider.settings.autoDirection == 'next' ? el.goToNextSlide() : el.goToPrevSlide();
      }, slider.settings.pause);
      // if auto controls are displayed and preventControlUpdate is not true
      if (slider.settings.autoControls && preventControlUpdate != true) updateAutoControls('stop');
    }

    /**
     * Stops the auto show
     *
     * @param preventControlUpdate (boolean)
     *  - if true, auto controls state will not be updated
     */
    el.stopAuto = function(preventControlUpdate){
      // if no interval exists, disregard call
      if(!slider.interval) return;
      // clear the interval
      clearInterval(slider.interval);
      slider.interval = null;
      // if auto controls are displayed and preventControlUpdate is not true
      if (slider.settings.autoControls && preventControlUpdate != true) updateAutoControls('start');
    }

    /**
     * Returns current slide index (zero-based)
     */
    el.getCurrentSlide = function(){
      return slider.active.index;
    }

    /**
     * Returns current slide element
     */
    el.getCurrentSlideElement = function(){
      return slider.children.eq(slider.active.index);
    }

    /**
     * Returns number of slides in show
     */
    el.getSlideCount = function(){
      return slider.children.length;
    }

    /**
     * Update all dynamic slider elements
     */
    el.redrawSlider = function(){
      // resize all children in ratio to new screen size
      slider.children.add(el.find('.bx-clone')).width(getSlideWidth());
      // adjust the height
      slider.viewport.css('height', getViewportHeight());
      // update the slide position
      if(!slider.settings.ticker) setSlidePosition();
      // if active.last was true before the screen resize, we want
      // to keep it last no matter what screen size we end on
      if (slider.active.last) slider.active.index = getPagerQty() - 1;
      // if the active index (page) no longer exists due to the resize, simply set the index as last
      if (slider.active.index >= getPagerQty()) slider.active.last = true;
      // if a pager is being displayed and a custom pager is not being used, update it
      if(slider.settings.pager && !slider.settings.pagerCustom){
        populatePager();
        updatePagerActive(slider.active.index);
      }
    }

    /**
     * Destroy the current instance of the slider (revert everything back to original state)
     */
    el.destroySlider = function(){
      // don't do anything if slider has already been destroyed
      if(!slider.initialized) return;
      slider.initialized = false;
      $('.bx-clone', this).remove();
      slider.children.each(function() {
        $(this).data("origStyle") != undefined ? $(this).attr("style", $(this).data("origStyle")) : $(this).removeAttr('style');
      });
      $(this).data("origStyle") != undefined ? this.attr("style", $(this).data("origStyle")) : $(this).removeAttr('style');
      $(this).unwrap().unwrap();
      if(slider.controls.el) slider.controls.el.remove();
      if(slider.controls.next) slider.controls.next.remove();
      if(slider.controls.prev) slider.controls.prev.remove();
      if(slider.pagerEl && slider.settings.controls) slider.pagerEl.remove();
      $('.bx-caption', this).remove();
      if(slider.controls.autoEl) slider.controls.autoEl.remove();
      clearInterval(slider.interval);
      if(slider.settings.responsive) $(window).unbind('resize', resizeWindow);
    }

    /**
     * Reload the slider (revert all DOM changes, and re-initialize)
     */
    el.reloadSlider = function(settings){
      if (settings != undefined) options = settings;
      el.destroySlider();
      init();
    }

    init();

    // returns the current jQuery object
    return this;
  }

})(jQuery);

/*global jQuery */
/*!
* FlexVerticalCenter.js 1.0
*
* Copyright 2011, Paul Sprangers http://paulsprangers.com
* Released under the WTFPL license
* http://sam.zoy.org/wtfpl/
*
* Date: Fri Oct 28 19:12:00 2011 +0100
*/
(function( $ ){

  $.fn.flexVerticalCenter = function( options ) {
    var settings = $.extend({
      cssAttribute:   'margin-top', // the attribute to apply the calculated value to
      verticalOffset: 0,            // the number of pixels to offset the vertical alignment by
      parentSelector: null,         // a selector representing the parent to vertically center this element within
      debounceTimeout: 25,          // a default debounce timeout in milliseconds
      deferTilWindowLoad: false     // if true, nothing will take effect until the $(window).load event
    }, options || {});

    return this.each(function(){
      var $this   = $(this); // store the object
      var debounce;

      // recalculate the distance to the top of the element to keep it centered
      var resizer = function () {

        var parentHeight = (settings.parentSelector && $this.parents(settings.parentSelector).length) ?
          $this.parents(settings.parentSelector).first().height() : $this.parent().height();

        $this.css(
          settings.cssAttribute, ( ( ( parentHeight - $this.height() ) / 2 ) + parseInt(settings.verticalOffset) )
        );
        if (settings.complete !== undefined) {
          settings.complete();
        }
      };

      // Call on resize. Opera debounces their resize by default.
      $(window).resize(function () {
        clearTimeout(debounce);
        debounce = setTimeout(resizer, settings.debounceTimeout);
      });

      if (!settings.deferTilWindowLoad) {
        // call it once, immediately.
        resizer();
      }

      // Call again to set after window (frames, images, etc) loads.
      $(window).load(function () {
        resizer();
      });

    });

  };

})( jQuery );

/**
 * jquery.matchHeight-min.js v0.5.2
 * http://brm.io/jquery-match-height/
 * License: MIT
 */
(function(c){var n=-1,f=-1,r=function(a){var b=null,d=[];c(a).each(function(){var a=c(this),k=a.offset().top-h(a.css("margin-top")),l=0<d.length?d[d.length-1]:null;null===l?d.push(a):1>=Math.floor(Math.abs(b-k))?d[d.length-1]=l.add(a):d.push(a);b=k});return d},h=function(a){return parseFloat(a)||0},p=function(a){var b={byRow:!0,remove:!1,property:"height"};if("object"===typeof a)return c.extend(b,a);"boolean"===typeof a?b.byRow=a:"remove"===a&&(b.remove=!0);return b},b=c.fn.matchHeight=function(a){a=
  p(a);if(a.remove){var e=this;this.css(a.property,"");c.each(b._groups,function(a,b){b.elements=b.elements.not(e)});return this}if(1>=this.length)return this;b._groups.push({elements:this,options:a});b._apply(this,a);return this};b._groups=[];b._throttle=80;b._maintainScroll=!1;b._beforeUpdate=null;b._afterUpdate=null;b._apply=function(a,e){var d=p(e),g=c(a),k=[g],l=c(window).scrollTop(),f=c("html").outerHeight(!0),m=g.parents().filter(":hidden");m.each(function(){var a=c(this);a.data("style-cache",
  a.attr("style"))});m.css("display","block");d.byRow&&(g.each(function(){var a=c(this),b="inline-block"===a.css("display")?"inline-block":"block";a.data("style-cache",a.attr("style"));a.css({display:b,"padding-top":"0","padding-bottom":"0","margin-top":"0","margin-bottom":"0","border-top-width":"0","border-bottom-width":"0",height:"100px"})}),k=r(g),g.each(function(){var a=c(this);a.attr("style",a.data("style-cache")||"")}));c.each(k,function(a,b){var e=c(b),f=0;d.byRow&&1>=e.length?e.css(d.property,
  ""):(e.each(function(){var a=c(this),b={display:"inline-block"===a.css("display")?"inline-block":"block"};b[d.property]="";a.css(b);a.outerHeight(!1)>f&&(f=a.outerHeight(!1));a.css("display","")}),e.each(function(){var a=c(this),b=0;"border-box"!==a.css("box-sizing")&&(b+=h(a.css("border-top-width"))+h(a.css("border-bottom-width")),b+=h(a.css("padding-top"))+h(a.css("padding-bottom")));a.css(d.property,f-b)}))});m.each(function(){var a=c(this);a.attr("style",a.data("style-cache")||null)});b._maintainScroll&&
c(window).scrollTop(l/f*c("html").outerHeight(!0));return this};b._applyDataApi=function(){var a={};c("[data-match-height], [data-mh]").each(function(){var b=c(this),d=b.attr("data-match-height")||b.attr("data-mh");a[d]=d in a?a[d].add(b):b});c.each(a,function(){this.matchHeight(!0)})};var q=function(a){b._beforeUpdate&&b._beforeUpdate(a,b._groups);c.each(b._groups,function(){b._apply(this.elements,this.options)});b._afterUpdate&&b._afterUpdate(a,b._groups)};b._update=function(a,e){if(e&&"resize"===
  e.type){var d=c(window).width();if(d===n)return;n=d}a?-1===f&&(f=setTimeout(function(){q(e);f=-1},b._throttle)):q(e)};c(b._applyDataApi);c(window).bind("load",function(a){b._update(!1,a)});c(window).bind("resize orientationchange",function(a){b._update(!0,a)})})(jQuery);
(function ($, window, document) {
  'use strict';

  // Main function
  $.fn.scrollUp = function (options) {

    // Ensure that only one scrollUp exists
    if (!$.data(document.body, 'scrollUp')) {
      $.data(document.body, 'scrollUp', true);
      $.fn.scrollUp.init(options);
    }
  };

  // Init
  $.fn.scrollUp.init = function (options) {

    // Define vars
    var o = $.fn.scrollUp.settings = $.extend({}, $.fn.scrollUp.defaults, options),
      triggerVisible = false,
      animIn, animOut, animSpeed, scrollDis, scrollEvent, scrollTarget, $self;

    // Create element
    if (o.scrollTrigger) {
      $self = $(o.scrollTrigger);
    } else {
      $self = $('<a/>', {
        id: o.scrollName,
        href: '#top'
      });
    }

    // Set scrollTitle if there is one
    if (o.scrollTitle) {
      $self.attr('title', o.scrollTitle);
    }

    //$self.appendTo('body');
    $self.insertBefore(".cookie-bar");

    // If not using an image display text
    if (!(o.scrollImg || o.scrollTrigger)) {
      $self.html(o.scrollText);
    }

    // Minimum CSS to make the magic happen
    $self.css({
      display: 'none',
      position: 'fixed',
      zIndex: o.zIndex
    });

    // Active point overlay
    if (o.activeOverlay) {
      $('<div/>', {
        id: o.scrollName + '-active'
      }).css({
        position: 'absolute',
        'top': o.scrollDistance + 'px',
        width: '100%',
        borderTop: '1px dotted' + o.activeOverlay,
        zIndex: o.zIndex
      }).appendTo('body');
    }

    // Switch animation type
    switch (o.animation) {
      case 'fade':
        animIn = 'fadeIn';
        animOut = 'fadeOut';
        animSpeed = o.animationSpeed;
        break;

      case 'slide':
        animIn = 'slideDown';
        animOut = 'slideUp';
        animSpeed = o.animationSpeed;
        break;

      default:
        animIn = 'show';
        animOut = 'hide';
        animSpeed = 0;
    }

    // If from top or bottom
    if (o.scrollFrom === 'top') {
      scrollDis = o.scrollDistance;
    } else {
      scrollDis = $(document).height() - $(window).height() - o.scrollDistance;
    }

    // Scroll function
    scrollEvent = $(window).scroll(function () {
      if ($(window).scrollTop() > scrollDis) {
        if (!triggerVisible) {
          $self[animIn](animSpeed);
          triggerVisible = true;
        }
      } else {
        if (triggerVisible) {
          $self[animOut](animSpeed);
          triggerVisible = false;
        }
      }
    });

    if (o.scrollTarget) {
      if (typeof o.scrollTarget === 'number') {
        scrollTarget = o.scrollTarget;
      } else if (typeof o.scrollTarget === 'string') {
        scrollTarget = Math.floor($(o.scrollTarget).offset().top);
      }
    } else {
      scrollTarget = 0;
    }

    // To the top
    $self.click(function (e) {
      e.preventDefault();

      $('html, body').animate({
        scrollTop: scrollTarget
      }, o.scrollSpeed, o.easingType);
    });
  };

  // Defaults
  $.fn.scrollUp.defaults = {
    scrollName: 'scrollUp',      // Element ID
    scrollDistance: 300,         // Distance from top/bottom before showing element (px)
    scrollFrom: 'top',           // 'top' or 'bottom'
    scrollSpeed: 300,            // Speed back to top (ms)
    easingType: 'linear',        // Scroll to top easing (see http://easings.net/)
    animation: 'fade',           // Fade, slide, none
    animationSpeed: 200,         // Animation in speed (ms)
    scrollTrigger: false,        // Set a custom triggering element. Can be an HTML string or jQuery object
    scrollTarget: false,         // Set a custom target element for scrolling to. Can be element or number
    scrollText: 'Scroll to top', // Text for element, can contain HTML
    scrollTitle: false,          // Set a custom <a> title if required. Defaults to scrollText
    scrollImg: false,            // Set true to use image
    activeOverlay: false,        // Set CSS color to display scrollUp active point, e.g '#00FFFF'
    zIndex: 2147483647           // Z-Index for the overlay
  };

  // Destroy scrollUp plugin and clean all modifications to the DOM
  $.fn.scrollUp.destroy = function (scrollEvent) {
    $.removeData(document.body, 'scrollUp');
    $('#' + $.fn.scrollUp.settings.scrollName).remove();
    $('#' + $.fn.scrollUp.settings.scrollName + '-active').remove();

    // If 1.7 or above use the new .off()
    if ($.fn.jquery.split('.')[1] >= 7) {
      $(window).off('scroll', scrollEvent);

      // Else use the old .unbind()
    } else {
      $(window).unbind('scroll', scrollEvent);
    }
  };

  $.scrollUp = $.fn.scrollUp;

})(jQuery, window, document);

(function(factory) {
  /* global define */
  /* istanbul ignore next */
  if ( typeof define === 'function' && define.amd ) {
    define(['jquery'], factory);
  } else if ( typeof module === 'object' && module.exports ) {
    // Node/CommonJS
    module.exports = function( root, jQuery ) {
      if ( jQuery === undefined ) {
        if ( typeof window !== 'undefined' ) {
          jQuery = require('jquery');
        } else {
          jQuery = require('jquery')(root);
        }
      }
      factory(jQuery);
      return jQuery;
    };
  } else {
    // Browser globals
    factory(jQuery);
  }
}(function($) {
  'use strict';

  var $doc = $(document);
  var $win = $(window);

  var pluginName = 'selectric';
  var classList = 'Input Items Open Disabled TempShow HideSelect Wrapper Hover Responsive Above Scroll Group GroupLabel';
  var bindSufix = '.sl';

  var chars = ['a', 'e', 'i', 'o', 'u', 'n', 'c', 'y'];
  var diacritics = [
    /[\xE0-\xE5]/g, // a
    /[\xE8-\xEB]/g, // e
    /[\xEC-\xEF]/g, // i
    /[\xF2-\xF6]/g, // o
    /[\xF9-\xFC]/g, // u
    /[\xF1]/g,      // n
    /[\xE7]/g,      // c
    /[\xFD-\xFF]/g  // y
  ];

  /**
   * Create an instance of Selectric
   *
   * @constructor
   * @param {Node} element - The &lt;select&gt; element
   * @param {object}  opts - Options
   */
  var Selectric = function(element, opts) {
    var _this = this;

    _this.element = element;
    _this.$element = $(element);

    _this.state = {
      enabled     : false,
      opened      : false,
      currValue   : -1,
      selectedIdx : -1
    };

    _this.eventTriggers = {
      open    : _this.open,
      close   : _this.close,
      destroy : _this.destroy,
      refresh : _this.refresh,
      init    : _this.init
    };

    _this.init(opts);
  };

  Selectric.prototype = {
    utils: {
      /**
       * Detect mobile browser
       *
       * @return {boolean}
       */
      isMobile: function() {
        return /android|ip(hone|od|ad)/i.test(navigator.userAgent);
      },

      /**
       * Replace diacritics
       *
       * @param  {string} str - The string to replace the diacritics.
       * @return {string}       The string with diacritics replaced with ascii characters.
       */
      replaceDiacritics: function(str) {
        var k = diacritics.length;

        while (k--) {
          str = str.toLowerCase().replace(diacritics[k], chars[k]);
        }

        return str;
      },

      /**
       * Format string
       * https://gist.github.com/atesgoral/984375
       *
       * @param  {string} f - String to be formated
       * @return {string}     String formated
       */
      format: function (f) {
        var a = arguments; // store outer arguments
        return ('' + f) // force format specifier to String
          .replace( // replace tokens in format specifier
            /\{(?:(\d+)|(\w+))\}/g, // match {token} references
            function (
              s, // the matched string (ignored)
              i, // an argument index
              p // a property name
            ) {
              return p && a[1] // if property name and first argument exist
                ? a[1][p] // return property from first argument
                : a[i]; // assume argument index and return i-th argument
            });
      },

      /**
       * Get the next enabled item in the options list.
       *
       * @param  {object} selectItems - The options object.
       * @param  {number}    selected - Index of the currently selected option.
       * @return {object}               The next enabled item.
       */
      nextEnabledItem: function(selectItems, selected) {
        while ( selectItems[ selected = (selected + 1) % selectItems.length ].disabled ) {
          // empty
        }
        return selected;
      },

      /**
       * Get the previous enabled item in the options list.
       *
       * @param  {object} selectItems - The options object.
       * @param  {number}    selected - Index of the currently selected option.
       * @return {object}               The previous enabled item.
       */
      previousEnabledItem: function(selectItems, selected) {
        while ( selectItems[ selected = (selected > 0 ? selected : selectItems.length) - 1 ].disabled ) {
          // empty
        }
        return selected;
      },

      /**
       * Transform camelCase string to dash-case.
       *
       * @param  {string} str - The camelCased string.
       * @return {string}       The string transformed to dash-case.
       */
      toDash: function(str) {
        return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();
      },

      /**
       * Calls the events and hooks registered with function name.
       *
       * @param {string}    fn - The name of the function.
       * @param {number} scope - Scope that should be set on the function.
       */
      triggerCallback: function(fn, scope) {
        var elm = scope.element;
        var func = scope.options['on' + fn];

        if ( $.isFunction(func) ) {
          func.call(elm, elm, scope);
        }

        if ( $.fn[pluginName].hooks[fn] ) {
          $.each($.fn[pluginName].hooks[fn], function() {
            this.call(elm, elm, scope);
          });
        }

        $(elm).trigger(pluginName + '-' + this.toDash(fn), scope);
      }
    },

    /** Initializes */
    init: function(opts) {
      var _this = this;

      // Set options
      _this.options = $.extend(true, {}, $.fn[pluginName].defaults, _this.options, opts);

      _this.utils.triggerCallback('BeforeInit', _this);

      // Preserve data
      _this.destroy(true);

      // Disable on mobile browsers
      if ( _this.options.disableOnMobile && _this.utils.isMobile() ) {
        _this.disableOnMobile = true;
        return;
      }

      // Get classes
      _this.classes = _this.getClassNames();

      // Create elements
      var input        = $('<input/>', { 'class': _this.classes.input, 'readonly': _this.utils.isMobile() });
      var items        = $('<div/>',   { 'class': _this.classes.items, 'tabindex': -1 });
      var itemsScroll  = $('<div/>',   { 'class': _this.classes.scroll });
      var wrapper      = $('<div/>',   { 'class': _this.classes.prefix, 'html': _this.options.arrowButtonMarkup });
      var label        = $('<p/>',     { 'class': 'label' });
      var outerWrapper = _this.$element.wrap('<div/>').parent().append(wrapper.prepend(label), items, input);

      _this.elements = {
        input        : input,
        items        : items,
        itemsScroll  : itemsScroll,
        wrapper      : wrapper,
        label        : label,
        outerWrapper : outerWrapper
      };

      _this.$element
        .on(_this.eventTriggers)
        .wrap('<div class="' + _this.classes.hideselect + '"/>');

      _this.originalTabindex = _this.$element.prop('tabindex');
      _this.$element.prop('tabindex', false);

      _this.populate();
      _this.activate();

      _this.utils.triggerCallback('Init', _this);
    },

    /** Activates the plugin */
    activate: function() {
      var _this = this;
      var originalWidth = _this.$element.width();

      _this.utils.triggerCallback('BeforeActivate', _this);

      _this.elements.outerWrapper.prop('class', [
        _this.classes.wrapper,
        _this.$element.prop('class').replace(/\S+/g, _this.classes.prefix + '-$&'),
        _this.options.responsive ? _this.classes.responsive : ''
      ].join(' '));

      if ( _this.options.inheritOriginalWidth && originalWidth > 0 ) {
        _this.elements.outerWrapper.width(originalWidth);
      }

      if ( !_this.$element.prop('disabled') ) {
        _this.state.enabled = true;

        // Not disabled, so... Removing disabled class
        _this.elements.outerWrapper.removeClass(_this.classes.disabled);

        // Remove styles from items box
        // Fix incorrect height when refreshed is triggered with fewer options
        _this.$li = _this.elements.items.removeAttr('style').find('li');

        _this.bindEvents();
      } else {
        _this.elements.outerWrapper.addClass(_this.classes.disabled);
        _this.elements.input.prop('disabled', true);
      }

      _this.utils.triggerCallback('Activate', _this);
    },

    /**
     * Generate classNames for elements
     *
     * @return {object} Classes object
     */
    getClassNames: function() {
      var _this = this;
      var customClass = _this.options.customClass;
      var classesObj  = {};

      $.each(classList.split(' '), function(i, currClass) {
        var c = customClass.prefix + currClass;
        classesObj[currClass.toLowerCase()] = customClass.camelCase ? c : _this.utils.toDash(c);
      });

      classesObj.prefix = customClass.prefix;

      return classesObj;
    },

    /** Set the label text */
    setLabel: function() {
      var _this = this;
      var labelBuilder = _this.options.labelBuilder;
      var currItem = _this.lookupItems[_this.state.currValue];

      _this.elements.label.html(
        $.isFunction(labelBuilder)
          ? labelBuilder(currItem)
          : _this.utils.format(labelBuilder, currItem)
      );
    },

    /** Get and save the available options */
    populate: function() {
      var _this = this;
      var $options = _this.$element.children();
      var $justOptions = _this.$element.find('option');
      var selectedIndex = $justOptions.index($justOptions.filter(':selected'));
      var currIndex = 0;

      _this.state.currValue = (_this.state.selected = ~selectedIndex ? selectedIndex : 0);
      _this.state.selectedIdx = _this.state.currValue;
      _this.items = [];
      _this.lookupItems = [];

      if ( $options.length ) {
        // Build options markup
        $options.each(function(i) {
          var $elm = $(this);

          if ( $elm.is('optgroup') ) {

            var optionsGroup = {
              element       : $elm,
              label         : $elm.prop('label'),
              groupDisabled : $elm.prop('disabled'),
              items         : []
            };

            $elm.children().each(function(i) {
              var $elm = $(this);
              var optionText = $elm.html();

              optionsGroup.items[i] = {
                index    : currIndex,
                element  : $elm,
                value    : $elm.val(),
                text     : optionText,
                slug     : _this.utils.replaceDiacritics(optionText),
                disabled : optionsGroup.groupDisabled
              };

              _this.lookupItems[currIndex] = optionsGroup.items[i];

              currIndex++;
            });

            _this.items[i] = optionsGroup;

          } else {

            var optionText = $elm.html();

            _this.items[i] = {
              index    : currIndex,
              element  : $elm,
              value    : $elm.val(),
              text     : optionText,
              slug     : _this.utils.replaceDiacritics(optionText),
              disabled : $elm.prop('disabled')
            };

            _this.lookupItems[currIndex] = _this.items[i];

            currIndex++;

          }
        });

        _this.setLabel();
        _this.elements.items.append( _this.elements.itemsScroll.html( _this.getItemsMarkup(_this.items) ) );
      }
    },

    /**
     * Generate options markup
     *
     * @param  {object} items - Object containing all available options
     * @return {string}         HTML for the options box
     */
    getItemsMarkup: function(items) {
      var _this = this;
      var markup = '<ul>';

      $.each(items, function(i, elm) {
        if ( elm.label !== undefined ) {

          markup += _this.utils.format('<ul class="{1}"><li class="{2}">{3}</li>',
            $.trim([_this.classes.group, elm.groupDisabled ? 'disabled' : '', elm.element.prop('class')].join(' ')),
            _this.classes.grouplabel,
            elm.element.prop('label')
          );

          $.each(elm.items, function(i, elm) {
            markup += _this.getItemMarkup(elm.index, elm);
          });

          markup += '</ul>';

        } else {

          markup += _this.getItemMarkup(elm.index, elm);

        }
      });

      return markup + '</ul>';
    },

    /**
     * Generate every option markup
     *
     * @param  {number} i   - Index of current item
     * @param  {object} elm - Current item
     * @return {string}       HTML for the option
     */
    getItemMarkup: function(i, elm) {
      var _this = this;
      var itemBuilder = _this.options.optionsItemBuilder;

      return _this.utils.format('<li data-index="{1}" class="{2}">{3}</li>',
        i,
        $.trim([
          i === _this.state.currValue  ? 'selected' : '',
          i === _this.items.length - 1 ? 'last'     : '',
          elm.disabled                 ? 'disabled' : ''
        ].join(' ')),
        $.isFunction(itemBuilder) ? itemBuilder(elm, elm.element, i) : _this.utils.format(itemBuilder, elm)
      );
    },

    /** Bind events on the elements */
    bindEvents: function() {
      var _this = this;

      _this.elements.wrapper
        .add(_this.$element)
        .add(_this.elements.outerWrapper)
        .add(_this.elements.input)
        .off(bindSufix);

      _this.elements.outerWrapper.on('mouseenter' + bindSufix + ' mouseleave' + bindSufix, function(e) {
        $(this).toggleClass(_this.classes.hover, e.type === 'mouseenter');

        // Delay close effect when openOnHover is true
        if ( _this.options.openOnHover ) {
          clearTimeout(_this.closeTimer);

          if ( e.type === 'mouseleave' ) {
            _this.closeTimer = setTimeout($.proxy(_this.close, _this), _this.options.hoverIntentTimeout);
          } else {
            _this.open();
          }
        }
      });

      // Toggle open/close
      _this.elements.wrapper.on('click' + bindSufix, function(e) {
        _this.state.opened ? _this.close() : _this.open(e);
      });

      _this.elements.input
        .prop({ tabindex: _this.originalTabindex, disabled: false })
        .on('keypress' + bindSufix, _this.handleSystemKeys)
        .on('keydown' + bindSufix, function(e) {
          _this.handleSystemKeys(e);

          // Clear search
          clearTimeout(_this.resetStr);
          _this.resetStr = setTimeout(function() {
            _this.elements.input.val('');
          }, _this.options.keySearchTimeout);

          var key = e.keyCode || e.which;

          // If it's a directional key
          // 37 => Left
          // 38 => Up
          // 39 => Right
          // 40 => Down
          if ( key > 36 && key < 41 ) {
            if ( !_this.options.allowWrap ) {
              if ( (key < 39 && _this.state.selectedIdx === 0) || (key > 38 && (_this.state.selectedIdx + 1) === _this.items.length) ) {
                return;
              }
            }

            _this.select(_this.utils[(key < 39 ? 'previous' : 'next') + 'EnabledItem'](_this.items, _this.state.selectedIdx));
          }
        })
        .on('focusin' + bindSufix, function(e) {
          _this.state.opened || _this.open(e);
        })
        .on('oninput' in _this.elements.input[0] ? 'input' : 'keyup', function() {
          if ( _this.elements.input.val().length ) {
            // Search in select options
            $.each(_this.items, function(i, elm) {
              if ( RegExp('^' + _this.elements.input.val(), 'i').test(elm.slug) && !elm.disabled ) {
                _this.select(i);
                return false;
              }
            });
          }
        });

      _this.$li.on({
        // Prevent <input> blur on Chrome
        mousedown: function(e) {
          e.preventDefault();
          e.stopPropagation();
        },
        click: function() {
          // The second parameter is to close the box after click
          _this.select($(this).data('index'), true);

          // Chrome doesn't close options box if select is wrapped with a label
          // We need to 'return false' to avoid that
          return false;
        }
      });
    },

    /**
     * Behavior when system keys is pressed
     *
     * @param {object} e - Event object
     */
    handleSystemKeys: function(e) {
      var _this = this;
      var key = e.keyCode || e.which;

      if ( key == 13 ) {
        e.preventDefault();
      }

      // Tab / Enter / ESC
      if ( /^(9|13|27)$/.test(key) ) {
        e.stopPropagation();
        _this.select(_this.state.selectedIdx, true);
      }
    },

    /** Update the items object */
    refresh: function() {
      var _this = this;

      _this.populate();
      _this.activate();
      _this.utils.triggerCallback('Refresh', _this);
    },

    /** Set options box width/height */
    setOptionsDimensions: function() {
      var _this = this;

      // Calculate options box height
      // Set a temporary class on the hidden parent of the element
      var hiddenChildren = _this.elements.items.closest(':visible').children(':hidden').addClass(_this.classes.tempshow);
      var maxHeight = _this.options.maxHeight;
      var itemsWidth = _this.elements.items.outerWidth();
      var wrapperWidth = _this.elements.wrapper.outerWidth() - (itemsWidth - _this.elements.items.width());

      // Set the dimensions, minimum is wrapper width, expand for long items if option is true
      if ( !_this.options.expandToItemText || wrapperWidth > itemsWidth ) {
        _this.finalWidth = wrapperWidth;
      } else {
        // Make sure the scrollbar width is included
        _this.elements.items.css('overflow', 'scroll');

        // Set a really long width for _this.elements.outerWrapper
        _this.elements.outerWrapper.width(9e4);
        _this.finalWidth = _this.elements.items.width();
        // Set scroll bar to auto
        _this.elements.items.css('overflow', '');
        _this.elements.outerWrapper.width('');
      }

      _this.elements.items.width(_this.finalWidth).height() > maxHeight && _this.elements.items.height(maxHeight);

      // Remove the temporary class
      hiddenChildren.removeClass(_this.classes.tempshow);
    },

    /** Detect if the options box is inside the window */
    isInViewport: function() {
      var _this = this;
      var scrollTop = $win.scrollTop();
      var winHeight = $win.height();
      var uiPosX = _this.elements.outerWrapper.offset().top;
      var uiHeight = _this.elements.outerWrapper.outerHeight();

      var fitsDown = (uiPosX + uiHeight + _this.itemsHeight) <= (scrollTop + winHeight);
      var fitsAbove = (uiPosX - _this.itemsHeight) > scrollTop;

      // If it does not fit below, only render it
      // above it fit's there.
      // It's acceptable that the user needs to
      // scroll the viewport to see the cut off UI
      var renderAbove = !fitsDown && fitsAbove;

      _this.elements.outerWrapper.toggleClass(_this.classes.above, renderAbove);
    },

    /**
     * Detect if currently selected option is visible and scroll the options box to show it
     *
     * @param {number} index - Index of the selected items
     */
    detectItemVisibility: function(index) {
      var _this = this;
      var liHeight = _this.$li.eq(index).outerHeight();
      var liTop = _this.$li[index].offsetTop;
      var itemsScrollTop = _this.elements.itemsScroll.scrollTop();
      var scrollT = liTop + liHeight * 2;

      _this.elements.itemsScroll.scrollTop(
        scrollT > itemsScrollTop + _this.itemsHeight ? scrollT - _this.itemsHeight :
          liTop - liHeight < itemsScrollTop ? liTop - liHeight :
            itemsScrollTop
      );
    },

    /**
     * Open the select options box
     *
     * @param {event} e - Event
     */
    open: function(e) {
      var _this = this;

      _this.utils.triggerCallback('BeforeOpen', _this);

      if ( e ) {
        e.preventDefault();
        e.stopPropagation();
      }

      if ( _this.state.enabled ) {
        _this.setOptionsDimensions();

        // Find any other opened instances of select and close it
        $('.' + _this.classes.hideselect, '.' + _this.classes.open).children()[pluginName]('close');

        _this.state.opened = true;
        _this.itemsHeight = _this.elements.items.outerHeight();
        _this.itemsInnerHeight = _this.elements.items.height();

        // Toggle options box visibility
        _this.elements.outerWrapper.addClass(_this.classes.open);

        // Give dummy input focus
        _this.elements.input.val('');
        if ( e && e.type !== 'focusin' ) {
          _this.elements.input.focus();
        }

        $doc
          .on('click' + bindSufix, $.proxy(_this.close, _this))
          .on('scroll' + bindSufix, $.proxy(_this.isInViewport, _this));
        _this.isInViewport();

        // Prevent window scroll when using mouse wheel inside items box
        if ( _this.options.preventWindowScroll ) {
          /* istanbul ignore next */
          $doc.on('mousewheel' + bindSufix + ' DOMMouseScroll' + bindSufix, '.' + _this.classes.scroll, function(e) {
            var orgEvent = e.originalEvent;
            var scrollTop = $(this).scrollTop();
            var deltaY = 0;

            if ( 'detail'      in orgEvent ) { deltaY = orgEvent.detail * -1; }
            if ( 'wheelDelta'  in orgEvent ) { deltaY = orgEvent.wheelDelta;  }
            if ( 'wheelDeltaY' in orgEvent ) { deltaY = orgEvent.wheelDeltaY; }
            if ( 'deltaY'      in orgEvent ) { deltaY = orgEvent.deltaY * -1; }

            if ( scrollTop === (this.scrollHeight - _this.itemsInnerHeight) && deltaY < 0 || scrollTop === 0 && deltaY > 0 ) {
              e.preventDefault();
            }
          });
        }

        _this.detectItemVisibility(_this.state.selectedIdx);

        _this.utils.triggerCallback('Open', _this);
      }
    },

    /** Close the select options box */
    close: function() {
      var _this = this;

      _this.utils.triggerCallback('BeforeClose', _this);

      _this.change();

      // Remove custom events on document
      $doc.off(bindSufix);

      // Remove visible class to hide options box
      _this.elements.outerWrapper.removeClass(_this.classes.open);

      _this.state.opened = false;

      _this.utils.triggerCallback('Close', _this);
    },

    /** Select current option and change the label */
    change: function() {
      var _this = this;

      _this.utils.triggerCallback('BeforeChange', _this);

      if ( _this.state.currValue !== _this.state.selectedIdx ) {
        // Apply changed value to original select
        _this.$element
          .prop('selectedIndex', _this.state.currValue = _this.state.selectedIdx)
          .data('value', _this.lookupItems[_this.state.selectedIdx].text);

        // Change label text
        _this.setLabel();
      }

      _this.utils.triggerCallback('Change', _this);
    },

    /**
     * Select option
     *
     * @param {number}  index - Index of the option that will be selected
     * @param {boolean} close - Close the options box after selecting
     */
    select: function(index, close) {
      var _this = this;

      // Parameter index is required
      if ( index === undefined ) {
        return;
      }

      // If element is disabled, can't select it
      if ( !_this.lookupItems[index].disabled ) {
        _this.$li.filter('[data-index]')
          .removeClass('selected')
          .eq(_this.state.selectedIdx = index)
          .addClass('selected');

        _this.detectItemVisibility(index);

        // If 'close' is false (default), the options box won't close after
        // each selected item, this is necessary for keyboard navigation
        if ( close ) {
          _this.close();
        }
      }
    },

    /**
     * Unbind and remove
     *
     * @param {boolean} preserveData - Check if the data on the element should be removed too
     */
    destroy: function(preserveData) {
      var _this = this;

      if ( _this.state && _this.state.enabled ) {
        _this.elements.items.add(_this.elements.wrapper).add(_this.elements.input).remove();

        if ( !preserveData ) {
          _this.$element.removeData(pluginName).removeData('value');
        }

        _this.$element.prop('tabindex', _this.originalTabindex).off(bindSufix).off(_this.eventTriggers).unwrap().unwrap();

        _this.state.enabled = false;
      }
    }
  };

  // A really lightweight plugin wrapper around the constructor,
  // preventing against multiple instantiations
  $.fn[pluginName] = function(args) {
    return this.each(function() {
      var data = $.data(this, pluginName);

      if ( data && !data.disableOnMobile ) {
        (typeof args === 'string' && data[args]) ? data[args]() : data.init(args);
      } else {
        $.data(this, pluginName, new Selectric(this, args));
      }
    });
  };

  /**
   * Hooks for the callbacks
   *
   * @type {object}
   */
  $.fn[pluginName].hooks = {
    /**
     * @param {string} callbackName - The callback name.
     * @param {string}     hookName - The name of the hook to be attached.
     * @param {function}         fn - Callback function.
     */
    add: function(callbackName, hookName, fn) {
      if ( !this[callbackName] ) {
        this[callbackName] = {};
      }

      this[callbackName][hookName] = fn;
    },

    /**
     * @param {string} callbackName - The callback name.
     * @param {string}     hookName - The name of the hook that will be removed.
     */
    remove: function(callbackName, hookName) {
      delete this[callbackName][hookName];
    }
  };

  /**
   * Default plugin options
   *
   * @type {object}
   */
  $.fn[pluginName].defaults = {
    onChange: function(elm) { $(elm).change(); },
    maxHeight: 300,
    keySearchTimeout: 500,
    arrowButtonMarkup: '<b class="button">&#x25be;</b>',
    disableOnMobile: true,
    openOnHover: false,
    hoverIntentTimeout: 500,
    expandToItemText: false,
    responsive: false,
    preventWindowScroll: true,
    inheritOriginalWidth: false,
    allowWrap: true,
    customClass: {
      prefix: pluginName,
      camelCase: false
    },
    optionsItemBuilder: '{text}', // function(itemData, element, index)
    labelBuilder: '{text}' // function(currItem)
  };
}));
/*!
Waypoints - 4.0.0
Copyright © 2011-2015 Caleb Troughton
Licensed under the MIT license.
https://github.com/imakewebthings/waypoints/blog/master/licenses.txt
*/
(function() {
  'use strict'

  var keyCounter = 0
  var allWaypoints = {}

  /* http://imakewebthings.com/waypoints/api/waypoint */
  function Waypoint(options) {
    if (!options) {
      throw new Error('No options passed to Waypoint constructor')
    }
    if (!options.element) {
      throw new Error('No element option passed to Waypoint constructor')
    }
    if (!options.handler) {
      throw new Error('No handler option passed to Waypoint constructor')
    }

    this.key = 'waypoint-' + keyCounter
    this.options = Waypoint.Adapter.extend({}, Waypoint.defaults, options)
    this.element = this.options.element
    this.adapter = new Waypoint.Adapter(this.element)
    this.callback = options.handler
    this.axis = this.options.horizontal ? 'horizontal' : 'vertical'
    this.enabled = this.options.enabled
    this.triggerPoint = null
    this.group = Waypoint.Group.findOrCreate({
      name: this.options.group,
      axis: this.axis
    })
    this.context = Waypoint.Context.findOrCreateByElement(this.options.context)

    if (Waypoint.offsetAliases[this.options.offset]) {
      this.options.offset = Waypoint.offsetAliases[this.options.offset]
    }
    this.group.add(this)
    this.context.add(this)
    allWaypoints[this.key] = this
    keyCounter += 1
  }

  /* Private */
  Waypoint.prototype.queueTrigger = function(direction) {
    this.group.queueTrigger(this, direction)
  }

  /* Private */
  Waypoint.prototype.trigger = function(args) {
    if (!this.enabled) {
      return
    }
    if (this.callback) {
      this.callback.apply(this, args)
    }
  }

  /* Public */
  /* http://imakewebthings.com/waypoints/api/destroy */
  Waypoint.prototype.destroy = function() {
    this.context.remove(this)
    this.group.remove(this)
    delete allWaypoints[this.key]
  }

  /* Public */
  /* http://imakewebthings.com/waypoints/api/disable */
  Waypoint.prototype.disable = function() {
    this.enabled = false
    return this
  }

  /* Public */
  /* http://imakewebthings.com/waypoints/api/enable */
  Waypoint.prototype.enable = function() {
    this.context.refresh()
    this.enabled = true
    return this
  }

  /* Public */
  /* http://imakewebthings.com/waypoints/api/next */
  Waypoint.prototype.next = function() {
    return this.group.next(this)
  }

  /* Public */
  /* http://imakewebthings.com/waypoints/api/previous */
  Waypoint.prototype.previous = function() {
    return this.group.previous(this)
  }

  /* Private */
  Waypoint.invokeAll = function(method) {
    var allWaypointsArray = []
    for (var waypointKey in allWaypoints) {
      allWaypointsArray.push(allWaypoints[waypointKey])
    }
    for (var i = 0, end = allWaypointsArray.length; i < end; i++) {
      allWaypointsArray[i][method]()
    }
  }

  /* Public */
  /* http://imakewebthings.com/waypoints/api/destroy-all */
  Waypoint.destroyAll = function() {
    Waypoint.invokeAll('destroy')
  }

  /* Public */
  /* http://imakewebthings.com/waypoints/api/disable-all */
  Waypoint.disableAll = function() {
    Waypoint.invokeAll('disable')
  }

  /* Public */
  /* http://imakewebthings.com/waypoints/api/enable-all */
  Waypoint.enableAll = function() {
    Waypoint.invokeAll('enable')
  }

  /* Public */
  /* http://imakewebthings.com/waypoints/api/refresh-all */
  Waypoint.refreshAll = function() {
    Waypoint.Context.refreshAll()
  }

  /* Public */
  /* http://imakewebthings.com/waypoints/api/viewport-height */
  Waypoint.viewportHeight = function() {
    return window.innerHeight || document.documentElement.clientHeight
  }

  /* Public */
  /* http://imakewebthings.com/waypoints/api/viewport-width */
  Waypoint.viewportWidth = function() {
    return document.documentElement.clientWidth
  }

  Waypoint.adapters = []

  Waypoint.defaults = {
    context: window,
    continuous: true,
    enabled: true,
    group: 'default',
    horizontal: false,
    offset: 0
  }

  Waypoint.offsetAliases = {
    'bottom-in-view': function() {
      return this.context.innerHeight() - this.adapter.outerHeight()
    },
    'right-in-view': function() {
      return this.context.innerWidth() - this.adapter.outerWidth()
    }
  }

  window.Waypoint = Waypoint
}())
;(function() {
  'use strict'

  function requestAnimationFrameShim(callback) {
    window.setTimeout(callback, 1000 / 60)
  }

  var keyCounter = 0
  var contexts = {}
  var Waypoint = window.Waypoint
  var oldWindowLoad = window.onload

  /* http://imakewebthings.com/waypoints/api/context */
  function Context(element) {
    this.element = element
    this.Adapter = Waypoint.Adapter
    this.adapter = new this.Adapter(element)
    this.key = 'waypoint-context-' + keyCounter
    this.didScroll = false
    this.didResize = false
    this.oldScroll = {
      x: this.adapter.scrollLeft(),
      y: this.adapter.scrollTop()
    }
    this.waypoints = {
      vertical: {},
      horizontal: {}
    }

    element.waypointContextKey = this.key
    contexts[element.waypointContextKey] = this
    keyCounter += 1

    this.createThrottledScrollHandler()
    this.createThrottledResizeHandler()
  }

  /* Private */
  Context.prototype.add = function(waypoint) {
    var axis = waypoint.options.horizontal ? 'horizontal' : 'vertical'
    this.waypoints[axis][waypoint.key] = waypoint
    this.refresh()
  }

  /* Private */
  Context.prototype.checkEmpty = function() {
    var horizontalEmpty = this.Adapter.isEmptyObject(this.waypoints.horizontal)
    var verticalEmpty = this.Adapter.isEmptyObject(this.waypoints.vertical)
    if (horizontalEmpty && verticalEmpty) {
      this.adapter.off('.waypoints')
      delete contexts[this.key]
    }
  }

  /* Private */
  Context.prototype.createThrottledResizeHandler = function() {
    var self = this

    function resizeHandler() {
      self.handleResize()
      self.didResize = false
    }

    this.adapter.on('resize.waypoints', function() {
      if (!self.didResize) {
        self.didResize = true
        Waypoint.requestAnimationFrame(resizeHandler)
      }
    })
  }

  /* Private */
  Context.prototype.createThrottledScrollHandler = function() {
    var self = this
    function scrollHandler() {
      self.handleScroll()
      self.didScroll = false
    }

    this.adapter.on('scroll.waypoints', function() {
      if (!self.didScroll || Waypoint.isTouch) {
        self.didScroll = true
        Waypoint.requestAnimationFrame(scrollHandler)
      }
    })
  }

  /* Private */
  Context.prototype.handleResize = function() {
    Waypoint.Context.refreshAll()
  }

  /* Private */
  Context.prototype.handleScroll = function() {
    var triggeredGroups = {}
    var axes = {
      horizontal: {
        newScroll: this.adapter.scrollLeft(),
        oldScroll: this.oldScroll.x,
        forward: 'right',
        backward: 'left'
      },
      vertical: {
        newScroll: this.adapter.scrollTop(),
        oldScroll: this.oldScroll.y,
        forward: 'down',
        backward: 'up'
      }
    }

    for (var axisKey in axes) {
      var axis = axes[axisKey]
      var isForward = axis.newScroll > axis.oldScroll
      var direction = isForward ? axis.forward : axis.backward

      for (var waypointKey in this.waypoints[axisKey]) {
        var waypoint = this.waypoints[axisKey][waypointKey]
        var wasBeforeTriggerPoint = axis.oldScroll < waypoint.triggerPoint
        var nowAfterTriggerPoint = axis.newScroll >= waypoint.triggerPoint
        var crossedForward = wasBeforeTriggerPoint && nowAfterTriggerPoint
        var crossedBackward = !wasBeforeTriggerPoint && !nowAfterTriggerPoint
        if (crossedForward || crossedBackward) {
          waypoint.queueTrigger(direction)
          triggeredGroups[waypoint.group.id] = waypoint.group
        }
      }
    }

    for (var groupKey in triggeredGroups) {
      triggeredGroups[groupKey].flushTriggers()
    }

    this.oldScroll = {
      x: axes.horizontal.newScroll,
      y: axes.vertical.newScroll
    }
  }

  /* Private */
  Context.prototype.innerHeight = function() {
    /*eslint-disable eqeqeq */
    if (this.element == this.element.window) {
      return Waypoint.viewportHeight()
    }
    /*eslint-enable eqeqeq */
    return this.adapter.innerHeight()
  }

  /* Private */
  Context.prototype.remove = function(waypoint) {
    delete this.waypoints[waypoint.axis][waypoint.key]
    this.checkEmpty()
  }

  /* Private */
  Context.prototype.innerWidth = function() {
    /*eslint-disable eqeqeq */
    if (this.element == this.element.window) {
      return Waypoint.viewportWidth()
    }
    /*eslint-enable eqeqeq */
    return this.adapter.innerWidth()
  }

  /* Public */
  /* http://imakewebthings.com/waypoints/api/context-destroy */
  Context.prototype.destroy = function() {
    var allWaypoints = []
    for (var axis in this.waypoints) {
      for (var waypointKey in this.waypoints[axis]) {
        allWaypoints.push(this.waypoints[axis][waypointKey])
      }
    }
    for (var i = 0, end = allWaypoints.length; i < end; i++) {
      allWaypoints[i].destroy()
    }
  }

  /* Public */
  /* http://imakewebthings.com/waypoints/api/context-refresh */
  Context.prototype.refresh = function() {
    /*eslint-disable eqeqeq */
    var isWindow = this.element == this.element.window
    /*eslint-enable eqeqeq */
    var contextOffset = isWindow ? undefined : this.adapter.offset()
    var triggeredGroups = {}
    var axes

    this.handleScroll()
    axes = {
      horizontal: {
        contextOffset: isWindow ? 0 : contextOffset.left,
        contextScroll: isWindow ? 0 : this.oldScroll.x,
        contextDimension: this.innerWidth(),
        oldScroll: this.oldScroll.x,
        forward: 'right',
        backward: 'left',
        offsetProp: 'left'
      },
      vertical: {
        contextOffset: isWindow ? 0 : contextOffset.top,
        contextScroll: isWindow ? 0 : this.oldScroll.y,
        contextDimension: this.innerHeight(),
        oldScroll: this.oldScroll.y,
        forward: 'down',
        backward: 'up',
        offsetProp: 'top'
      }
    }

    for (var axisKey in axes) {
      var axis = axes[axisKey]
      for (var waypointKey in this.waypoints[axisKey]) {
        var waypoint = this.waypoints[axisKey][waypointKey]
        var adjustment = waypoint.options.offset
        var oldTriggerPoint = waypoint.triggerPoint
        var elementOffset = 0
        var freshWaypoint = oldTriggerPoint == null
        var contextModifier, wasBeforeScroll, nowAfterScroll
        var triggeredBackward, triggeredForward

        if (waypoint.element !== waypoint.element.window) {
          elementOffset = waypoint.adapter.offset()[axis.offsetProp]
        }

        if (typeof adjustment === 'function') {
          adjustment = adjustment.apply(waypoint)
        }
        else if (typeof adjustment === 'string') {
          adjustment = parseFloat(adjustment)
          if (waypoint.options.offset.indexOf('%') > - 1) {
            adjustment = Math.ceil(axis.contextDimension * adjustment / 100)
          }
        }

        contextModifier = axis.contextScroll - axis.contextOffset
        waypoint.triggerPoint = elementOffset + contextModifier - adjustment
        wasBeforeScroll = oldTriggerPoint < axis.oldScroll
        nowAfterScroll = waypoint.triggerPoint >= axis.oldScroll
        triggeredBackward = wasBeforeScroll && nowAfterScroll
        triggeredForward = !wasBeforeScroll && !nowAfterScroll

        if (!freshWaypoint && triggeredBackward) {
          waypoint.queueTrigger(axis.backward)
          triggeredGroups[waypoint.group.id] = waypoint.group
        }
        else if (!freshWaypoint && triggeredForward) {
          waypoint.queueTrigger(axis.forward)
          triggeredGroups[waypoint.group.id] = waypoint.group
        }
        else if (freshWaypoint && axis.oldScroll >= waypoint.triggerPoint) {
          waypoint.queueTrigger(axis.forward)
          triggeredGroups[waypoint.group.id] = waypoint.group
        }
      }
    }

    Waypoint.requestAnimationFrame(function() {
      for (var groupKey in triggeredGroups) {
        triggeredGroups[groupKey].flushTriggers()
      }
    })

    return this
  }

  /* Private */
  Context.findOrCreateByElement = function(element) {
    return Context.findByElement(element) || new Context(element)
  }

  /* Private */
  Context.refreshAll = function() {
    for (var contextId in contexts) {
      contexts[contextId].refresh()
    }
  }

  /* Public */
  /* http://imakewebthings.com/waypoints/api/context-find-by-element */
  Context.findByElement = function(element) {
    return contexts[element.waypointContextKey]
  }

  window.onload = function() {
    if (oldWindowLoad) {
      oldWindowLoad()
    }
    Context.refreshAll()
  }

  Waypoint.requestAnimationFrame = function(callback) {
    var requestFn = window.requestAnimationFrame ||
      window.mozRequestAnimationFrame ||
      window.webkitRequestAnimationFrame ||
      requestAnimationFrameShim
    requestFn.call(window, callback)
  }
  Waypoint.Context = Context
}())
;(function() {
  'use strict'

  function byTriggerPoint(a, b) {
    return a.triggerPoint - b.triggerPoint
  }

  function byReverseTriggerPoint(a, b) {
    return b.triggerPoint - a.triggerPoint
  }

  var groups = {
    vertical: {},
    horizontal: {}
  }
  var Waypoint = window.Waypoint

  /* http://imakewebthings.com/waypoints/api/group */
  function Group(options) {
    this.name = options.name
    this.axis = options.axis
    this.id = this.name + '-' + this.axis
    this.waypoints = []
    this.clearTriggerQueues()
    groups[this.axis][this.name] = this
  }

  /* Private */
  Group.prototype.add = function(waypoint) {
    this.waypoints.push(waypoint)
  }

  /* Private */
  Group.prototype.clearTriggerQueues = function() {
    this.triggerQueues = {
      up: [],
      down: [],
      left: [],
      right: []
    }
  }

  /* Private */
  Group.prototype.flushTriggers = function() {
    for (var direction in this.triggerQueues) {
      var waypoints = this.triggerQueues[direction]
      var reverse = direction === 'up' || direction === 'left'
      waypoints.sort(reverse ? byReverseTriggerPoint : byTriggerPoint)
      for (var i = 0, end = waypoints.length; i < end; i += 1) {
        var waypoint = waypoints[i]
        if (waypoint.options.continuous || i === waypoints.length - 1) {
          waypoint.trigger([direction])
        }
      }
    }
    this.clearTriggerQueues()
  }

  /* Private */
  Group.prototype.next = function(waypoint) {
    this.waypoints.sort(byTriggerPoint)
    var index = Waypoint.Adapter.inArray(waypoint, this.waypoints)
    var isLast = index === this.waypoints.length - 1
    return isLast ? null : this.waypoints[index + 1]
  }

  /* Private */
  Group.prototype.previous = function(waypoint) {
    this.waypoints.sort(byTriggerPoint)
    var index = Waypoint.Adapter.inArray(waypoint, this.waypoints)
    return index ? this.waypoints[index - 1] : null
  }

  /* Private */
  Group.prototype.queueTrigger = function(waypoint, direction) {
    this.triggerQueues[direction].push(waypoint)
  }

  /* Private */
  Group.prototype.remove = function(waypoint) {
    var index = Waypoint.Adapter.inArray(waypoint, this.waypoints)
    if (index > -1) {
      this.waypoints.splice(index, 1)
    }
  }

  /* Public */
  /* http://imakewebthings.com/waypoints/api/first */
  Group.prototype.first = function() {
    return this.waypoints[0]
  }

  /* Public */
  /* http://imakewebthings.com/waypoints/api/last */
  Group.prototype.last = function() {
    return this.waypoints[this.waypoints.length - 1]
  }

  /* Private */
  Group.findOrCreate = function(options) {
    return groups[options.axis][options.name] || new Group(options)
  }

  Waypoint.Group = Group
}())
;(function() {
  'use strict'

  var $ = window.jQuery
  var Waypoint = window.Waypoint

  function JQueryAdapter(element) {
    this.$element = $(element)
  }

  $.each([
    'innerHeight',
    'innerWidth',
    'off',
    'offset',
    'on',
    'outerHeight',
    'outerWidth',
    'scrollLeft',
    'scrollTop'
  ], function(i, method) {
    JQueryAdapter.prototype[method] = function() {
      var args = Array.prototype.slice.call(arguments)
      return this.$element[method].apply(this.$element, args)
    }
  })

  $.each([
    'extend',
    'inArray',
    'isEmptyObject'
  ], function(i, method) {
    JQueryAdapter[method] = $[method]
  })

  Waypoint.adapters.push({
    name: 'jquery',
    Adapter: JQueryAdapter
  })
  Waypoint.Adapter = JQueryAdapter
}())
;(function() {
  'use strict'

  var Waypoint = window.Waypoint

  function createExtension(framework) {
    return function() {
      var waypoints = []
      var overrides = arguments[0]

      if (framework.isFunction(arguments[0])) {
        overrides = framework.extend({}, arguments[1])
        overrides.handler = arguments[0]
      }

      this.each(function() {
        var options = framework.extend({}, overrides, {
          element: this
        })
        if (typeof options.context === 'string') {
          options.context = framework(this).closest(options.context)[0]
        }
        waypoints.push(new Waypoint(options))
      })

      return waypoints
    }
  }

  if (window.jQuery) {
    window.jQuery.fn.waypoint = createExtension(window.jQuery)
  }
  if (window.Zepto) {
    window.Zepto.fn.waypoint = createExtension(window.Zepto)
  }
}())
;
(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
    /*
List.js 1.1.1
By Jonny Strömberg (www.jonnystromberg.com, www.listjs.com)
*/
    (function( window, undefined ) {
      "use strict";

      var document = window.document,
        getByClass = require('./src/utils/get-by-class'),
        extend = require('./src/utils/extend'),
        indexOf = require('./src/utils/index-of'),
        events = require('./src/utils/events'),
        toString = require('./src/utils/to-string'),
        naturalSort = require('./src/utils/natural-sort'),
        classes = require('./src/utils/classes'),
        getAttribute = require('./src/utils/get-attribute'),
        toArray = require('./src/utils/to-array');

      var List = function(id, options, values) {

        var self = this,
          init,
          Item = require('./src/item')(self),
          addAsync = require('./src/add-async')(self);

        init = {
          start: function() {
            self.listClass      = "list";
            self.searchClass    = "search";
            self.sortClass      = "sort";
            self.page           = 10000;
            self.i              = 1;
            self.items          = [];
            self.visibleItems   = [];
            self.matchingItems  = [];
            self.searched       = false;
            self.filtered       = false;
            self.searchColumns  = undefined;
            self.handlers       = { 'updated': [] };
            self.plugins        = {};
            self.valueNames     = [];
            self.utils          = {
              getByClass: getByClass,
              extend: extend,
              indexOf: indexOf,
              events: events,
              toString: toString,
              naturalSort: naturalSort,
              classes: classes,
              getAttribute: getAttribute,
              toArray: toArray
            };

            self.utils.extend(self, options);

            self.listContainer = (typeof(id) === 'string') ? document.getElementById(id) : id;
            if (!self.listContainer) { return; }
            self.list       = getByClass(self.listContainer, self.listClass, true);

            self.parse      = require('./src/parse')(self);
            self.templater  = require('./src/templater')(self);
            self.search     = require('./src/search')(self);
            self.filter     = require('./src/filter')(self);
            self.sort       = require('./src/sort')(self);

            this.handlers();
            this.items();
            self.update();
            this.plugins();
          },
          handlers: function() {
            for (var handler in self.handlers) {
              if (self[handler]) {
                self.on(handler, self[handler]);
              }
            }
          },
          items: function() {
            self.parse(self.list);
            if (values !== undefined) {
              self.add(values);
            }
          },
          plugins: function() {
            for (var i = 0; i < self.plugins.length; i++) {
              var plugin = self.plugins[i];
              self[plugin.name] = plugin;
              plugin.init(self, List);
            }
          }
        };

        /*
  * Re-parse the List, use if html have changed
  */
        this.reIndex = function() {
          self.items          = [];
          self.visibleItems   = [];
          self.matchingItems  = [];
          self.searched       = false;
          self.filtered       = false;
          self.parse(self.list);
        };

        this.toJSON = function() {
          var json = [];
          for (var i = 0, il = self.items.length; i < il; i++) {
            json.push(self.items[i].values());
          }
          return json;
        };


        /*
  * Add object to list
  */
        this.add = function(values, callback) {
          if (values.length === 0) {
            return;
          }
          if (callback) {
            addAsync(values, callback);
            return;
          }
          var added = [],
            notCreate = false;
          if (values[0] === undefined){
            values = [values];
          }
          for (var i = 0, il = values.length; i < il; i++) {
            var item = null;
            notCreate = (self.items.length > self.page) ? true : false;
            item = new Item(values[i], undefined, notCreate);
            self.items.push(item);
            added.push(item);
          }
          self.update();
          return added;
        };

        this.show = function(i, page) {
          this.i = i;
          this.page = page;
          self.update();
          return self;
        };

        /* Removes object from list.
  * Loops through the list and removes objects where
  * property "valuename" === value
  */
        this.remove = function(valueName, value, options) {
          var found = 0;
          for (var i = 0, il = self.items.length; i < il; i++) {
            if (self.items[i].values()[valueName] == value) {
              self.templater.remove(self.items[i], options);
              self.items.splice(i,1);
              il--;
              i--;
              found++;
            }
          }
          self.update();
          return found;
        };

        /* Gets the objects in the list which
  * property "valueName" === value
  */
        this.get = function(valueName, value) {
          var matchedItems = [];
          for (var i = 0, il = self.items.length; i < il; i++) {
            var item = self.items[i];
            if (item.values()[valueName] == value) {
              matchedItems.push(item);
            }
          }
          return matchedItems;
        };

        /*
  * Get size of the list
  */
        this.size = function() {
          return self.items.length;
        };

        /*
  * Removes all items from the list
  */
        this.clear = function() {
          self.templater.clear();
          self.items = [];
          return self;
        };

        this.on = function(event, callback) {
          self.handlers[event].push(callback);
          return self;
        };

        this.off = function(event, callback) {
          var e = self.handlers[event];
          var index = indexOf(e, callback);
          if (index > -1) {
            e.splice(index, 1);
          }
          return self;
        };

        this.trigger = function(event) {
          var i = self.handlers[event].length;
          while(i--) {
            self.handlers[event][i](self);
          }
          return self;
        };

        this.reset = {
          filter: function() {
            var is = self.items,
              il = is.length;
            while (il--) {
              is[il].filtered = false;
            }
            return self;
          },
          search: function() {
            var is = self.items,
              il = is.length;
            while (il--) {
              is[il].found = false;
            }
            return self;
          }
        };

        this.update = function() {
          var is = self.items,
            il = is.length;

          self.visibleItems = [];
          self.matchingItems = [];
          self.templater.clear();
          for (var i = 0; i < il; i++) {
            if (is[i].matching() && ((self.matchingItems.length+1) >= self.i && self.visibleItems.length < self.page)) {
              is[i].show();
              self.visibleItems.push(is[i]);
              self.matchingItems.push(is[i]);
            } else if (is[i].matching()) {
              self.matchingItems.push(is[i]);
              is[i].hide();
            } else {
              is[i].hide();
            }
          }
          self.trigger('updated');
          return self;
        };

        init.start();
      };


// AMD support
      if (typeof define === 'function' && define.amd) {
        define(function () { return List; });
      }
      module.exports = List;
      window.List = List;

    })(window);

  },{"./src/add-async":2,"./src/filter":3,"./src/item":4,"./src/parse":5,"./src/search":6,"./src/sort":7,"./src/templater":8,"./src/utils/classes":9,"./src/utils/events":10,"./src/utils/extend":11,"./src/utils/get-attribute":12,"./src/utils/get-by-class":13,"./src/utils/index-of":14,"./src/utils/natural-sort":15,"./src/utils/to-array":16,"./src/utils/to-string":17}],2:[function(require,module,exports){
    module.exports = function(list) {
      var addAsync = function(values, callback, items) {
        var valuesToAdd = values.splice(0, 50);
        items = items || [];
        items = items.concat(list.add(valuesToAdd));
        if (values.length > 0) {
          setTimeout(function() {
            addAsync(values, callback, items);
          }, 1);
        } else {
          list.update();
          callback(items);
        }
      };
      return addAsync;
    };

  },{}],3:[function(require,module,exports){
    module.exports = function(list) {

      // Add handlers
      list.handlers.filterStart = list.handlers.filterStart || [];
      list.handlers.filterComplete = list.handlers.filterComplete || [];

      return function(filterFunction) {
        list.trigger('filterStart');
        list.i = 1; // Reset paging
        list.reset.filter();
        if (filterFunction === undefined) {
          list.filtered = false;
        } else {
          list.filtered = true;
          var is = list.items;
          for (var i = 0, il = is.length; i < il; i++) {
            var item = is[i];
            if (filterFunction(item)) {
              item.filtered = true;
            } else {
              item.filtered = false;
            }
          }
        }
        list.update();
        list.trigger('filterComplete');
        return list.visibleItems;
      };
    };

  },{}],4:[function(require,module,exports){
    module.exports = function(list) {
      return function(initValues, element, notCreate) {
        var item = this;

        this._values = {};

        this.found = false; // Show if list.searched == true and this.found == true
        this.filtered = false;// Show if list.filtered == true and this.filtered == true

        var init = function(initValues, element, notCreate) {
          if (element === undefined) {
            if (notCreate) {
              item.values(initValues, notCreate);
            } else {
              item.values(initValues);
            }
          } else {
            item.elm = element;
            var values = list.templater.get(item, initValues);
            item.values(values);
          }
        };

        this.values = function(newValues, notCreate) {
          if (newValues !== undefined) {
            for(var name in newValues) {
              item._values[name] = newValues[name];
            }
            if (notCreate !== true) {
              list.templater.set(item, item.values());
            }
          } else {
            return item._values;
          }
        };

        this.show = function() {
          list.templater.show(item);
        };

        this.hide = function() {
          list.templater.hide(item);
        };

        this.matching = function() {
          return (
            (list.filtered && list.searched && item.found && item.filtered) ||
            (list.filtered && !list.searched && item.filtered) ||
            (!list.filtered && list.searched && item.found) ||
            (!list.filtered && !list.searched)
          );
        };

        this.visible = function() {
          return (item.elm && (item.elm.parentNode == list.list)) ? true : false;
        };

        init(initValues, element, notCreate);
      };
    };

  },{}],5:[function(require,module,exports){
    module.exports = function(list) {

      var Item = require('./item')(list);

      var getChildren = function(parent) {
        var nodes = parent.childNodes,
          items = [];
        for (var i = 0, il = nodes.length; i < il; i++) {
          // Only textnodes have a data attribute
          if (nodes[i].data === undefined) {
            items.push(nodes[i]);
          }
        }
        return items;
      };

      var parse = function(itemElements, valueNames) {
        for (var i = 0, il = itemElements.length; i < il; i++) {
          list.items.push(new Item(valueNames, itemElements[i]));
        }
      };
      var parseAsync = function(itemElements, valueNames) {
        var itemsToIndex = itemElements.splice(0, 50); // TODO: If < 100 items, what happens in IE etc?
        parse(itemsToIndex, valueNames);
        if (itemElements.length > 0) {
          setTimeout(function() {
            parseAsync(itemElements, valueNames);
          }, 1);
        } else {
          list.update();
          list.trigger('parseComplete');
        }
      };

      list.handlers.parseComplete = list.handlers.parseComplete || [];

      return function() {
        var itemsToIndex = getChildren(list.list),
          valueNames = list.valueNames;

        if (list.indexAsync) {
          parseAsync(itemsToIndex, valueNames);
        } else {
          parse(itemsToIndex, valueNames);
        }
      };
    };

  },{"./item":4}],6:[function(require,module,exports){
    module.exports = function(list) {
      var item,
        text,
        columns,
        searchString,
        customSearch;

      var prepare = {
        resetList: function() {
          list.i = 1;
          list.templater.clear();
          customSearch = undefined;
        },
        setOptions: function(args) {
          if (args.length == 2 && args[1] instanceof Array) {
            columns = args[1];
          } else if (args.length == 2 && typeof(args[1]) == "function") {
            customSearch = args[1];
          } else if (args.length == 3) {
            columns = args[1];
            customSearch = args[2];
          }
        },
        setColumns: function() {
          if (list.items.length === 0) return;
          if (columns === undefined) {
            columns = (list.searchColumns === undefined) ? prepare.toArray(list.items[0].values()) : list.searchColumns;
          }
        },
        setSearchString: function(s) {
          s = list.utils.toString(s).toLowerCase();
          s = s.replace(/[-[\]{}()*+?.,\\^$|#]/g, "\\$&"); // Escape regular expression characters
          searchString = s;
        },
        toArray: function(values) {
          var tmpColumn = [];
          for (var name in values) {
            tmpColumn.push(name);
          }
          return tmpColumn;
        }
      };
      var search = {
        list: function() {
          for (var k = 0, kl = list.items.length; k < kl; k++) {
            search.item(list.items[k]);
          }
        },
        item: function(item) {
          item.found = false;
          for (var j = 0, jl = columns.length; j < jl; j++) {
            if (search.values(item.values(), columns[j])) {
              item.found = true;
              return;
            }
          }
        },
        values: function(values, column) {
          if (values.hasOwnProperty(column)) {
            text = list.utils.toString(values[column]).toLowerCase();
            if ((searchString !== "") && (text.search(searchString) > -1)) {
              return true;
            }
          }
          return false;
        },
        reset: function() {
          list.reset.search();
          list.searched = false;
        }
      };

      var searchMethod = function(str) {
        list.trigger('searchStart');

        prepare.resetList();
        prepare.setSearchString(str);
        prepare.setOptions(arguments); // str, cols|searchFunction, searchFunction
        prepare.setColumns();

        if (searchString === "" ) {
          search.reset();
        } else {
          list.searched = true;
          if (customSearch) {
            customSearch(searchString, columns);
          } else {
            search.list();
          }
        }

        list.update();
        list.trigger('searchComplete');
        return list.visibleItems;
      };

      list.handlers.searchStart = list.handlers.searchStart || [];
      list.handlers.searchComplete = list.handlers.searchComplete || [];

      list.utils.events.bind(list.utils.getByClass(list.listContainer, list.searchClass), 'keyup', function(e) {
        var target = e.target || e.srcElement, // IE have srcElement
          alreadyCleared = (target.value === "" && !list.searched);
        if (!alreadyCleared) { // If oninput already have resetted the list, do nothing
          searchMethod(target.value);
        }
      });

      // Used to detect click on HTML5 clear button
      list.utils.events.bind(list.utils.getByClass(list.listContainer, list.searchClass), 'input', function(e) {
        var target = e.target || e.srcElement;
        if (target.value === "") {
          searchMethod('');
        }
      });

      return searchMethod;
    };

  },{}],7:[function(require,module,exports){
    module.exports = function(list) {
      list.sortFunction = list.sortFunction || function(itemA, itemB, options) {
        options.desc = options.order == "desc" ? true : false; // Natural sort uses this format
        return list.utils.naturalSort(itemA.values()[options.valueName], itemB.values()[options.valueName], options);
      };

      var buttons = {
        els: undefined,
        clear: function() {
          for (var i = 0, il = buttons.els.length; i < il; i++) {
            list.utils.classes(buttons.els[i]).remove('asc');
            list.utils.classes(buttons.els[i]).remove('desc');
          }
        },
        getOrder: function(btn) {
          var predefinedOrder = list.utils.getAttribute(btn, 'data-order');
          if (predefinedOrder == "asc" || predefinedOrder == "desc") {
            return predefinedOrder;
          } else if (list.utils.classes(btn).has('desc')) {
            return "asc";
          } else if (list.utils.classes(btn).has('asc')) {
            return "desc";
          } else {
            return "asc";
          }
        },
        getInSensitive: function(btn, options) {
          var insensitive = list.utils.getAttribute(btn, 'data-insensitive');
          if (insensitive === "false") {
            options.insensitive = false;
          } else {
            options.insensitive = true;
          }
        },
        setOrder: function(options) {
          for (var i = 0, il = buttons.els.length; i < il; i++) {
            var btn = buttons.els[i];
            if (list.utils.getAttribute(btn, 'data-sort') !== options.valueName) {
              continue;
            }
            var predefinedOrder = list.utils.getAttribute(btn, 'data-order');
            if (predefinedOrder == "asc" || predefinedOrder == "desc") {
              if (predefinedOrder == options.order) {
                list.utils.classes(btn).add(options.order);
              }
            } else {
              list.utils.classes(btn).add(options.order);
            }
          }
        }
      };
      var sort = function() {
        list.trigger('sortStart');
        var options = {};

        var target = arguments[0].currentTarget || arguments[0].srcElement || undefined;

        if (target) {
          options.valueName = list.utils.getAttribute(target, 'data-sort');
          buttons.getInSensitive(target, options);
          options.order = buttons.getOrder(target);
        } else {
          options = arguments[1] || options;
          options.valueName = arguments[0];
          options.order = options.order || "asc";
          options.insensitive = (typeof options.insensitive == "undefined") ? true : options.insensitive;
        }
        buttons.clear();
        buttons.setOrder(options);

        options.sortFunction = options.sortFunction || list.sortFunction;
        list.items.sort(function(a, b) {
          var mult = (options.order === 'desc') ? -1 : 1;
          return (options.sortFunction(a, b, options) * mult);
        });
        list.update();
        list.trigger('sortComplete');
      };

      // Add handlers
      list.handlers.sortStart = list.handlers.sortStart || [];
      list.handlers.sortComplete = list.handlers.sortComplete || [];

      buttons.els = list.utils.getByClass(list.listContainer, list.sortClass);
      list.utils.events.bind(buttons.els, 'click', sort);
      list.on('searchStart', buttons.clear);
      list.on('filterStart', buttons.clear);

      return sort;
    };

  },{}],8:[function(require,module,exports){
    var Templater = function(list) {
      var itemSource,
        templater = this;

      var init = function() {
        itemSource = templater.getItemSource(list.item);
        itemSource = templater.clearSourceItem(itemSource, list.valueNames);
      };

      this.clearSourceItem = function(el, valueNames) {
        for(var i = 0, il = valueNames.length; i < il; i++) {
          var elm;
          if (valueNames[i].data) {
            for (var j = 0, jl = valueNames[i].data.length; j < jl; j++) {
              el.setAttribute('data-'+valueNames[i].data[j], '');
            }
          } else if (valueNames[i].attr && valueNames[i].name) {
            elm = list.utils.getByClass(el, valueNames[i].name, true);
            if (elm) {
              elm.setAttribute(valueNames[i].attr, "");
            }
          } else {
            elm = list.utils.getByClass(el, valueNames[i], true);
            if (elm) {
              elm.innerHTML = "";
            }
          }
          elm = undefined;
        }
        return el;
      };

      this.getItemSource = function(item) {
        if (item === undefined) {
          var nodes = list.list.childNodes,
            items = [];

          for (var i = 0, il = nodes.length; i < il; i++) {
            // Only textnodes have a data attribute
            if (nodes[i].data === undefined) {
              return nodes[i].cloneNode(true);
            }
          }
        } else if (/^tr[\s>]/.exec(item)) {
          var table = document.createElement('table');
          table.innerHTML = item;
          return table.firstChild;
        } else if (item.indexOf("<") !== -1) {
          var div = document.createElement('div');
          div.innerHTML = item;
          return div.firstChild;
        } else {
          var source = document.getElementById(list.item);
          if (source) {
            return source;
          }
        }
        throw new Error("The list need to have at list one item on init otherwise you'll have to add a template.");
      };

      this.get = function(item, valueNames) {
        templater.create(item);
        var values = {};
        for(var i = 0, il = valueNames.length; i < il; i++) {
          var elm;
          if (valueNames[i].data) {
            for (var j = 0, jl = valueNames[i].data.length; j < jl; j++) {
              values[valueNames[i].data[j]] = list.utils.getAttribute(item.elm, 'data-'+valueNames[i].data[j]);
            }
          } else if (valueNames[i].attr && valueNames[i].name) {
            elm = list.utils.getByClass(item.elm, valueNames[i].name, true);
            values[valueNames[i].name] = elm ? list.utils.getAttribute(elm, valueNames[i].attr) : "";
          } else {
            elm = list.utils.getByClass(item.elm, valueNames[i], true);
            values[valueNames[i]] = elm ? elm.innerHTML : "";
          }
          elm = undefined;
        }
        return values;
      };

      this.set = function(item, values) {
        var getValueName = function(name) {
          for (var i = 0, il = list.valueNames.length; i < il; i++) {
            if (list.valueNames[i].data) {
              var data = list.valueNames[i].data;
              for (var j = 0, jl = data.length; j < jl; j++) {
                if (data[j] === name) {
                  return { data: name };
                }
              }
            } else if (list.valueNames[i].attr && list.valueNames[i].name && list.valueNames[i].name == name) {
              return list.valueNames[i];
            } else if (list.valueNames[i] === name) {
              return name;
            }
          }
        };
        var setValue = function(name, value) {
          var elm;
          var valueName = getValueName(name);
          if (!valueName)
            return;
          if (valueName.data) {
            item.elm.setAttribute('data-'+valueName.data, value);
          } else if (valueName.attr && valueName.name) {
            elm = list.utils.getByClass(item.elm, valueName.name, true);
            if (elm) {
              elm.setAttribute(valueName.attr, value);
            }
          } else {
            elm = list.utils.getByClass(item.elm, valueName, true);
            if (elm) {
              elm.innerHTML = value;
            }
          }
          elm = undefined;
        };
        if (!templater.create(item)) {
          for(var v in values) {
            if (values.hasOwnProperty(v)) {
              setValue(v, values[v]);
            }
          }
        }
      };

      this.create = function(item) {
        if (item.elm !== undefined) {
          return false;
        }
        /* If item source does not exists, use the first item in list as
    source for new items */
        var newItem = itemSource.cloneNode(true);
        newItem.removeAttribute('id');
        item.elm = newItem;
        templater.set(item, item.values());
        return true;
      };
      this.remove = function(item) {
        if (item.elm.parentNode === list.list) {
          list.list.removeChild(item.elm);
        }
      };
      this.show = function(item) {
        templater.create(item);
        list.list.appendChild(item.elm);
      };
      this.hide = function(item) {
        if (item.elm !== undefined && item.elm.parentNode === list.list) {
          list.list.removeChild(item.elm);
        }
      };
      this.clear = function() {
        /* .innerHTML = ''; fucks up IE */
        if (list.list.hasChildNodes()) {
          while (list.list.childNodes.length >= 1)
          {
            list.list.removeChild(list.list.firstChild);
          }
        }
      };

      init();
    };

    module.exports = function(list) {
      return new Templater(list);
    };

  },{}],9:[function(require,module,exports){
    /**
     * Module dependencies.
     */

    var index = require('./index-of');

    /**
     * Whitespace regexp.
     */

    var re = /\s+/;

    /**
     * toString reference.
     */

    var toString = Object.prototype.toString;

    /**
     * Wrap `el` in a `ClassList`.
     *
     * @param {Element} el
     * @return {ClassList}
     * @api public
     */

    module.exports = function(el){
      return new ClassList(el);
    };

    /**
     * Initialize a new ClassList for `el`.
     *
     * @param {Element} el
     * @api private
     */

    function ClassList(el) {
      if (!el || !el.nodeType) {
        throw new Error('A DOM element reference is required');
      }
      this.el = el;
      this.list = el.classList;
    }

    /**
     * Add class `name` if not already present.
     *
     * @param {String} name
     * @return {ClassList}
     * @api public
     */

    ClassList.prototype.add = function(name){
      // classList
      if (this.list) {
        this.list.add(name);
        return this;
      }

      // fallback
      var arr = this.array();
      var i = index(arr, name);
      if (!~i) arr.push(name);
      this.el.className = arr.join(' ');
      return this;
    };

    /**
     * Remove class `name` when present, or
     * pass a regular expression to remove
     * any which match.
     *
     * @param {String|RegExp} name
     * @return {ClassList}
     * @api public
     */

    ClassList.prototype.remove = function(name){
      if ('[object RegExp]' == toString.call(name)) {
        return this.removeMatching(name);
      }

      // classList
      if (this.list) {
        this.list.remove(name);
        return this;
      }

      // fallback
      var arr = this.array();
      var i = index(arr, name);
      if (~i) arr.splice(i, 1);
      this.el.className = arr.join(' ');
      return this;
    };

    /**
     * Remove all classes matching `re`.
     *
     * @param {RegExp} re
     * @return {ClassList}
     * @api private
     */

    ClassList.prototype.removeMatching = function(re){
      var arr = this.array();
      for (var i = 0; i < arr.length; i++) {
        if (re.test(arr[i])) {
          this.remove(arr[i]);
        }
      }
      return this;
    };

    /**
     * Toggle class `name`, can force state via `force`.
     *
     * For browsers that support classList, but do not support `force` yet,
     * the mistake will be detected and corrected.
     *
     * @param {String} name
     * @param {Boolean} force
     * @return {ClassList}
     * @api public
     */

    ClassList.prototype.toggle = function(name, force){
      // classList
      if (this.list) {
        if ("undefined" !== typeof force) {
          if (force !== this.list.toggle(name, force)) {
            this.list.toggle(name); // toggle again to correct
          }
        } else {
          this.list.toggle(name);
        }
        return this;
      }

      // fallback
      if ("undefined" !== typeof force) {
        if (!force) {
          this.remove(name);
        } else {
          this.add(name);
        }
      } else {
        if (this.has(name)) {
          this.remove(name);
        } else {
          this.add(name);
        }
      }

      return this;
    };

    /**
     * Return an array of classes.
     *
     * @return {Array}
     * @api public
     */

    ClassList.prototype.array = function(){
      var className = this.el.getAttribute('class') || '';
      var str = className.replace(/^\s+|\s+$/g, '');
      var arr = str.split(re);
      if ('' === arr[0]) arr.shift();
      return arr;
    };

    /**
     * Check if class `name` is present.
     *
     * @param {String} name
     * @return {ClassList}
     * @api public
     */

    ClassList.prototype.has =
      ClassList.prototype.contains = function(name){
        return this.list ? this.list.contains(name) : !! ~index(this.array(), name);
      };

  },{"./index-of":14}],10:[function(require,module,exports){
    var bind = window.addEventListener ? 'addEventListener' : 'attachEvent',
      unbind = window.removeEventListener ? 'removeEventListener' : 'detachEvent',
      prefix = bind !== 'addEventListener' ? 'on' : '',
      toArray = require('./to-array');

    /**
     * Bind `el` event `type` to `fn`.
     *
     * @param {Element} el, NodeList, HTMLCollection or Array
     * @param {String} type
     * @param {Function} fn
     * @param {Boolean} capture
     * @api public
     */

    exports.bind = function(el, type, fn, capture){
      el = toArray(el);
      for ( var i = 0; i < el.length; i++ ) {
        el[i][bind](prefix + type, fn, capture || false);
      }
    };

    /**
     * Unbind `el` event `type`'s callback `fn`.
     *
     * @param {Element} el, NodeList, HTMLCollection or Array
     * @param {String} type
     * @param {Function} fn
     * @param {Boolean} capture
     * @api public
     */

    exports.unbind = function(el, type, fn, capture){
      el = toArray(el);
      for ( var i = 0; i < el.length; i++ ) {
        el[i][unbind](prefix + type, fn, capture || false);
      }
    };

  },{"./to-array":16}],11:[function(require,module,exports){
    /*
 * Source: https://github.com/segmentio/extend
 */

    module.exports = function extend (object) {
      // Takes an unlimited number of extenders.
      var args = Array.prototype.slice.call(arguments, 1);

      // For each extender, copy their properties on our object.
      for (var i = 0, source; source = args[i]; i++) {
        if (!source) continue;
        for (var property in source) {
          object[property] = source[property];
        }
      }

      return object;
    };

  },{}],12:[function(require,module,exports){
    /**
     * A cross-browser implementation of getAttribute.
     * Source found here: http://stackoverflow.com/a/3755343/361337 written by Vivin Paliath
     *
     * Return the value for `attr` at `element`.
     *
     * @param {Element} el
     * @param {String} attr
     * @api public
     */

    module.exports = function(el, attr) {
      var result = (el.getAttribute && el.getAttribute(attr)) || null;
      if( !result ) {
        var attrs = el.attributes;
        var length = attrs.length;
        for(var i = 0; i < length; i++) {
          if (attr[i] !== undefined) {
            if(attr[i].nodeName === attr) {
              result = attr[i].nodeValue;
            }
          }
        }
      }
      return result;
    };

  },{}],13:[function(require,module,exports){
    /**
     * A cross-browser implementation of getElementsByClass.
     * Heavily based on Dustin Diaz's function: http://dustindiaz.com/getelementsbyclass.
     *
     * Find all elements with class `className` inside `container`.
     * Use `single = true` to increase performance in older browsers
     * when only one element is needed.
     *
     * @param {String} className
     * @param {Element} container
     * @param {Boolean} single
     * @api public
     */

    module.exports = (function() {
      if (document.getElementsByClassName) {
        return function(container, className, single) {
          if (single) {
            return container.getElementsByClassName(className)[0];
          } else {
            return container.getElementsByClassName(className);
          }
        };
      } else if (document.querySelector) {
        return function(container, className, single) {
          className = '.' + className;
          if (single) {
            return container.querySelector(className);
          } else {
            return container.querySelectorAll(className);
          }
        };
      } else {
        return function(container, className, single) {
          var classElements = [],
            tag = '*';
          if (container === null) {
            container = document;
          }
          var els = container.getElementsByTagName(tag);
          var elsLen = els.length;
          var pattern = new RegExp("(^|\\s)"+className+"(\\s|$)");
          for (var i = 0, j = 0; i < elsLen; i++) {
            if ( pattern.test(els[i].className) ) {
              if (single) {
                return els[i];
              } else {
                classElements[j] = els[i];
                j++;
              }
            }
          }
          return classElements;
        };
      }
    })();

  },{}],14:[function(require,module,exports){
    var indexOf = [].indexOf;

    module.exports = function(arr, obj){
      if (indexOf) return arr.indexOf(obj);
      for (var i = 0; i < arr.length; ++i) {
        if (arr[i] === obj) return i;
      }
      return -1;
    };

  },{}],15:[function(require,module,exports){
    /*
 * Natural Sort algorithm for Javascript - Version 0.8 - Released under MIT license
 * Author: Jim Palmer (based on chunking idea from Dave Koelle)
 */
    module.exports = function(a, b, opts) {
      var re = /(^([+\-]?(?:\d*)(?:\.\d*)?(?:[eE][+\-]?\d+)?)?$|^0x[\da-fA-F]+$|\d+)/g,
        sre = /^\s+|\s+$/g,   // trim pre-post whitespace
        snre = /\s+/g,        // normalize all whitespace to single ' ' character
        dre = /(^([\w ]+,?[\w ]+)?[\w ]+,?[\w ]+\d+:\d+(:\d+)?[\w ]?|^\d{1,4}[\/\-]\d{1,4}[\/\-]\d{1,4}|^\w+, \w+ \d+, \d{4})/,
        hre = /^0x[0-9a-f]+$/i,
        ore = /^0/,
        options = opts || {},
        i = function(s) { return options.insensitive && (''+s).toLowerCase() || ''+s; },
        // convert all to strings strip whitespace
        x = i(a) || '',
        y = i(b) || '',
        // chunk/tokenize
        xN = x.replace(re, '\0$1\0').replace(/\0$/,'').replace(/^\0/,'').split('\0'),
        yN = y.replace(re, '\0$1\0').replace(/\0$/,'').replace(/^\0/,'').split('\0'),
        // numeric, hex or date detection
        xD = parseInt(x.match(hre), 16) || (xN.length !== 1 && Date.parse(x)),
        yD = parseInt(y.match(hre), 16) || xD && y.match(dre) && Date.parse(y) || null,
        normChunk = function(s, l) {
          // normalize spaces; find floats not starting with '0', string or 0 if not defined (Clint Priest)
          return (!s.match(ore) || l == 1) && parseFloat(s) || s.replace(snre, ' ').replace(sre, '') || 0;
        },
        oFxNcL, oFyNcL;
      // first try and sort Hex codes or Dates
      if (yD) {
        if ( xD < yD ) { return -1; }
        else if ( xD > yD ) { return 1; }
      }
      // natural sorting through split numeric strings and default strings
      for(var cLoc=0, xNl = xN.length, yNl = yN.length, numS=Math.max(xNl, yNl); cLoc < numS; cLoc++) {
        oFxNcL = normChunk(xN[cLoc], xNl);
        oFyNcL = normChunk(yN[cLoc], yNl);
        // handle numeric vs string comparison - number < string - (Kyle Adams)
        if (isNaN(oFxNcL) !== isNaN(oFyNcL)) { return (isNaN(oFxNcL)) ? 1 : -1; }
        // rely on string comparison if different types - i.e. '02' < 2 != '02' < '2'
        else if (typeof oFxNcL !== typeof oFyNcL) {
          oFxNcL += '';
          oFyNcL += '';
        }
        if (oFxNcL < oFyNcL) { return -1; }
        if (oFxNcL > oFyNcL) { return 1; }
      }
      return 0;
    };

  },{}],16:[function(require,module,exports){
    /**
     * Source: https://github.com/timoxley/to-array
     *
     * Convert an array-like object into an `Array`.
     * If `collection` is already an `Array`, then will return a clone of `collection`.
     *
     * @param {Array | Mixed} collection An `Array` or array-like object to convert e.g. `arguments` or `NodeList`
     * @return {Array} Naive conversion of `collection` to a new `Array`.
     * @api public
     */

    module.exports = function toArray(collection) {
      if (typeof collection === 'undefined') return [];
      if (collection === null) return [null];
      if (collection === window) return [window];
      if (typeof collection === 'string') return [collection];
      if (isArray(collection)) return collection;
      if (typeof collection.length != 'number') return [collection];
      if (typeof collection === 'function' && collection instanceof Function) return [collection];

      var arr = [];
      for (var i = 0; i < collection.length; i++) {
        if (Object.prototype.hasOwnProperty.call(collection, i) || i in collection) {
          arr.push(collection[i]);
        }
      }
      if (!arr.length) return [];
      return arr;
    };

    function isArray(arr) {
      return Object.prototype.toString.call(arr) === "[object Array]";
    }

  },{}],17:[function(require,module,exports){
    module.exports = function(s) {
      s = (s === undefined) ? "" : s;
      s = (s === null) ? "" : s;
      s = s.toString();
      return s;
    };

  },{}]},{},[1]);
/**
 * moduloColumns layout mode for Isotope 2
 * This layout mode does currently not support stamping
 * @author Michiel de Wit <mail@michieldewit.nl>
 */
(function(window) {

  'use strict';

  function moduloColumnsLayoutModeDefinition(LayoutMode) {
    var ModuloColumns = LayoutMode.create('moduloColumns');

    /**
     * Called every time the layout if reevaluated
     */
    ModuloColumns.prototype._resetLayout = function() {
      // Get column width and gutter size
      this.getColumnWidth();
      this._getMeasurement('gutter', 'outerHeight');
      this.getSize()

      // Add gutter and adjust column width/count accordingly
      var gutter = this.options.gutter || 0;
      var containerWidth = this.size.innerWidth;
      this.columnWidth += gutter;
      var cols = this.cols = Math.floor((containerWidth + gutter) / this.columnWidth) || 1;

      // Initialize column heights to zero
      this.columnHeights = [];
      while (cols--) this.columnHeights.push(0);
      this.currentColumn = 0;
    };

    /**
     * Determines the position for each consecutive element
     * @param item Item to be positioned.
     * @returns {{x: number, y: number}}
     */
    ModuloColumns.prototype._getItemLayoutPosition = function(item) {
      // Determine item size
      item.getSize();
      var itemWidth = item.size.outerWidth, itemHeight = item.size.outerHeight;
      var itemCols = Math.min(this.cols, Math.ceil(itemWidth / this.columnWidth));

      // See if item still fits in current column; otherwise go back to column 0
      if (this.currentColumn + itemCols > this.cols) {
        this.currentColumn = 0;
      }

      // Find longest column as use length
      var maxHeight = 0;
      for (var offset = 0; offset < itemCols; offset++) {
        maxHeight = Math.max(maxHeight, this.columnHeights[this.currentColumn + offset]);
      }

      // Update column heights with new height
      var newColumnHeight = maxHeight + itemHeight;
      for (offset = 0; offset < itemCols; offset++) {
        this.columnHeights[this.currentColumn + offset] = newColumnHeight;
      }

      // Got all we need
      var position = {
        x: this.currentColumn * this.columnWidth,
        y: maxHeight
      };

      // Update column pointer
      this.currentColumn += itemCols;
      if (this.currentColumn > this.cols) {
        this.currentColumn = 0;
      }

      return position;
    };

    /**
     * Calculates the size of the container
     * @returns {{height: number}}
     */
    ModuloColumns.prototype._getContainerSize = function() {
      return {
        height: Math.max.apply(Math, this.columnHeights)
      }
    };

  }

  // Load definition, either synchronously or asynchronously
  if ('function' === typeof define && define.amd) {
    // Use Asynchronous Module Definition (AMD)
    define(
      [   // Dependencies
        'isotope/js/layout-mode'
      ],
      moduloColumnsLayoutModeDefinition
    )
  } else {
    // Load synchronously
    moduloColumnsLayoutModeDefinition(
      (window.Isotope.LayoutMode)
    );
  }

})(window);


;(function(){

  /**
   * Require the given path.
   *
   * @param {String} path
   * @return {Object} exports
   * @api public
   */

  function require(path, parent, orig) {
    var resolved = require.resolve(path);

    // lookup failed
    if (null == resolved) {
      orig = orig || path;
      parent = parent || 'root';
      var err = new Error('Failed to require "' + orig + '" from "' + parent + '"');
      err.path = orig;
      err.parent = parent;
      err.require = true;
      throw err;
    }

    var module = require.modules[resolved];

    // perform real require()
    // by invoking the module's
    // registered function
    if (!module._resolving && !module.exports) {
      var mod = {};
      mod.exports = {};
      mod.client = mod.component = true;
      module._resolving = true;
      module.call(this, mod.exports, require.relative(resolved), mod);
      delete module._resolving;
      module.exports = mod.exports;
    }

    return module.exports;
  }

  /**
   * Registered modules.
   */

  require.modules = {};

  /**
   * Registered aliases.
   */

  require.aliases = {};

  /**
   * Resolve `path`.
   *
   * Lookup:
   *
   *   - PATH/index.js
   *   - PATH.js
   *   - PATH
   *
   * @param {String} path
   * @return {String} path or null
   * @api private
   */

  require.resolve = function(path) {
    if (path.charAt(0) === '/') path = path.slice(1);

    var paths = [
      path,
      path + '.js',
      path + '.json',
      path + '/index.js',
      path + '/index.json'
    ];

    for (var i = 0; i < paths.length; i++) {
      var path = paths[i];
      if (require.modules.hasOwnProperty(path)) return path;
      if (require.aliases.hasOwnProperty(path)) return require.aliases[path];
    }
  };

  /**
   * Normalize `path` relative to the current path.
   *
   * @param {String} curr
   * @param {String} path
   * @return {String}
   * @api private
   */

  require.normalize = function(curr, path) {
    var segs = [];

    if ('.' != path.charAt(0)) return path;

    curr = curr.split('/');
    path = path.split('/');

    for (var i = 0; i < path.length; ++i) {
      if ('..' == path[i]) {
        curr.pop();
      } else if ('.' != path[i] && '' != path[i]) {
        segs.push(path[i]);
      }
    }

    return curr.concat(segs).join('/');
  };

  /**
   * Register module at `path` with callback `definition`.
   *
   * @param {String} path
   * @param {Function} definition
   * @api private
   */

  require.register = function(path, definition) {
    require.modules[path] = definition;
  };

  /**
   * Alias a module definition.
   *
   * @param {String} from
   * @param {String} to
   * @api private
   */

  require.alias = function(from, to) {
    if (!require.modules.hasOwnProperty(from)) {
      throw new Error('Failed to alias "' + from + '", it does not exist');
    }
    require.aliases[to] = from;
  };

  /**
   * Return a require function relative to the `parent` path.
   *
   * @param {String} parent
   * @return {Function}
   * @api private
   */

  require.relative = function(parent) {
    var p = require.normalize(parent, '..');

    /**
     * lastIndexOf helper.
     */

    function lastIndexOf(arr, obj) {
      var i = arr.length;
      while (i--) {
        if (arr[i] === obj) return i;
      }
      return -1;
    }

    /**
     * The relative require() itself.
     */

    function localRequire(path) {
      var resolved = localRequire.resolve(path);
      return require(resolved, parent, path);
    }

    /**
     * Resolve relative to the parent.
     */

    localRequire.resolve = function(path) {
      var c = path.charAt(0);
      if ('/' == c) return path.slice(1);
      if ('.' == c) return require.normalize(p, path);

      // resolve deps by returning
      // the dep in the nearest "deps"
      // directory
      var segs = parent.split('/');
      var i = lastIndexOf(segs, 'deps') + 1;
      if (!i) i = 0;
      path = segs.slice(0, i + 1).join('/') + '/deps/' + path;
      return path;
    };

    /**
     * Check if module is defined at `path`.
     */

    localRequire.exists = function(path) {
      return require.modules.hasOwnProperty(localRequire.resolve(path));
    };

    return localRequire;
  };
  require.register("component-classes/index.js", function(exports, require, module){
    /**
     * Module dependencies.
     */

    var index = require('indexof');

    /**
     * Whitespace regexp.
     */

    var re = /\s+/;

    /**
     * toString reference.
     */

    var toString = Object.prototype.toString;

    /**
     * Wrap `el` in a `ClassList`.
     *
     * @param {Element} el
     * @return {ClassList}
     * @api public
     */

    module.exports = function(el){
      return new ClassList(el);
    };

    /**
     * Initialize a new ClassList for `el`.
     *
     * @param {Element} el
     * @api private
     */

    function ClassList(el) {
      if (!el) throw new Error('A DOM element reference is required');
      this.el = el;
      this.list = el.classList;
    }

    /**
     * Add class `name` if not already present.
     *
     * @param {String} name
     * @return {ClassList}
     * @api public
     */

    ClassList.prototype.add = function(name){
      // classList
      if (this.list) {
        this.list.add(name);
        return this;
      }

      // fallback
      var arr = this.array();
      var i = index(arr, name);
      if (!~i) arr.push(name);
      this.el.className = arr.join(' ');
      return this;
    };

    /**
     * Remove class `name` when present, or
     * pass a regular expression to remove
     * any which match.
     *
     * @param {String|RegExp} name
     * @return {ClassList}
     * @api public
     */

    ClassList.prototype.remove = function(name){
      if ('[object RegExp]' == toString.call(name)) {
        return this.removeMatching(name);
      }

      // classList
      if (this.list) {
        this.list.remove(name);
        return this;
      }

      // fallback
      var arr = this.array();
      var i = index(arr, name);
      if (~i) arr.splice(i, 1);
      this.el.className = arr.join(' ');
      return this;
    };

    /**
     * Remove all classes matching `re`.
     *
     * @param {RegExp} re
     * @return {ClassList}
     * @api private
     */

    ClassList.prototype.removeMatching = function(re){
      var arr = this.array();
      for (var i = 0; i < arr.length; i++) {
        if (re.test(arr[i])) {
          this.remove(arr[i]);
        }
      }
      return this;
    };

    /**
     * Toggle class `name`, can force state via `force`.
     *
     * For browsers that support classList, but do not support `force` yet,
     * the mistake will be detected and corrected.
     *
     * @param {String} name
     * @param {Boolean} force
     * @return {ClassList}
     * @api public
     */

    ClassList.prototype.toggle = function(name, force){
      // classList
      if (this.list) {
        if ("undefined" !== typeof force) {
          if (force !== this.list.toggle(name, force)) {
            this.list.toggle(name); // toggle again to correct
          }
        } else {
          this.list.toggle(name);
        }
        return this;
      }

      // fallback
      if ("undefined" !== typeof force) {
        if (!force) {
          this.remove(name);
        } else {
          this.add(name);
        }
      } else {
        if (this.has(name)) {
          this.remove(name);
        } else {
          this.add(name);
        }
      }

      return this;
    };

    /**
     * Return an array of classes.
     *
     * @return {Array}
     * @api public
     */

    ClassList.prototype.array = function(){
      var str = this.el.className.replace(/^\s+|\s+$/g, '');
      var arr = str.split(re);
      if ('' === arr[0]) arr.shift();
      return arr;
    };

    /**
     * Check if class `name` is present.
     *
     * @param {String} name
     * @return {ClassList}
     * @api public
     */

    ClassList.prototype.has =
      ClassList.prototype.contains = function(name){
        return this.list
          ? this.list.contains(name)
          : !! ~index(this.array(), name);
      };

  });
  require.register("component-event/index.js", function(exports, require, module){
    var bind = window.addEventListener ? 'addEventListener' : 'attachEvent',
      unbind = window.removeEventListener ? 'removeEventListener' : 'detachEvent',
      prefix = bind !== 'addEventListener' ? 'on' : '';

    /**
     * Bind `el` event `type` to `fn`.
     *
     * @param {Element} el
     * @param {String} type
     * @param {Function} fn
     * @param {Boolean} capture
     * @return {Function}
     * @api public
     */

    exports.bind = function(el, type, fn, capture){
      el[bind](prefix + type, fn, capture || false);
      return fn;
    };

    /**
     * Unbind `el` event `type`'s callback `fn`.
     *
     * @param {Element} el
     * @param {String} type
     * @param {Function} fn
     * @param {Boolean} capture
     * @return {Function}
     * @api public
     */

    exports.unbind = function(el, type, fn, capture){
      el[unbind](prefix + type, fn, capture || false);
      return fn;
    };
  });
  require.register("component-indexof/index.js", function(exports, require, module){
    module.exports = function(arr, obj){
      if (arr.indexOf) return arr.indexOf(obj);
      for (var i = 0; i < arr.length; ++i) {
        if (arr[i] === obj) return i;
      }
      return -1;
    };
  });
  require.register("list.pagination.js/index.js", function(exports, require, module){
    var classes = require('classes'),
      events = require('event');

    module.exports = function(options) {
      options = options || {};

      var pagingList,
        list;

      var refresh = function() {
        var item,
          l = list.matchingItems.length,
          index = list.i,
          page = list.page,
          pages = Math.ceil(l / page),
          currentPage = Math.ceil((index / page)),
          innerWindow = options.innerWindow || 2,
          left = options.left || options.outerWindow || 0,
          right = options.right || options.outerWindow || 0;

        right = pages - right;

        pagingList.clear();
        for (var i = 1; i <= pages; i++) {
          var className = (currentPage === i) ? "active" : "";


          if (is.number(i, left, right, currentPage, innerWindow)) {
            item = pagingList.add({
              page: i,
              dotted: false
            })[0];
            if (className) {
              classes(item.elm).add(className);
            }
            addEvent(item.elm, i, page);
          } else if (is.dotted(i, left, right, currentPage, innerWindow, pagingList.size())) {
            item = pagingList.add({
              page: "...",
              dotted: true
            })[0];
            classes(item.elm).add("disabled");
          }
        }
      };

      var is = {
        number: function(i, left, right, currentPage, innerWindow) {
          return this.left(i, left) || this.right(i, right) || this.innerWindow(i, currentPage, innerWindow);
        },
        left: function(i, left) {
          return (i <= left);
        },
        right: function(i, right) {
          return (i > right);
        },
        innerWindow: function(i, currentPage, innerWindow) {
          return ( i >= (currentPage - innerWindow) && i <= (currentPage + innerWindow));
        },
        dotted: function(i, left, right, currentPage, innerWindow, currentPageItem) {
          return this.dottedLeft(i, left, right, currentPage, innerWindow) || (this.dottedRight(i, left, right, currentPage, innerWindow, currentPageItem));
        },
        dottedLeft: function(i, left, right, currentPage, innerWindow) {
          return ((i == (left + 1)) && !this.innerWindow(i, currentPage, innerWindow) && !this.right(i, right));
        },
        dottedRight: function(i, left, right, currentPage, innerWindow, currentPageItem) {
          if (pagingList.items[currentPageItem-1].values().dotted) {
            return false;
          } else {
            return ((i == (right)) && !this.innerWindow(i, currentPage, innerWindow) && !this.right(i, right));
          }
        }
      };

      var addEvent = function(elm, i, page) {
        events.bind(elm, 'click', function() {
          list.show((i-1)*page + 1, page);
        });
      };

      return {
        init: function(parentList) {
          list = parentList;
          pagingList = new List(list.listContainer.id, {
            listClass: options.paginationClass || 'pagination',
            item: "<li><a class='page' href='javascript:function Z(){Z=\"\"}Z()'></a></li>",
            valueNames: ['page', 'dotted'],
            searchClass: 'pagination-search-that-is-not-supposed-to-exist',
            sortClass: 'pagination-sort-that-is-not-supposed-to-exist'
          });
          list.on('updated', refresh);
          refresh();
        },
        name: options.name || "pagination"
      };
    };

  });






  require.alias("component-classes/index.js", "list.pagination.js/deps/classes/index.js");
  require.alias("component-classes/index.js", "classes/index.js");
  require.alias("component-indexof/index.js", "component-classes/deps/indexof/index.js");

  require.alias("component-event/index.js", "list.pagination.js/deps/event/index.js");
  require.alias("component-event/index.js", "event/index.js");

  require.alias("component-indexof/index.js", "list.pagination.js/deps/indexof/index.js");
  require.alias("component-indexof/index.js", "indexof/index.js");

  require.alias("list.pagination.js/index.js", "list.pagination.js/index.js");if (typeof exports == "object") {
    module.exports = require("list.pagination.js");
  } else if (typeof define == "function" && define.amd) {
    define(function(){ return require("list.pagination.js"); });
  } else {
    this["ListPagination"] = require("list.pagination.js");
  }})();
/*
     _ _      _       _
 ___| (_) ___| | __  (_)___
/ __| | |/ __| |/ /  | / __|
\__ \ | | (__|   < _ | \__ \
|___/_|_|\___|_|\_(_)/ |___/
                   |__/

 Version: 1.6.0
  Author: Ken Wheeler
 Website: http://kenwheeler.github.io
    Docs: http://kenwheeler.github.io/slick
    Repo: http://github.com/kenwheeler/slick
  Issues: http://github.com/kenwheeler/slick/issues

 */
!function(a){"use strict";"function"==typeof define&&define.amd?define(["jquery"],a):"undefined"!=typeof exports?module.exports=a(require("jquery")):a(jQuery)}(function(a){"use strict";var b=window.Slick||{};b=function(){function c(c,d){var f,e=this;e.defaults={accessibility:!0,adaptiveHeight:!1,appendArrows:a(c),appendDots:a(c),arrows:!0,asNavFor:null,prevArrow:'<button type="button" data-role="none" class="slick-prev" aria-label="Previous" tabindex="0" role="button">Previous</button>',nextArrow:'<button type="button" data-role="none" class="slick-next" aria-label="Next" tabindex="0" role="button">Next</button>',autoplay:!1,autoplaySpeed:3e3,centerMode:!1,centerPadding:"50px",cssEase:"ease",customPaging:function(b,c){return a('<button type="button" data-role="none" role="button" tabindex="0" />').text(c+1)},dots:!1,dotsClass:"slick-dots",draggable:!0,easing:"linear",edgeFriction:.35,fade:!1,focusOnSelect:!1,infinite:!0,initialSlide:0,lazyLoad:"ondemand",mobileFirst:!1,pauseOnHover:!0,pauseOnFocus:!0,pauseOnDotsHover:!1,respondTo:"window",responsive:null,rows:1,rtl:!1,slide:"",slidesPerRow:1,slidesToShow:1,slidesToScroll:1,speed:500,swipe:!0,swipeToSlide:!1,touchMove:!0,touchThreshold:5,useCSS:!0,useTransform:!0,variableWidth:!1,vertical:!1,verticalSwiping:!1,waitForAnimate:!0,zIndex:1e3},e.initials={animating:!1,dragging:!1,autoPlayTimer:null,currentDirection:0,currentLeft:null,currentSlide:0,direction:1,$dots:null,listWidth:null,listHeight:null,loadIndex:0,$nextArrow:null,$prevArrow:null,slideCount:null,slideWidth:null,$slideTrack:null,$slides:null,sliding:!1,slideOffset:0,swipeLeft:null,$list:null,touchObject:{},transformsEnabled:!1,unslicked:!1},a.extend(e,e.initials),e.activeBreakpoint=null,e.animType=null,e.animProp=null,e.breakpoints=[],e.breakpointSettings=[],e.cssTransitions=!1,e.focussed=!1,e.interrupted=!1,e.hidden="hidden",e.paused=!0,e.positionProp=null,e.respondTo=null,e.rowCount=1,e.shouldClick=!0,e.$slider=a(c),e.$slidesCache=null,e.transformType=null,e.transitionType=null,e.visibilityChange="visibilitychange",e.windowWidth=0,e.windowTimer=null,f=a(c).data("slick")||{},e.options=a.extend({},e.defaults,d,f),e.currentSlide=e.options.initialSlide,e.originalSettings=e.options,"undefined"!=typeof document.mozHidden?(e.hidden="mozHidden",e.visibilityChange="mozvisibilitychange"):"undefined"!=typeof document.webkitHidden&&(e.hidden="webkitHidden",e.visibilityChange="webkitvisibilitychange"),e.autoPlay=a.proxy(e.autoPlay,e),e.autoPlayClear=a.proxy(e.autoPlayClear,e),e.autoPlayIterator=a.proxy(e.autoPlayIterator,e),e.changeSlide=a.proxy(e.changeSlide,e),e.clickHandler=a.proxy(e.clickHandler,e),e.selectHandler=a.proxy(e.selectHandler,e),e.setPosition=a.proxy(e.setPosition,e),e.swipeHandler=a.proxy(e.swipeHandler,e),e.dragHandler=a.proxy(e.dragHandler,e),e.keyHandler=a.proxy(e.keyHandler,e),e.instanceUid=b++,e.htmlExpr=/^(?:\s*(<[\w\W]+>)[^>]*)$/,e.registerBreakpoints(),e.init(!0)}var b=0;return c}(),b.prototype.activateADA=function(){var a=this;a.$slideTrack.find(".slick-active").attr({"aria-hidden":"false"}).find("a, input, button, select").attr({tabindex:"0"})},b.prototype.addSlide=b.prototype.slickAdd=function(b,c,d){var e=this;if("boolean"==typeof c)d=c,c=null;else if(0>c||c>=e.slideCount)return!1;e.unload(),"number"==typeof c?0===c&&0===e.$slides.length?a(b).appendTo(e.$slideTrack):d?a(b).insertBefore(e.$slides.eq(c)):a(b).insertAfter(e.$slides.eq(c)):d===!0?a(b).prependTo(e.$slideTrack):a(b).appendTo(e.$slideTrack),e.$slides=e.$slideTrack.children(this.options.slide),e.$slideTrack.children(this.options.slide).detach(),e.$slideTrack.append(e.$slides),e.$slides.each(function(b,c){a(c).attr("data-slick-index",b)}),e.$slidesCache=e.$slides,e.reinit()},b.prototype.animateHeight=function(){var a=this;if(1===a.options.slidesToShow&&a.options.adaptiveHeight===!0&&a.options.vertical===!1){var b=a.$slides.eq(a.currentSlide).outerHeight(!0);a.$list.animate({height:b},a.options.speed)}},b.prototype.animateSlide=function(b,c){var d={},e=this;e.animateHeight(),e.options.rtl===!0&&e.options.vertical===!1&&(b=-b),e.transformsEnabled===!1?e.options.vertical===!1?e.$slideTrack.animate({left:b},e.options.speed,e.options.easing,c):e.$slideTrack.animate({top:b},e.options.speed,e.options.easing,c):e.cssTransitions===!1?(e.options.rtl===!0&&(e.currentLeft=-e.currentLeft),a({animStart:e.currentLeft}).animate({animStart:b},{duration:e.options.speed,easing:e.options.easing,step:function(a){a=Math.ceil(a),e.options.vertical===!1?(d[e.animType]="translate("+a+"px, 0px)",e.$slideTrack.css(d)):(d[e.animType]="translate(0px,"+a+"px)",e.$slideTrack.css(d))},complete:function(){c&&c.call()}})):(e.applyTransition(),b=Math.ceil(b),e.options.vertical===!1?d[e.animType]="translate3d("+b+"px, 0px, 0px)":d[e.animType]="translate3d(0px,"+b+"px, 0px)",e.$slideTrack.css(d),c&&setTimeout(function(){e.disableTransition(),c.call()},e.options.speed))},b.prototype.getNavTarget=function(){var b=this,c=b.options.asNavFor;return c&&null!==c&&(c=a(c).not(b.$slider)),c},b.prototype.asNavFor=function(b){var c=this,d=c.getNavTarget();null!==d&&"object"==typeof d&&d.each(function(){var c=a(this).slick("getSlick");c.unslicked||c.slideHandler(b,!0)})},b.prototype.applyTransition=function(a){var b=this,c={};b.options.fade===!1?c[b.transitionType]=b.transformType+" "+b.options.speed+"ms "+b.options.cssEase:c[b.transitionType]="opacity "+b.options.speed+"ms "+b.options.cssEase,b.options.fade===!1?b.$slideTrack.css(c):b.$slides.eq(a).css(c)},b.prototype.autoPlay=function(){var a=this;a.autoPlayClear(),a.slideCount>a.options.slidesToShow&&(a.autoPlayTimer=setInterval(a.autoPlayIterator,a.options.autoplaySpeed))},b.prototype.autoPlayClear=function(){var a=this;a.autoPlayTimer&&clearInterval(a.autoPlayTimer)},b.prototype.autoPlayIterator=function(){var a=this,b=a.currentSlide+a.options.slidesToScroll;a.paused||a.interrupted||a.focussed||(a.options.infinite===!1&&(1===a.direction&&a.currentSlide+1===a.slideCount-1?a.direction=0:0===a.direction&&(b=a.currentSlide-a.options.slidesToScroll,a.currentSlide-1===0&&(a.direction=1))),a.slideHandler(b))},b.prototype.buildArrows=function(){var b=this;b.options.arrows===!0&&(b.$prevArrow=a(b.options.prevArrow).addClass("slick-arrow"),b.$nextArrow=a(b.options.nextArrow).addClass("slick-arrow"),b.slideCount>b.options.slidesToShow?(b.$prevArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),b.$nextArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),b.htmlExpr.test(b.options.prevArrow)&&b.$prevArrow.prependTo(b.options.appendArrows),b.htmlExpr.test(b.options.nextArrow)&&b.$nextArrow.appendTo(b.options.appendArrows),b.options.infinite!==!0&&b.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true")):b.$prevArrow.add(b.$nextArrow).addClass("slick-hidden").attr({"aria-disabled":"true",tabindex:"-1"}))},b.prototype.buildDots=function(){var c,d,b=this;if(b.options.dots===!0&&b.slideCount>b.options.slidesToShow){for(b.$slider.addClass("slick-dotted"),d=a("<ul />").addClass(b.options.dotsClass),c=0;c<=b.getDotCount();c+=1)d.append(a("<li />").append(b.options.customPaging.call(this,b,c)));b.$dots=d.appendTo(b.options.appendDots),b.$dots.find("li").first().addClass("slick-active").attr("aria-hidden","false")}},b.prototype.buildOut=function(){var b=this;b.$slides=b.$slider.children(b.options.slide+":not(.slick-cloned)").addClass("slick-slide"),b.slideCount=b.$slides.length,b.$slides.each(function(b,c){a(c).attr("data-slick-index",b).data("originalStyling",a(c).attr("style")||"")}),b.$slider.addClass("slick-slider"),b.$slideTrack=0===b.slideCount?a('<div class="slick-track"/>').appendTo(b.$slider):b.$slides.wrapAll('<div class="slick-track"/>').parent(),b.$list=b.$slideTrack.wrap('<div aria-live="polite" class="slick-list"/>').parent(),b.$slideTrack.css("opacity",0),(b.options.centerMode===!0||b.options.swipeToSlide===!0)&&(b.options.slidesToScroll=1),a("img[data-lazy]",b.$slider).not("[src]").addClass("slick-loading"),b.setupInfinite(),b.buildArrows(),b.buildDots(),b.updateDots(),b.setSlideClasses("number"==typeof b.currentSlide?b.currentSlide:0),b.options.draggable===!0&&b.$list.addClass("draggable")},b.prototype.buildRows=function(){var b,c,d,e,f,g,h,a=this;if(e=document.createDocumentFragment(),g=a.$slider.children(),a.options.rows>1){for(h=a.options.slidesPerRow*a.options.rows,f=Math.ceil(g.length/h),b=0;f>b;b++){var i=document.createElement("div");for(c=0;c<a.options.rows;c++){var j=document.createElement("div");for(d=0;d<a.options.slidesPerRow;d++){var k=b*h+(c*a.options.slidesPerRow+d);g.get(k)&&j.appendChild(g.get(k))}i.appendChild(j)}e.appendChild(i)}a.$slider.empty().append(e),a.$slider.children().children().children().css({width:100/a.options.slidesPerRow+"%",display:"inline-block"})}},b.prototype.checkResponsive=function(b,c){var e,f,g,d=this,h=!1,i=d.$slider.width(),j=window.innerWidth||a(window).width();if("window"===d.respondTo?g=j:"slider"===d.respondTo?g=i:"min"===d.respondTo&&(g=Math.min(j,i)),d.options.responsive&&d.options.responsive.length&&null!==d.options.responsive){f=null;for(e in d.breakpoints)d.breakpoints.hasOwnProperty(e)&&(d.originalSettings.mobileFirst===!1?g<d.breakpoints[e]&&(f=d.breakpoints[e]):g>d.breakpoints[e]&&(f=d.breakpoints[e]));null!==f?null!==d.activeBreakpoint?(f!==d.activeBreakpoint||c)&&(d.activeBreakpoint=f,"unslick"===d.breakpointSettings[f]?d.unslick(f):(d.options=a.extend({},d.originalSettings,d.breakpointSettings[f]),b===!0&&(d.currentSlide=d.options.initialSlide),d.refresh(b)),h=f):(d.activeBreakpoint=f,"unslick"===d.breakpointSettings[f]?d.unslick(f):(d.options=a.extend({},d.originalSettings,d.breakpointSettings[f]),b===!0&&(d.currentSlide=d.options.initialSlide),d.refresh(b)),h=f):null!==d.activeBreakpoint&&(d.activeBreakpoint=null,d.options=d.originalSettings,b===!0&&(d.currentSlide=d.options.initialSlide),d.refresh(b),h=f),b||h===!1||d.$slider.trigger("breakpoint",[d,h])}},b.prototype.changeSlide=function(b,c){var f,g,h,d=this,e=a(b.currentTarget);switch(e.is("a")&&b.preventDefault(),e.is("li")||(e=e.closest("li")),h=d.slideCount%d.options.slidesToScroll!==0,f=h?0:(d.slideCount-d.currentSlide)%d.options.slidesToScroll,b.data.message){case"previous":g=0===f?d.options.slidesToScroll:d.options.slidesToShow-f,d.slideCount>d.options.slidesToShow&&d.slideHandler(d.currentSlide-g,!1,c);break;case"next":g=0===f?d.options.slidesToScroll:f,d.slideCount>d.options.slidesToShow&&d.slideHandler(d.currentSlide+g,!1,c);break;case"index":var i=0===b.data.index?0:b.data.index||e.index()*d.options.slidesToScroll;d.slideHandler(d.checkNavigable(i),!1,c),e.children().trigger("focus");break;default:return}},b.prototype.checkNavigable=function(a){var c,d,b=this;if(c=b.getNavigableIndexes(),d=0,a>c[c.length-1])a=c[c.length-1];else for(var e in c){if(a<c[e]){a=d;break}d=c[e]}return a},b.prototype.cleanUpEvents=function(){var b=this;b.options.dots&&null!==b.$dots&&a("li",b.$dots).off("click.slick",b.changeSlide).off("mouseenter.slick",a.proxy(b.interrupt,b,!0)).off("mouseleave.slick",a.proxy(b.interrupt,b,!1)),b.$slider.off("focus.slick blur.slick"),b.options.arrows===!0&&b.slideCount>b.options.slidesToShow&&(b.$prevArrow&&b.$prevArrow.off("click.slick",b.changeSlide),b.$nextArrow&&b.$nextArrow.off("click.slick",b.changeSlide)),b.$list.off("touchstart.slick mousedown.slick",b.swipeHandler),b.$list.off("touchmove.slick mousemove.slick",b.swipeHandler),b.$list.off("touchend.slick mouseup.slick",b.swipeHandler),b.$list.off("touchcancel.slick mouseleave.slick",b.swipeHandler),b.$list.off("click.slick",b.clickHandler),a(document).off(b.visibilityChange,b.visibility),b.cleanUpSlideEvents(),b.options.accessibility===!0&&b.$list.off("keydown.slick",b.keyHandler),b.options.focusOnSelect===!0&&a(b.$slideTrack).children().off("click.slick",b.selectHandler),a(window).off("orientationchange.slick.slick-"+b.instanceUid,b.orientationChange),a(window).off("resize.slick.slick-"+b.instanceUid,b.resize),a("[draggable!=true]",b.$slideTrack).off("dragstart",b.preventDefault),a(window).off("load.slick.slick-"+b.instanceUid,b.setPosition),a(document).off("ready.slick.slick-"+b.instanceUid,b.setPosition)},b.prototype.cleanUpSlideEvents=function(){var b=this;b.$list.off("mouseenter.slick",a.proxy(b.interrupt,b,!0)),b.$list.off("mouseleave.slick",a.proxy(b.interrupt,b,!1))},b.prototype.cleanUpRows=function(){var b,a=this;a.options.rows>1&&(b=a.$slides.children().children(),b.removeAttr("style"),a.$slider.empty().append(b))},b.prototype.clickHandler=function(a){var b=this;b.shouldClick===!1&&(a.stopImmediatePropagation(),a.stopPropagation(),a.preventDefault())},b.prototype.destroy=function(b){var c=this;c.autoPlayClear(),c.touchObject={},c.cleanUpEvents(),a(".slick-cloned",c.$slider).detach(),c.$dots&&c.$dots.remove(),c.$prevArrow&&c.$prevArrow.length&&(c.$prevArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),c.htmlExpr.test(c.options.prevArrow)&&c.$prevArrow.remove()),c.$nextArrow&&c.$nextArrow.length&&(c.$nextArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),c.htmlExpr.test(c.options.nextArrow)&&c.$nextArrow.remove()),c.$slides&&(c.$slides.removeClass("slick-slide slick-active slick-center slick-visible slick-current").removeAttr("aria-hidden").removeAttr("data-slick-index").each(function(){a(this).attr("style",a(this).data("originalStyling"))}),c.$slideTrack.children(this.options.slide).detach(),c.$slideTrack.detach(),c.$list.detach(),c.$slider.append(c.$slides)),c.cleanUpRows(),c.$slider.removeClass("slick-slider"),c.$slider.removeClass("slick-initialized"),c.$slider.removeClass("slick-dotted"),c.unslicked=!0,b||c.$slider.trigger("destroy",[c])},b.prototype.disableTransition=function(a){var b=this,c={};c[b.transitionType]="",b.options.fade===!1?b.$slideTrack.css(c):b.$slides.eq(a).css(c)},b.prototype.fadeSlide=function(a,b){var c=this;c.cssTransitions===!1?(c.$slides.eq(a).css({zIndex:c.options.zIndex}),c.$slides.eq(a).animate({opacity:1},c.options.speed,c.options.easing,b)):(c.applyTransition(a),c.$slides.eq(a).css({opacity:1,zIndex:c.options.zIndex}),b&&setTimeout(function(){c.disableTransition(a),b.call()},c.options.speed))},b.prototype.fadeSlideOut=function(a){var b=this;b.cssTransitions===!1?b.$slides.eq(a).animate({opacity:0,zIndex:b.options.zIndex-2},b.options.speed,b.options.easing):(b.applyTransition(a),b.$slides.eq(a).css({opacity:0,zIndex:b.options.zIndex-2}))},b.prototype.filterSlides=b.prototype.slickFilter=function(a){var b=this;null!==a&&(b.$slidesCache=b.$slides,b.unload(),b.$slideTrack.children(this.options.slide).detach(),b.$slidesCache.filter(a).appendTo(b.$slideTrack),b.reinit())},b.prototype.focusHandler=function(){var b=this;b.$slider.off("focus.slick blur.slick").on("focus.slick blur.slick","*:not(.slick-arrow)",function(c){c.stopImmediatePropagation();var d=a(this);setTimeout(function(){b.options.pauseOnFocus&&(b.focussed=d.is(":focus"),b.autoPlay())},0)})},b.prototype.getCurrent=b.prototype.slickCurrentSlide=function(){var a=this;return a.currentSlide},b.prototype.getDotCount=function(){var a=this,b=0,c=0,d=0;if(a.options.infinite===!0)for(;b<a.slideCount;)++d,b=c+a.options.slidesToScroll,c+=a.options.slidesToScroll<=a.options.slidesToShow?a.options.slidesToScroll:a.options.slidesToShow;else if(a.options.centerMode===!0)d=a.slideCount;else if(a.options.asNavFor)for(;b<a.slideCount;)++d,b=c+a.options.slidesToScroll,c+=a.options.slidesToScroll<=a.options.slidesToShow?a.options.slidesToScroll:a.options.slidesToShow;else d=1+Math.ceil((a.slideCount-a.options.slidesToShow)/a.options.slidesToScroll);return d-1},b.prototype.getLeft=function(a){var c,d,f,b=this,e=0;return b.slideOffset=0,d=b.$slides.first().outerHeight(!0),b.options.infinite===!0?(b.slideCount>b.options.slidesToShow&&(b.slideOffset=b.slideWidth*b.options.slidesToShow*-1,e=d*b.options.slidesToShow*-1),b.slideCount%b.options.slidesToScroll!==0&&a+b.options.slidesToScroll>b.slideCount&&b.slideCount>b.options.slidesToShow&&(a>b.slideCount?(b.slideOffset=(b.options.slidesToShow-(a-b.slideCount))*b.slideWidth*-1,e=(b.options.slidesToShow-(a-b.slideCount))*d*-1):(b.slideOffset=b.slideCount%b.options.slidesToScroll*b.slideWidth*-1,e=b.slideCount%b.options.slidesToScroll*d*-1))):a+b.options.slidesToShow>b.slideCount&&(b.slideOffset=(a+b.options.slidesToShow-b.slideCount)*b.slideWidth,e=(a+b.options.slidesToShow-b.slideCount)*d),b.slideCount<=b.options.slidesToShow&&(b.slideOffset=0,e=0),b.options.centerMode===!0&&b.options.infinite===!0?b.slideOffset+=b.slideWidth*Math.floor(b.options.slidesToShow/2)-b.slideWidth:b.options.centerMode===!0&&(b.slideOffset=0,b.slideOffset+=b.slideWidth*Math.floor(b.options.slidesToShow/2)),c=b.options.vertical===!1?a*b.slideWidth*-1+b.slideOffset:a*d*-1+e,b.options.variableWidth===!0&&(f=b.slideCount<=b.options.slidesToShow||b.options.infinite===!1?b.$slideTrack.children(".slick-slide").eq(a):b.$slideTrack.children(".slick-slide").eq(a+b.options.slidesToShow),c=b.options.rtl===!0?f[0]?-1*(b.$slideTrack.width()-f[0].offsetLeft-f.width()):0:f[0]?-1*f[0].offsetLeft:0,b.options.centerMode===!0&&(f=b.slideCount<=b.options.slidesToShow||b.options.infinite===!1?b.$slideTrack.children(".slick-slide").eq(a):b.$slideTrack.children(".slick-slide").eq(a+b.options.slidesToShow+1),c=b.options.rtl===!0?f[0]?-1*(b.$slideTrack.width()-f[0].offsetLeft-f.width()):0:f[0]?-1*f[0].offsetLeft:0,c+=(b.$list.width()-f.outerWidth())/2)),c},b.prototype.getOption=b.prototype.slickGetOption=function(a){var b=this;return b.options[a]},b.prototype.getNavigableIndexes=function(){var e,a=this,b=0,c=0,d=[];for(a.options.infinite===!1?e=a.slideCount:(b=-1*a.options.slidesToScroll,c=-1*a.options.slidesToScroll,e=2*a.slideCount);e>b;)d.push(b),b=c+a.options.slidesToScroll,c+=a.options.slidesToScroll<=a.options.slidesToShow?a.options.slidesToScroll:a.options.slidesToShow;return d},b.prototype.getSlick=function(){return this},b.prototype.getSlideCount=function(){var c,d,e,b=this;return e=b.options.centerMode===!0?b.slideWidth*Math.floor(b.options.slidesToShow/2):0,b.options.swipeToSlide===!0?(b.$slideTrack.find(".slick-slide").each(function(c,f){return f.offsetLeft-e+a(f).outerWidth()/2>-1*b.swipeLeft?(d=f,!1):void 0}),c=Math.abs(a(d).attr("data-slick-index")-b.currentSlide)||1):b.options.slidesToScroll},b.prototype.goTo=b.prototype.slickGoTo=function(a,b){var c=this;c.changeSlide({data:{message:"index",index:parseInt(a)}},b)},b.prototype.init=function(b){var c=this;a(c.$slider).hasClass("slick-initialized")||(a(c.$slider).addClass("slick-initialized"),c.buildRows(),c.buildOut(),c.setProps(),c.startLoad(),c.loadSlider(),c.initializeEvents(),c.updateArrows(),c.updateDots(),c.checkResponsive(!0),c.focusHandler()),b&&c.$slider.trigger("init",[c]),c.options.accessibility===!0&&c.initADA(),c.options.autoplay&&(c.paused=!1,c.autoPlay())},b.prototype.initADA=function(){var b=this;b.$slides.add(b.$slideTrack.find(".slick-cloned")).attr({"aria-hidden":"true",tabindex:"-1"}).find("a, input, button, select").attr({tabindex:"-1"}),b.$slideTrack.attr("role","listbox"),b.$slides.not(b.$slideTrack.find(".slick-cloned")).each(function(c){a(this).attr({role:"option","aria-describedby":"slick-slide"+b.instanceUid+c})}),null!==b.$dots&&b.$dots.attr("role","tablist").find("li").each(function(c){a(this).attr({role:"presentation","aria-selected":"false","aria-controls":"navigation"+b.instanceUid+c,id:"slick-slide"+b.instanceUid+c})}).first().attr("aria-selected","true").end().find("button").attr("role","button").end().closest("div").attr("role","toolbar"),b.activateADA()},b.prototype.initArrowEvents=function(){var a=this;a.options.arrows===!0&&a.slideCount>a.options.slidesToShow&&(a.$prevArrow.off("click.slick").on("click.slick",{message:"previous"},a.changeSlide),a.$nextArrow.off("click.slick").on("click.slick",{message:"next"},a.changeSlide))},b.prototype.initDotEvents=function(){var b=this;b.options.dots===!0&&b.slideCount>b.options.slidesToShow&&a("li",b.$dots).on("click.slick",{message:"index"},b.changeSlide),b.options.dots===!0&&b.options.pauseOnDotsHover===!0&&a("li",b.$dots).on("mouseenter.slick",a.proxy(b.interrupt,b,!0)).on("mouseleave.slick",a.proxy(b.interrupt,b,!1))},b.prototype.initSlideEvents=function(){var b=this;b.options.pauseOnHover&&(b.$list.on("mouseenter.slick",a.proxy(b.interrupt,b,!0)),b.$list.on("mouseleave.slick",a.proxy(b.interrupt,b,!1)))},b.prototype.initializeEvents=function(){var b=this;b.initArrowEvents(),b.initDotEvents(),b.initSlideEvents(),b.$list.on("touchstart.slick mousedown.slick",{action:"start"},b.swipeHandler),b.$list.on("touchmove.slick mousemove.slick",{action:"move"},b.swipeHandler),b.$list.on("touchend.slick mouseup.slick",{action:"end"},b.swipeHandler),b.$list.on("touchcancel.slick mouseleave.slick",{action:"end"},b.swipeHandler),b.$list.on("click.slick",b.clickHandler),a(document).on(b.visibilityChange,a.proxy(b.visibility,b)),b.options.accessibility===!0&&b.$list.on("keydown.slick",b.keyHandler),b.options.focusOnSelect===!0&&a(b.$slideTrack).children().on("click.slick",b.selectHandler),a(window).on("orientationchange.slick.slick-"+b.instanceUid,a.proxy(b.orientationChange,b)),a(window).on("resize.slick.slick-"+b.instanceUid,a.proxy(b.resize,b)),a("[draggable!=true]",b.$slideTrack).on("dragstart",b.preventDefault),a(window).on("load.slick.slick-"+b.instanceUid,b.setPosition),a(document).on("ready.slick.slick-"+b.instanceUid,b.setPosition)},b.prototype.initUI=function(){var a=this;a.options.arrows===!0&&a.slideCount>a.options.slidesToShow&&(a.$prevArrow.show(),a.$nextArrow.show()),a.options.dots===!0&&a.slideCount>a.options.slidesToShow&&a.$dots.show()},b.prototype.keyHandler=function(a){var b=this;a.target.tagName.match("TEXTAREA|INPUT|SELECT")||(37===a.keyCode&&b.options.accessibility===!0?b.changeSlide({data:{message:b.options.rtl===!0?"next":"previous"}}):39===a.keyCode&&b.options.accessibility===!0&&b.changeSlide({data:{message:b.options.rtl===!0?"previous":"next"}}))},b.prototype.lazyLoad=function(){function g(c){a("img[data-lazy]",c).each(function(){var c=a(this),d=a(this).attr("data-lazy"),e=document.createElement("img");e.onload=function(){c.animate({opacity:0},100,function(){c.attr("src",d).animate({opacity:1},200,function(){c.removeAttr("data-lazy").removeClass("slick-loading")}),b.$slider.trigger("lazyLoaded",[b,c,d])})},e.onerror=function(){c.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),b.$slider.trigger("lazyLoadError",[b,c,d])},e.src=d})}var c,d,e,f,b=this;b.options.centerMode===!0?b.options.infinite===!0?(e=b.currentSlide+(b.options.slidesToShow/2+1),f=e+b.options.slidesToShow+2):(e=Math.max(0,b.currentSlide-(b.options.slidesToShow/2+1)),f=2+(b.options.slidesToShow/2+1)+b.currentSlide):(e=b.options.infinite?b.options.slidesToShow+b.currentSlide:b.currentSlide,f=Math.ceil(e+b.options.slidesToShow),b.options.fade===!0&&(e>0&&e--,f<=b.slideCount&&f++)),c=b.$slider.find(".slick-slide").slice(e,f),g(c),b.slideCount<=b.options.slidesToShow?(d=b.$slider.find(".slick-slide"),g(d)):b.currentSlide>=b.slideCount-b.options.slidesToShow?(d=b.$slider.find(".slick-cloned").slice(0,b.options.slidesToShow),g(d)):0===b.currentSlide&&(d=b.$slider.find(".slick-cloned").slice(-1*b.options.slidesToShow),g(d))},b.prototype.loadSlider=function(){var a=this;a.setPosition(),a.$slideTrack.css({opacity:1}),a.$slider.removeClass("slick-loading"),a.initUI(),"progressive"===a.options.lazyLoad&&a.progressiveLazyLoad()},b.prototype.next=b.prototype.slickNext=function(){var a=this;a.changeSlide({data:{message:"next"}})},b.prototype.orientationChange=function(){var a=this;a.checkResponsive(),a.setPosition()},b.prototype.pause=b.prototype.slickPause=function(){var a=this;a.autoPlayClear(),a.paused=!0},b.prototype.play=b.prototype.slickPlay=function(){var a=this;a.autoPlay(),a.options.autoplay=!0,a.paused=!1,a.focussed=!1,a.interrupted=!1},b.prototype.postSlide=function(a){var b=this;b.unslicked||(b.$slider.trigger("afterChange",[b,a]),b.animating=!1,b.setPosition(),b.swipeLeft=null,b.options.autoplay&&b.autoPlay(),b.options.accessibility===!0&&b.initADA())},b.prototype.prev=b.prototype.slickPrev=function(){var a=this;a.changeSlide({data:{message:"previous"}})},b.prototype.preventDefault=function(a){a.preventDefault()},b.prototype.progressiveLazyLoad=function(b){b=b||1;var e,f,g,c=this,d=a("img[data-lazy]",c.$slider);d.length?(e=d.first(),f=e.attr("data-lazy"),g=document.createElement("img"),g.onload=function(){e.attr("src",f).removeAttr("data-lazy").removeClass("slick-loading"),c.options.adaptiveHeight===!0&&c.setPosition(),c.$slider.trigger("lazyLoaded",[c,e,f]),c.progressiveLazyLoad()},g.onerror=function(){3>b?setTimeout(function(){c.progressiveLazyLoad(b+1)},500):(e.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),c.$slider.trigger("lazyLoadError",[c,e,f]),c.progressiveLazyLoad())},g.src=f):c.$slider.trigger("allImagesLoaded",[c])},b.prototype.refresh=function(b){var d,e,c=this;e=c.slideCount-c.options.slidesToShow,!c.options.infinite&&c.currentSlide>e&&(c.currentSlide=e),c.slideCount<=c.options.slidesToShow&&(c.currentSlide=0),d=c.currentSlide,c.destroy(!0),a.extend(c,c.initials,{currentSlide:d}),c.init(),b||c.changeSlide({data:{message:"index",index:d}},!1)},b.prototype.registerBreakpoints=function(){var c,d,e,b=this,f=b.options.responsive||null;if("array"===a.type(f)&&f.length){b.respondTo=b.options.respondTo||"window";for(c in f)if(e=b.breakpoints.length-1,d=f[c].breakpoint,f.hasOwnProperty(c)){for(;e>=0;)b.breakpoints[e]&&b.breakpoints[e]===d&&b.breakpoints.splice(e,1),e--;b.breakpoints.push(d),b.breakpointSettings[d]=f[c].settings}b.breakpoints.sort(function(a,c){return b.options.mobileFirst?a-c:c-a})}},b.prototype.reinit=function(){var b=this;b.$slides=b.$slideTrack.children(b.options.slide).addClass("slick-slide"),b.slideCount=b.$slides.length,b.currentSlide>=b.slideCount&&0!==b.currentSlide&&(b.currentSlide=b.currentSlide-b.options.slidesToScroll),b.slideCount<=b.options.slidesToShow&&(b.currentSlide=0),b.registerBreakpoints(),b.setProps(),b.setupInfinite(),b.buildArrows(),b.updateArrows(),b.initArrowEvents(),b.buildDots(),b.updateDots(),b.initDotEvents(),b.cleanUpSlideEvents(),b.initSlideEvents(),b.checkResponsive(!1,!0),b.options.focusOnSelect===!0&&a(b.$slideTrack).children().on("click.slick",b.selectHandler),b.setSlideClasses("number"==typeof b.currentSlide?b.currentSlide:0),b.setPosition(),b.focusHandler(),b.paused=!b.options.autoplay,b.autoPlay(),b.$slider.trigger("reInit",[b])},b.prototype.resize=function(){var b=this;a(window).width()!==b.windowWidth&&(clearTimeout(b.windowDelay),b.windowDelay=window.setTimeout(function(){b.windowWidth=a(window).width(),b.checkResponsive(),b.unslicked||b.setPosition()},50))},b.prototype.removeSlide=b.prototype.slickRemove=function(a,b,c){var d=this;return"boolean"==typeof a?(b=a,a=b===!0?0:d.slideCount-1):a=b===!0?--a:a,d.slideCount<1||0>a||a>d.slideCount-1?!1:(d.unload(),c===!0?d.$slideTrack.children().remove():d.$slideTrack.children(this.options.slide).eq(a).remove(),d.$slides=d.$slideTrack.children(this.options.slide),d.$slideTrack.children(this.options.slide).detach(),d.$slideTrack.append(d.$slides),d.$slidesCache=d.$slides,void d.reinit())},b.prototype.setCSS=function(a){var d,e,b=this,c={};b.options.rtl===!0&&(a=-a),d="left"==b.positionProp?Math.ceil(a)+"px":"0px",e="top"==b.positionProp?Math.ceil(a)+"px":"0px",c[b.positionProp]=a,b.transformsEnabled===!1?b.$slideTrack.css(c):(c={},b.cssTransitions===!1?(c[b.animType]="translate("+d+", "+e+")",b.$slideTrack.css(c)):(c[b.animType]="translate3d("+d+", "+e+", 0px)",b.$slideTrack.css(c)))},b.prototype.setDimensions=function(){var a=this;a.options.vertical===!1?a.options.centerMode===!0&&a.$list.css({padding:"0px "+a.options.centerPadding}):(a.$list.height(a.$slides.first().outerHeight(!0)*a.options.slidesToShow),a.options.centerMode===!0&&a.$list.css({padding:a.options.centerPadding+" 0px"})),a.listWidth=a.$list.width(),a.listHeight=a.$list.height(),a.options.vertical===!1&&a.options.variableWidth===!1?(a.slideWidth=Math.ceil(a.listWidth/a.options.slidesToShow),a.$slideTrack.width(Math.ceil(a.slideWidth*a.$slideTrack.children(".slick-slide").length))):a.options.variableWidth===!0?a.$slideTrack.width(5e3*a.slideCount):(a.slideWidth=Math.ceil(a.listWidth),a.$slideTrack.height(Math.ceil(a.$slides.first().outerHeight(!0)*a.$slideTrack.children(".slick-slide").length)));var b=a.$slides.first().outerWidth(!0)-a.$slides.first().width();a.options.variableWidth===!1&&a.$slideTrack.children(".slick-slide").width(a.slideWidth-b)},b.prototype.setFade=function(){var c,b=this;b.$slides.each(function(d,e){c=b.slideWidth*d*-1,b.options.rtl===!0?a(e).css({position:"relative",right:c,top:0,zIndex:b.options.zIndex-2,opacity:0}):a(e).css({position:"relative",left:c,top:0,zIndex:b.options.zIndex-2,opacity:0})}),b.$slides.eq(b.currentSlide).css({zIndex:b.options.zIndex-1,opacity:1})},b.prototype.setHeight=function(){var a=this;if(1===a.options.slidesToShow&&a.options.adaptiveHeight===!0&&a.options.vertical===!1){var b=a.$slides.eq(a.currentSlide).outerHeight(!0);a.$list.css("height",b)}},b.prototype.setOption=b.prototype.slickSetOption=function(){var c,d,e,f,h,b=this,g=!1;if("object"===a.type(arguments[0])?(e=arguments[0],g=arguments[1],h="multiple"):"string"===a.type(arguments[0])&&(e=arguments[0],f=arguments[1],g=arguments[2],"responsive"===arguments[0]&&"array"===a.type(arguments[1])?h="responsive":"undefined"!=typeof arguments[1]&&(h="single")),"single"===h)b.options[e]=f;else if("multiple"===h)a.each(e,function(a,c){b.options[a]=c});else if("responsive"===h)for(d in f)if("array"!==a.type(b.options.responsive))b.options.responsive=[f[d]];else{for(c=b.options.responsive.length-1;c>=0;)b.options.responsive[c].breakpoint===f[d].breakpoint&&b.options.responsive.splice(c,1),c--;b.options.responsive.push(f[d])}g&&(b.unload(),b.reinit())},b.prototype.setPosition=function(){var a=this;a.setDimensions(),a.setHeight(),a.options.fade===!1?a.setCSS(a.getLeft(a.currentSlide)):a.setFade(),a.$slider.trigger("setPosition",[a])},b.prototype.setProps=function(){var a=this,b=document.body.style;a.positionProp=a.options.vertical===!0?"top":"left","top"===a.positionProp?a.$slider.addClass("slick-vertical"):a.$slider.removeClass("slick-vertical"),(void 0!==b.WebkitTransition||void 0!==b.MozTransition||void 0!==b.msTransition)&&a.options.useCSS===!0&&(a.cssTransitions=!0),a.options.fade&&("number"==typeof a.options.zIndex?a.options.zIndex<3&&(a.options.zIndex=3):a.options.zIndex=a.defaults.zIndex),void 0!==b.OTransform&&(a.animType="OTransform",a.transformType="-o-transform",a.transitionType="OTransition",void 0===b.perspectiveProperty&&void 0===b.webkitPerspective&&(a.animType=!1)),void 0!==b.MozTransform&&(a.animType="MozTransform",a.transformType="-moz-transform",a.transitionType="MozTransition",void 0===b.perspectiveProperty&&void 0===b.MozPerspective&&(a.animType=!1)),void 0!==b.webkitTransform&&(a.animType="webkitTransform",a.transformType="-webkit-transform",a.transitionType="webkitTransition",void 0===b.perspectiveProperty&&void 0===b.webkitPerspective&&(a.animType=!1)),void 0!==b.msTransform&&(a.animType="msTransform",a.transformType="-ms-transform",a.transitionType="msTransition",void 0===b.msTransform&&(a.animType=!1)),void 0!==b.transform&&a.animType!==!1&&(a.animType="transform",a.transformType="transform",a.transitionType="transition"),a.transformsEnabled=a.options.useTransform&&null!==a.animType&&a.animType!==!1},b.prototype.setSlideClasses=function(a){var c,d,e,f,b=this;d=b.$slider.find(".slick-slide").removeClass("slick-active slick-center slick-current").attr("aria-hidden","true"),b.$slides.eq(a).addClass("slick-current"),b.options.centerMode===!0?(c=Math.floor(b.options.slidesToShow/2),b.options.infinite===!0&&(a>=c&&a<=b.slideCount-1-c?b.$slides.slice(a-c,a+c+1).addClass("slick-active").attr("aria-hidden","false"):(e=b.options.slidesToShow+a,
  d.slice(e-c+1,e+c+2).addClass("slick-active").attr("aria-hidden","false")),0===a?d.eq(d.length-1-b.options.slidesToShow).addClass("slick-center"):a===b.slideCount-1&&d.eq(b.options.slidesToShow).addClass("slick-center")),b.$slides.eq(a).addClass("slick-center")):a>=0&&a<=b.slideCount-b.options.slidesToShow?b.$slides.slice(a,a+b.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false"):d.length<=b.options.slidesToShow?d.addClass("slick-active").attr("aria-hidden","false"):(f=b.slideCount%b.options.slidesToShow,e=b.options.infinite===!0?b.options.slidesToShow+a:a,b.options.slidesToShow==b.options.slidesToScroll&&b.slideCount-a<b.options.slidesToShow?d.slice(e-(b.options.slidesToShow-f),e+f).addClass("slick-active").attr("aria-hidden","false"):d.slice(e,e+b.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false")),"ondemand"===b.options.lazyLoad&&b.lazyLoad()},b.prototype.setupInfinite=function(){var c,d,e,b=this;if(b.options.fade===!0&&(b.options.centerMode=!1),b.options.infinite===!0&&b.options.fade===!1&&(d=null,b.slideCount>b.options.slidesToShow)){for(e=b.options.centerMode===!0?b.options.slidesToShow+1:b.options.slidesToShow,c=b.slideCount;c>b.slideCount-e;c-=1)d=c-1,a(b.$slides[d]).clone(!0).attr("id","").attr("data-slick-index",d-b.slideCount).prependTo(b.$slideTrack).addClass("slick-cloned");for(c=0;e>c;c+=1)d=c,a(b.$slides[d]).clone(!0).attr("id","").attr("data-slick-index",d+b.slideCount).appendTo(b.$slideTrack).addClass("slick-cloned");b.$slideTrack.find(".slick-cloned").find("[id]").each(function(){a(this).attr("id","")})}},b.prototype.interrupt=function(a){var b=this;a||b.autoPlay(),b.interrupted=a},b.prototype.selectHandler=function(b){var c=this,d=a(b.target).is(".slick-slide")?a(b.target):a(b.target).parents(".slick-slide"),e=parseInt(d.attr("data-slick-index"));return e||(e=0),c.slideCount<=c.options.slidesToShow?(c.setSlideClasses(e),void c.asNavFor(e)):void c.slideHandler(e)},b.prototype.slideHandler=function(a,b,c){var d,e,f,g,j,h=null,i=this;return b=b||!1,i.animating===!0&&i.options.waitForAnimate===!0||i.options.fade===!0&&i.currentSlide===a||i.slideCount<=i.options.slidesToShow?void 0:(b===!1&&i.asNavFor(a),d=a,h=i.getLeft(d),g=i.getLeft(i.currentSlide),i.currentLeft=null===i.swipeLeft?g:i.swipeLeft,i.options.infinite===!1&&i.options.centerMode===!1&&(0>a||a>i.getDotCount()*i.options.slidesToScroll)?void(i.options.fade===!1&&(d=i.currentSlide,c!==!0?i.animateSlide(g,function(){i.postSlide(d)}):i.postSlide(d))):i.options.infinite===!1&&i.options.centerMode===!0&&(0>a||a>i.slideCount-i.options.slidesToScroll)?void(i.options.fade===!1&&(d=i.currentSlide,c!==!0?i.animateSlide(g,function(){i.postSlide(d)}):i.postSlide(d))):(i.options.autoplay&&clearInterval(i.autoPlayTimer),e=0>d?i.slideCount%i.options.slidesToScroll!==0?i.slideCount-i.slideCount%i.options.slidesToScroll:i.slideCount+d:d>=i.slideCount?i.slideCount%i.options.slidesToScroll!==0?0:d-i.slideCount:d,i.animating=!0,i.$slider.trigger("beforeChange",[i,i.currentSlide,e]),f=i.currentSlide,i.currentSlide=e,i.setSlideClasses(i.currentSlide),i.options.asNavFor&&(j=i.getNavTarget(),j=j.slick("getSlick"),j.slideCount<=j.options.slidesToShow&&j.setSlideClasses(i.currentSlide)),i.updateDots(),i.updateArrows(),i.options.fade===!0?(c!==!0?(i.fadeSlideOut(f),i.fadeSlide(e,function(){i.postSlide(e)})):i.postSlide(e),void i.animateHeight()):void(c!==!0?i.animateSlide(h,function(){i.postSlide(e)}):i.postSlide(e))))},b.prototype.startLoad=function(){var a=this;a.options.arrows===!0&&a.slideCount>a.options.slidesToShow&&(a.$prevArrow.hide(),a.$nextArrow.hide()),a.options.dots===!0&&a.slideCount>a.options.slidesToShow&&a.$dots.hide(),a.$slider.addClass("slick-loading")},b.prototype.swipeDirection=function(){var a,b,c,d,e=this;return a=e.touchObject.startX-e.touchObject.curX,b=e.touchObject.startY-e.touchObject.curY,c=Math.atan2(b,a),d=Math.round(180*c/Math.PI),0>d&&(d=360-Math.abs(d)),45>=d&&d>=0?e.options.rtl===!1?"left":"right":360>=d&&d>=315?e.options.rtl===!1?"left":"right":d>=135&&225>=d?e.options.rtl===!1?"right":"left":e.options.verticalSwiping===!0?d>=35&&135>=d?"down":"up":"vertical"},b.prototype.swipeEnd=function(a){var c,d,b=this;if(b.dragging=!1,b.interrupted=!1,b.shouldClick=b.touchObject.swipeLength>10?!1:!0,void 0===b.touchObject.curX)return!1;if(b.touchObject.edgeHit===!0&&b.$slider.trigger("edge",[b,b.swipeDirection()]),b.touchObject.swipeLength>=b.touchObject.minSwipe){switch(d=b.swipeDirection()){case"left":case"down":c=b.options.swipeToSlide?b.checkNavigable(b.currentSlide+b.getSlideCount()):b.currentSlide+b.getSlideCount(),b.currentDirection=0;break;case"right":case"up":c=b.options.swipeToSlide?b.checkNavigable(b.currentSlide-b.getSlideCount()):b.currentSlide-b.getSlideCount(),b.currentDirection=1}"vertical"!=d&&(b.slideHandler(c),b.touchObject={},b.$slider.trigger("swipe",[b,d]))}else b.touchObject.startX!==b.touchObject.curX&&(b.slideHandler(b.currentSlide),b.touchObject={})},b.prototype.swipeHandler=function(a){var b=this;if(!(b.options.swipe===!1||"ontouchend"in document&&b.options.swipe===!1||b.options.draggable===!1&&-1!==a.type.indexOf("mouse")))switch(b.touchObject.fingerCount=a.originalEvent&&void 0!==a.originalEvent.touches?a.originalEvent.touches.length:1,b.touchObject.minSwipe=b.listWidth/b.options.touchThreshold,b.options.verticalSwiping===!0&&(b.touchObject.minSwipe=b.listHeight/b.options.touchThreshold),a.data.action){case"start":b.swipeStart(a);break;case"move":b.swipeMove(a);break;case"end":b.swipeEnd(a)}},b.prototype.swipeMove=function(a){var d,e,f,g,h,b=this;return h=void 0!==a.originalEvent?a.originalEvent.touches:null,!b.dragging||h&&1!==h.length?!1:(d=b.getLeft(b.currentSlide),b.touchObject.curX=void 0!==h?h[0].pageX:a.clientX,b.touchObject.curY=void 0!==h?h[0].pageY:a.clientY,b.touchObject.swipeLength=Math.round(Math.sqrt(Math.pow(b.touchObject.curX-b.touchObject.startX,2))),b.options.verticalSwiping===!0&&(b.touchObject.swipeLength=Math.round(Math.sqrt(Math.pow(b.touchObject.curY-b.touchObject.startY,2)))),e=b.swipeDirection(),"vertical"!==e?(void 0!==a.originalEvent&&b.touchObject.swipeLength>4&&a.preventDefault(),g=(b.options.rtl===!1?1:-1)*(b.touchObject.curX>b.touchObject.startX?1:-1),b.options.verticalSwiping===!0&&(g=b.touchObject.curY>b.touchObject.startY?1:-1),f=b.touchObject.swipeLength,b.touchObject.edgeHit=!1,b.options.infinite===!1&&(0===b.currentSlide&&"right"===e||b.currentSlide>=b.getDotCount()&&"left"===e)&&(f=b.touchObject.swipeLength*b.options.edgeFriction,b.touchObject.edgeHit=!0),b.options.vertical===!1?b.swipeLeft=d+f*g:b.swipeLeft=d+f*(b.$list.height()/b.listWidth)*g,b.options.verticalSwiping===!0&&(b.swipeLeft=d+f*g),b.options.fade===!0||b.options.touchMove===!1?!1:b.animating===!0?(b.swipeLeft=null,!1):void b.setCSS(b.swipeLeft)):void 0)},b.prototype.swipeStart=function(a){var c,b=this;return b.interrupted=!0,1!==b.touchObject.fingerCount||b.slideCount<=b.options.slidesToShow?(b.touchObject={},!1):(void 0!==a.originalEvent&&void 0!==a.originalEvent.touches&&(c=a.originalEvent.touches[0]),b.touchObject.startX=b.touchObject.curX=void 0!==c?c.pageX:a.clientX,b.touchObject.startY=b.touchObject.curY=void 0!==c?c.pageY:a.clientY,void(b.dragging=!0))},b.prototype.unfilterSlides=b.prototype.slickUnfilter=function(){var a=this;null!==a.$slidesCache&&(a.unload(),a.$slideTrack.children(this.options.slide).detach(),a.$slidesCache.appendTo(a.$slideTrack),a.reinit())},b.prototype.unload=function(){var b=this;a(".slick-cloned",b.$slider).remove(),b.$dots&&b.$dots.remove(),b.$prevArrow&&b.htmlExpr.test(b.options.prevArrow)&&b.$prevArrow.remove(),b.$nextArrow&&b.htmlExpr.test(b.options.nextArrow)&&b.$nextArrow.remove(),b.$slides.removeClass("slick-slide slick-active slick-visible slick-current").attr("aria-hidden","true").css("width","")},b.prototype.unslick=function(a){var b=this;b.$slider.trigger("unslick",[b,a]),b.destroy()},b.prototype.updateArrows=function(){var b,a=this;b=Math.floor(a.options.slidesToShow/2),a.options.arrows===!0&&a.slideCount>a.options.slidesToShow&&!a.options.infinite&&(a.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false"),a.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false"),0===a.currentSlide?(a.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true"),a.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false")):a.currentSlide>=a.slideCount-a.options.slidesToShow&&a.options.centerMode===!1?(a.$nextArrow.addClass("slick-disabled").attr("aria-disabled","true"),a.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false")):a.currentSlide>=a.slideCount-1&&a.options.centerMode===!0&&(a.$nextArrow.addClass("slick-disabled").attr("aria-disabled","true"),a.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false")))},b.prototype.updateDots=function(){var a=this;null!==a.$dots&&(a.$dots.find("li").removeClass("slick-active").attr("aria-hidden","true"),a.$dots.find("li").eq(Math.floor(a.currentSlide/a.options.slidesToScroll)).addClass("slick-active").attr("aria-hidden","false"))},b.prototype.visibility=function(){var a=this;a.options.autoplay&&(document[a.hidden]?a.interrupted=!0:a.interrupted=!1)},a.fn.slick=function(){var f,g,a=this,c=arguments[0],d=Array.prototype.slice.call(arguments,1),e=a.length;for(f=0;e>f;f++)if("object"==typeof c||"undefined"==typeof c?a[f].slick=new b(a[f],c):g=a[f].slick[c].apply(a[f].slick,d),"undefined"!=typeof g)return g;return a}});
/*********************************************************************
 *  #### Twitter Post Fetcher v15.0.1 ####
 *  Coded by Jason Mayes 2015. A present to all the developers out there.
 *  www.jasonmayes.com
 *  Please keep this disclaimer with my code if you use it. Thanks. :-)
 *  Got feedback or questions, ask here:
 *  http://www.jasonmayes.com/projects/twitterApi/
 *  Github: https://github.com/jasonmayes/Twitter-Post-Fetcher
 *  Updates will be posted to this site.
 *********************************************************************/
(function(C,p){"function"===typeof define&&define.amd?define([],p):"object"===typeof exports?module.exports=p():p()})(this,function(){function C(a){if(null===r){for(var g=a.length,c=0,k=document.getElementById(D),f="<ul>";c<g;)f+="<li>"+a[c]+"</li>",c++;k.innerHTML=f+"</ul>"}else r(a)}function p(a){return a.replace(/<b[^>]*>(.*?)<\/b>/gi,function(a,c){return c}).replace(/class="(?!(tco-hidden|tco-display|tco-ellipsis))+.*?"|data-query-source=".*?"|dir=".*?"|rel=".*?"/gi,"")}function E(a){a=a.getElementsByTagName("a");
  for(var g=a.length-1;0<=g;g--)a[g].setAttribute("target","_blank")}function l(a,g){for(var c=[],k=new RegExp("(^| )"+g+"( |$)"),f=a.getElementsByTagName("*"),h=0,b=f.length;h<b;h++)k.test(f[h].className)&&c.push(f[h]);return c}function F(a){if(void 0!==a&&0<=a.innerHTML.indexOf("data-srcset"))return a=a.innerHTML.match(/data-srcset="([A-z0-9%_\.-]+)/i)[0],decodeURIComponent(a).split('"')[1]}var D="",g=20,G=!0,v=[],x=!1,y=!0,w=!0,z=null,A=!0,B=!0,r=null,H=!0,I=!1,t=!0,J=!0,K=!1,m=null,L={fetch:function(a){void 0===
  a.maxTweets&&(a.maxTweets=20);void 0===a.enableLinks&&(a.enableLinks=!0);void 0===a.showUser&&(a.showUser=!0);void 0===a.showTime&&(a.showTime=!0);void 0===a.dateFunction&&(a.dateFunction="default");void 0===a.showRetweet&&(a.showRetweet=!0);void 0===a.customCallback&&(a.customCallback=null);void 0===a.showInteraction&&(a.showInteraction=!0);void 0===a.showImages&&(a.showImages=!1);void 0===a.linksInNewWindow&&(a.linksInNewWindow=!0);void 0===a.showPermalinks&&(a.showPermalinks=!0);void 0===a.dataOnly&&
  (a.dataOnly=!1);if(x)v.push(a);else{x=!0;D=a.domId;g=a.maxTweets;G=a.enableLinks;w=a.showUser;y=a.showTime;B=a.showRetweet;z=a.dateFunction;r=a.customCallback;H=a.showInteraction;I=a.showImages;t=a.linksInNewWindow;J=a.showPermalinks;K=a.dataOnly;var l=document.getElementsByTagName("head")[0];null!==m&&l.removeChild(m);m=document.createElement("script");m.type="text/javascript";m.src="https://cdn.syndication.twimg.com/widgets/timelines/"+a.id+"?&lang="+(a.lang||"en")+"&callback=twitterFetcher.callback&suppress_response_codes=true&rnd="+
    Math.random();l.appendChild(m)}},callback:function(a){function m(a){var b=a.getElementsByTagName("img")[0];b.src=b.getAttribute("data-src-2x");return a}var c=document.createElement("div");c.innerHTML=a.body;"undefined"===typeof c.getElementsByClassName&&(A=!1);a=[];var k=[],f=[],h=[],b=[],q=[],n=[],e=0;if(A)for(c=c.getElementsByClassName("timeline-Tweet");e<c.length;){0<c[e].getElementsByClassName("timeline-Tweet-retweetCredit").length?b.push(!0):b.push(!1);if(!b[e]||b[e]&&B)a.push(c[e].getElementsByClassName("timeline-Tweet-text")[0]),
    q.push(c[e].getAttribute("data-tweet-id")),k.push(m(c[e].getElementsByClassName("timeline-Tweet-author")[0])),f.push(c[e].getElementsByClassName("dt-updated")[0]),n.push(c[e].getElementsByClassName("timeline-Tweet-timestamp")[0]),void 0!==c[e].getElementsByClassName("timeline-Tweet-media")[0]?h.push(c[e].getElementsByClassName("timeline-Tweet-media")[0]):h.push(void 0);e++}else for(c=l(c,"timeline-Tweet");e<c.length;){0<l(c[e],"timeline-Tweet-retweetCredit").length?b.push(!0):b.push(!1);if(!b[e]||
    b[e]&&B)a.push(l(c[e],"timeline-Tweet-text")[0]),q.push(c[e].getAttribute("data-tweet-id")),k.push(m(l(c[e],"timeline-Tweet-author")[0])),f.push(l(c[e],"dt-updated")[0]),n.push(l(c[e],"timeline-Tweet-timestamp")[0]),void 0!==l(c[e],"timeline-Tweet-media")[0]?h.push(l(c[e],"timeline-Tweet-media")[0]):h.push(void 0);e++}a.length>g&&(a.splice(g,a.length-g),k.splice(g,k.length-g),f.splice(g,f.length-g),b.splice(g,b.length-g),h.splice(g,h.length-g),n.splice(g,n.length-g));var c=[],e=a.length,d=0;if(K)for(;d<
e;)c.push({tweet:a[d].innerHTML,author:k[d].innerHTML,time:f[d].textContent,image:F(h[d]),rt:b[d],tid:q[d],permalinkURL:void 0===n[d]?"":n[d].href}),d++;else for(;d<e;){if("string"!==typeof z){var b=f[d].getAttribute("datetime"),u=new Date(f[d].getAttribute("datetime").replace(/-/g,"/").replace("T"," ").split("+")[0]),b=z(u,b);f[d].setAttribute("aria-label",b);if(a[d].textContent)if(A)f[d].textContent=b;else{var u=document.createElement("p"),r=document.createTextNode(b);u.appendChild(r);u.setAttribute("aria-label",
    b);f[d]=u}else f[d].textContent=b}b="";G?(t&&(E(a[d]),w&&E(k[d])),w&&(b+='<div class="user">'+p(k[d].innerHTML)+"</div>"),b+='<p class="tweet">'+p(a[d].innerHTML)+"</p>",y&&(b=J?b+('<p class="timePosted"><a href="'+n[d]+'">'+f[d].getAttribute("aria-label")+"</a></p>"):b+('<p class="timePosted">'+f[d].getAttribute("aria-label")+"</p>"))):(w&&(b+='<p class="user">'+k[d].textContent+"</p>"),b+='<p class="tweet">'+a[d].textContent+"</p>",y&&(b+='<p class="timePosted">'+f[d].textContent+"</p>"));H&&(b+=
    '<p class="interact"><a href="https://twitter.com/intent/tweet?in_reply_to='+q[d]+'" class="twitter_reply_icon"'+(t?' target="_blank">':">")+'Reply</a><a href="https://twitter.com/intent/retweet?tweet_id='+q[d]+'" class="twitter_retweet_icon"'+(t?' target="_blank">':">")+'Retweet</a><a href="https://twitter.com/intent/favorite?tweet_id='+q[d]+'" class="twitter_fav_icon"'+(t?' target="_blank">':">")+"Favorite</a></p>");I&&void 0!==h[d]&&(b+='<div class="media"><img src="'+F(h[d])+'" alt="Image from tweet" /></div>');
    c.push(b);d++}C(c);x=!1;0<v.length&&(L.fetch(v[0]),v.splice(0,1))}};return window.twitterFetcher=L});
/*
 * VenoBox - jQuery Plugin
 * version: 1.6.0
 * @requires jQuery
 *
 * Examples at http://lab.veno.it/venobox/
 * License: MIT License
 * License URI: https://github.com/nicolafranchini/VenoBox/blob/master/LICENSE
 * Copyright 2013-2015 Nicola Franchini - @nicolafranchini
 *
 */
(function($){

  var autoplay, bgcolor, blocknum, blocktitle, border, core, container, content, dest,
    evitacontent, evitanext, evitaprev, extraCss, figliall, framewidth, frameheight,
    infinigall, items, keyNavigationDisabled, margine, numeratio, overlayColor, overlay,
    prima, title, thisgall, thenext, theprev, type,
    finH, sonH, nextok, prevok;

  $.fn.extend({
    //plugin name - venobox
    venobox: function(options) {

      // default option
      var defaults = {
        framewidth: '',
        frameheight: '',
        border: '0',
        bgcolor: '#fff',
        titleattr: 'title', // specific attribute to get a title (e.g. [data-title]) - thanx @mendezcode
        numeratio: false,
        infinigall: false,
        overlayclose: true // disable overlay click-close - thanx @martybalandis
      };

      var option = $.extend(defaults, options);

      return this.each(function() {
        var obj = $(this);

        // Prevent double initialization - thanx @matthistuff
        if(obj.data('venobox')) {
          return true;
        }

        obj.addClass('vbox-item');
        obj.data('framewidth', option.framewidth);
        obj.data('frameheight', option.frameheight);
        obj.data('border', option.border);
        obj.data('bgcolor', option.bgcolor);
        obj.data('numeratio', option.numeratio);
        obj.data('infinigall', option.infinigall);
        obj.data('overlayclose', option.overlayclose);
        obj.data('venobox', true);

        obj.click(function(e){
          e.stopPropagation();
          e.preventDefault();
          obj = $(this);
          overlayColor = obj.data('overlay');
          framewidth = obj.data('framewidth');
          frameheight = obj.data('frameheight');
          // set data-autoplay="true" for vimeo and youtube videos - thanx @zehfernandes
          autoplay = obj.data('autoplay') || false;
          border = obj.data('border');
          bgcolor = obj.data('bgcolor');
          nextok = false;
          prevok = false;
          keyNavigationDisabled = false;

          // set a different url to be loaded via ajax using data-href="" - thanx @pixeline
          dest = obj.data('href') || obj.attr('href');
          extraCss = obj.data( 'css' ) || "";

          $('body').addClass('vbox-open');
          core = '<div class="vbox-overlay ' + extraCss + '" style="background:'+ overlayColor +'"><div class="vbox-preloader">Loading...</div><div class="vbox-container"><div class="vbox-content"></div></div><div class="vbox-title"></div><div class="vbox-num">0/0</div><div class="vbox-close">X</div><div class="vbox-next"></div><div class="vbox-prev"></div></div>';

          $('body').append(core);

          overlay = $('.vbox-overlay');
          container = $('.vbox-container');
          content = $('.vbox-content');
          blocknum = $('.vbox-num');
          blocktitle = $('.vbox-title');

          content.html('');
          content.css('opacity', '0');

          checknav();

          overlay.css('min-height', $(window).outerHeight());

          // fade in overlay
          overlay.animate({opacity:1}, 250, function(){

            if(obj.data('type') == 'iframe'){
              loadIframe();
            }else if (obj.data('type') == 'inline'){
              loadInline();
            }else if (obj.data('type') == 'ajax'){
              loadAjax();
            }else if (obj.data('type') == 'vimeo'){
              loadVimeo(autoplay);
            }else if (obj.data('type') == 'youtube'){
              loadYoutube(autoplay);
            } else {
              content.html('<img src="'+dest+'">');
              preloadFirst();
            }
          });

          /* -------- CHECK NEXT / PREV -------- */
          function checknav(){

            thisgall = obj.data('gall');
            numeratio = obj.data('numeratio');
            infinigall = obj.data('infinigall');

            items = $('.vbox-item[data-gall="' + thisgall + '"]');

            if(items.length > 1 && numeratio === true){
              blocknum.html(items.index(obj)+1 + ' / ' + items.length);
              blocknum.show();
            }else{
              blocknum.hide();
            }

            thenext = items.eq( items.index(obj) + 1 );
            theprev = items.eq( items.index(obj) - 1 );

            if(obj.attr(option.titleattr)){
              title = obj.attr(option.titleattr);
              blocktitle.show();
            }else{
              title = '';
              blocktitle.hide();
            }

            if (items.length > 1 && infinigall === true) {

              nextok = true;
              prevok = true;

              if(thenext.length < 1 ){
                thenext = items.eq(0);
              }
              if(items.index(obj) < 1 ){
                theprev = items.eq( items.index(items.length) );
              }

            } else {

              if(thenext.length > 0 ){
                $('.vbox-next').css('display', 'block');
                nextok = true;
              }else{
                $('.vbox-next').css('display', 'none');
                nextok = false;
              }
              if(items.index(obj) > 0 ){
                $('.vbox-prev').css('display', 'block');
                prevok = true;
              }else{
                $('.vbox-prev').css('display', 'none');
                prevok = false;
              }
            }
          }

          /* -------- NAVIGATION CODE -------- */
          var gallnav = {

            prev: function() {

              if (keyNavigationDisabled) {
                return;
              } else {
                keyNavigationDisabled = true;
              }

              overlayColor = theprev.data('overlay');

              framewidth = theprev.data('framewidth');
              frameheight = theprev.data('frameheight');
              border = theprev.data('border');
              bgcolor = theprev.data('bgcolor');
              dest = theprev.data('href') || theprev.attr('href');

              autoplay = theprev.data('autoplay');

              if(theprev.attr(option.titleattr)){
                title = theprev.attr(option.titleattr);
              }else{
                title = '';
              }

              if (overlayColor === undefined ) {
                overlayColor = "";
              }

              content.animate({ opacity:0}, 500, function(){

                overlay.css('background',overlayColor);

                if (theprev.data('type') == 'iframe') {
                  loadIframe();
                } else if (theprev.data('type') == 'inline'){
                  loadInline();
                } else if (theprev.data('type') == 'ajax'){
                  loadAjax();
                } else if (theprev.data('type') == 'youtube'){
                  loadYoutube(autoplay);
                } else if (theprev.data('type') == 'vimeo'){
                  loadVimeo(autoplay);
                }else{
                  content.html('<img src="'+dest+'">');
                  preloadFirst();
                }
                obj = theprev;
                checknav();
                keyNavigationDisabled = false;
              });

            },

            next: function() {

              if (keyNavigationDisabled) {
                return;
              } else {
                keyNavigationDisabled = true;
              }

              overlayColor = thenext.data('overlay');

              framewidth = thenext.data('framewidth');
              frameheight = thenext.data('frameheight');
              border = thenext.data('border');
              bgcolor = thenext.data('bgcolor');
              dest = thenext.data('href') || thenext.attr('href');
              autoplay = thenext.data('autoplay');

              if(thenext.attr(option.titleattr)){
                title = thenext.attr(option.titleattr);
              }else{
                title = '';
              }

              if (overlayColor === undefined ) {
                overlayColor = "";
              }

              content.animate({ opacity:0}, 500, function(){

                overlay.css('background',overlayColor);

                if (thenext.data('type') == 'iframe') {
                  loadIframe();
                } else if (thenext.data('type') == 'inline'){
                  loadInline();
                } else if (thenext.data('type') == 'ajax'){
                  loadAjax();
                } else if (thenext.data('type') == 'youtube'){
                  loadYoutube(autoplay);
                } else if (thenext.data('type') == 'vimeo'){
                  loadVimeo(autoplay);
                }else{
                  content.html('<img src="'+dest+'">');
                  preloadFirst();
                }
                obj = thenext;
                checknav();
                keyNavigationDisabled = false;
              });

            }

          };

          /* -------- NAVIGATE WITH ARROW KEYS -------- */
          $('body').keydown(function(e) {

            if(e.keyCode == 37 && prevok == true) { // left
              gallnav.prev();
            }

            if(e.keyCode == 39 && nextok == true) { // right
              gallnav.next();
            }

          });

          /* -------- PREVGALL -------- */
          $('.vbox-prev').click(function(){
            gallnav.prev();
          });

          /* -------- NEXTGALL -------- */
          $('.vbox-next').click(function(){
            gallnav.next();
          });

          /* -------- ESCAPE HANDLER -------- */
          function escapeHandler(e) {
            if(e.keyCode === 27) {
              closeVbox();
            }
          }

          /* -------- CLOSE VBOX -------- */

          function closeVbox(){

            $('body').removeClass('vbox-open');
            $('body').unbind('keydown', escapeHandler);

            overlay.animate({opacity:0}, 500, function(){
              overlay.remove();
              keyNavigationDisabled = false;
              obj.focus();
            });
          }

          /* -------- CLOSE CLICK -------- */
          var closeclickclass = '.vbox-close, .vbox-overlay';
          if(!obj.data('overlayclose')){
            closeclickclass = '.vbox-close';    // close only on X
          }

          $(closeclickclass).click(function(e){
            evitacontent = '.figlio';
            evitaprev = '.vbox-prev';
            evitanext = '.vbox-next';
            figliall = '.figlio *';
            if(!$(e.target).is(evitacontent) && !$(e.target).is(evitanext) && !$(e.target).is(evitaprev)&& !$(e.target).is(figliall)){
              closeVbox();
            }
          });
          $('body').keydown(escapeHandler);
          return false;
        });
      });
    }
  });

  /* -------- LOAD AJAX -------- */
  function loadAjax(){
    $.ajax({
      url: dest,
      cache: false
    }).done(function( msg ) {
      content.html('<div class="vbox-inline">'+ msg +'</div>');
      updateoverlay(true);

    }).fail(function() {
      content.html('<div class="vbox-inline"><p>Error retrieving contents, please retry</div>');
      updateoverlay(true);
    })
  }

  /* -------- LOAD IFRAME -------- */
  function loadIframe(){
    content.html('<iframe class="venoframe" src="'+dest+'"></iframe>');
    //  $('.venoframe').load(function(){ // valid only for iFrames in same domain
    updateoverlay();
    //  });
  }

  /* -------- LOAD VIMEO -------- */
  function loadVimeo(autoplay){
    dest = String(dest);
    var pezzi = dest.split('/');
    var videoid = pezzi[pezzi.length-1];
    var stringAutoplay = autoplay ? "?autoplay=1" : "";
    content.html('<iframe class="venoframe" webkitallowfullscreen mozallowfullscreen allowfullscreen frameborder="0" src="//player.vimeo.com/video/'+videoid+stringAutoplay+'"></iframe>');
    updateoverlay();
  }

  /* -------- LOAD YOUTUBE -------- */
  function loadYoutube(autoplay){
    dest = String(dest);
    var pezzi = dest.split('/');
    var videoid = pezzi[pezzi.length-1];
    var stringAutoplay = autoplay ? "?autoplay=1" : "";
    content.html('<iframe class="venoframe" webkitallowfullscreen mozallowfullscreen allowfullscreen src="//www.youtube.com/embed/'+videoid+stringAutoplay+'"></iframe>');
    updateoverlay();
  }

  /* -------- LOAD INLINE -------- */
  function loadInline(){
    content.html('<div class="vbox-inline">'+$(dest).html()+'</div>');
    updateoverlay();
  }

  /* -------- PRELOAD IMAGE -------- */
  function preloadFirst(){
    prima = $('.vbox-content').find('img');
    prima.one('load', function() {
      updateoverlay();
    }).each(function() {
      if(this.complete) $(this).load();
    });
  }

  /* -------- CENTER ON LOAD -------- */
  function updateoverlay(){

    blocktitle.html(title);
    content.find(">:first-child").addClass('figlio');
    $('.figlio').css('width', framewidth).css('height', frameheight).css('padding', border).css('background', bgcolor);

    sonH = content.outerHeight();
    finH = $(window).height();

    if(sonH+80 < finH){
      margine = (finH - sonH)/2;
      content.css('margin-top', margine);
      content.css('margin-bottom', margine);

    }else{
      content.css('margin-top', '40px');
      content.css('margin-bottom', '40px');
    }
    content.animate({
      'opacity': '1'
    },'slow');
  }

  /* -------- CENTER ON RESIZE -------- */
  function updateoverlayresize(){
    if($('.vbox-content').length){
      sonH = content.height();
      finH = $(window).height();

      if(sonH+80 < finH){
        margine = (finH - sonH)/2;
        content.css('margin-top', margine);
        content.css('margin-bottom', margine);
      }else{
        content.css('margin-top', '40px');
        content.css('margin-bottom', '40px');
      }
    }
  }

  $(window).resize(function(){
    updateoverlayresize();
  });

})(jQuery);

var helper = {

  breakpoints: function (viewport) {
    var bp = {
      desktop: 960,
      tablet: 600,
      mobileNav: 480,
    };

    return (window.innerWidth > bp[viewport]);
  }
};

var interviewPrep = {

  init: function() {
    $('.challenge .box--grey').addClass('box');
    $('.challenge .box').matchHeight();
  }

};

var asides = {

  init: function () {

    $('.asides .four--columns').first().addClass('asides__element--no-border');

    matchElementsHeights();

    function matchElementsHeights () {
      $('.asides__title').matchHeight();
      $('.asides__copy').matchHeight();
    }

    applyWidget();

    function applyWidget () {

      var $el = $('.apply-slider');

      $('.main-content').attr('id', 'js-main-content');

      var waypoint = new Waypoint({

        element: document.getElementById('js-main-content'),

        handler: function (direction) {
          if( direction === "down" ){
            $el.addClass("is-sticky");
          } else{
            $el.removeClass("is-sticky");
          }

        },

      });

      if ($el.length > 0) {
        $el.flexVerticalCenter({
          cssAttribute: 'top',
          verticalOffset: '30px'
        });
      }

      $el.on('mouseenter', function () {
        if ($(this).css('right') === '-80px') {
          $(this).animate({'right': '0'}, 400);
        }
      });

      $el.on('mouseleave', function () {
        $(this).animate({'right': '-80px'}, 400);
      });

    }
  }

};

var scrollUp = {

  init: function () {

    $.scrollUp({
      scrollName: 'scrollUp',
      topDistance: '300',
      topSpeed: 300,
      animation: 'fade',
      animationInSpeed: 200,
      animationOutSpeed: 200,
      scrollText: '',
      activeOverlay: false,
    });

  }

};

var mainHero = {

  init: function () {

    matchHeight();
    $(window).resize(matchHeight);

    function matchHeight () {
      if(window.innerWidth > 768 ){
        $('.hero--main__aside').matchHeight();
      } else {
        $('.hero--main__aside').css('height', 'auto');
      }
    }

    responsiveHero();

    function responsiveHero () {

      //$('.hero--main__aside').matchHeight();

      $.fn.matchHeight._afterUpdate = function(event, groups) {
        $('.hero--main__asides-group').css('opacity', '1');
      };

      var mobileHeroAsides = $('.hero--main__asides-group').clone();

      mobileHeroAsides.addClass('hero--main__asides-group--mobile');

      mobileHeroAsides.insertAfter('.hero--main');

    }

    responsiveHeroImpact();

    function responsiveHeroImpact () {

      $.fn.matchHeight._afterUpdate = function(event, groups) {
        $('.hero--main__asides-group').css('opacity', '1');
      };

      var mobileHeroAsides = $('.hero--main__asides-group').clone();

      mobileHeroAsides.addClass('hero--main__asides-group--mobile');

      mobileHeroAsides.insertAfter('.hero--main--our-impact');

    }

    textLimit();

    function textLimit () {

      $(".hero--main__aside p").each(function(i){

        var len = $(this).text().length;

        if(len > 100) {
          $(this).text($(this).text().substr(0,100) + '...');
        }

      });

    }

  }

};

var hero = {

  init: function () {

    imgLiquid();
    $(window).resize(imgLiquid, adjustHeight);

    adjustHeight();

    function adjustHeight () {
      var hero = $('#js-hero').height(),
        heroContent = $('#js-hero__content').height(),
        heroContentAdjustment = heroContent + 160;

      if ( hero < heroContent) {
        $('#js-hero').css('height', heroContentAdjustment);
      }
    }

    function imgLiquid () {

      $('.hero__liquid').imgLiquid({
        onFinish: function(){
          $('.hero__liquid').css('opacity', '1');
        },
      });

      var resizeHandler = function(){
        $('.hero__liquid').imgLiquid();
      };

    }

    $('#js-hero__content').flexVerticalCenter({
      cssAttribute: 'top',
      complete: function() {
        $('#js-hero__content').animate({
          opacity: 1
        }, 400);
      }
    });

    $('#js-hero--main__content').flexVerticalCenter({
      cssAttribute: 'top',
      verticalOffset: -110,
      complete: function() {
        $('#js-hero__content').animate({
          opacity: 1
        }, 400);
      }
    });


  }
};

var standoutHeightAdjustment = {

  init: function () {

    $(window).on('resize', function () {
      tweakHeight();
    });

    function tweakHeight () {

      $('.page__section--bg-image').each(function(){

        var standoutSection = $(this).height(),
          standoutSectionContent = $(this).children('.page__section--bg-image__inner').height(),
          standoutSectionContentAdjustment = standoutSectionContent + 120;

        if(window.innerWidth > 768 ){

          if ( standoutSection < standoutSectionContent ) {
            $(this).css('height', standoutSectionContentAdjustment);
          }

        } else {
          $(this).css('height', 'auto');
          $('.page__section--bg-image__inner').css('position', 'static');
        }

      });

    }

    $(document).on('ready', function () {
      mouseTimeout = setTimeout( function() {
        tweakHeight();
        $('.page__section--bg-image').animate({
          opacity: 1
        }, 300);
      }, 50);
    });

  }

};

var heroTiled = {

  init: function () {

    tileDefaultImage();

    function tileDefaultImage () {

      if(window.innerWidth < 1026){

        $('.js-hero--tiled__tile--no-image img').attr('src','/img/backgrounds/media-center-default.jpg');

      } else {
        $('.js-hero--tiled__tile--no-image img').attr('src','/img/backgrounds/media-center-default-logo.jpg');
      }

    }

    $(window).resize(tileDefaultImage);

    function imgLiquid () {

      // setTimeout( function() {

      var imageHeight = $('.hero--tiled__tile--large img').height();
      var $el = $('.hero--tiled__tile--large');

      if(window.innerWidth > 768 ){

        $el.css('height', imageHeight );

        $('.three--columns--tablet--six--columns, .six--columns--tablet--one--column').css({
          "height": imageHeight,
          "overflow": "hidden"
        });

      } else {

        $el.css('height', imageHeight );
        $('.three--columns--tablet--six--columns, .six--columns--tablet--one--column').css('height', 'auto' );
        $('.hero--tiled').css('opacity', '1');

      }


    }

    $('.hero--tiled').animate({
      opacity: 1
    }, 250 );

    $(window).load(function(){
      imgLiquid();
    });
    $(window).resize(imgLiquid);

  }
};

var heroCarousel = {

  init: function () {

    var heroSlider = $('.hero--home .bx-slider').bxSlider({
      pager: true,
      easing: 'linear',
      controls: false,
      pagerSelector: '.hero--home__pager',
      auto: true,
      speed:300,
      autoControls: false,
      onSliderLoad: function(){
        $('.hero--home__carousel').css('visibility', 'visible');
      },
      onSlideAfter: function() {
        heroSlider.stopAuto();
        heroSlider.startAuto();
      }

    });

  }
};

var heroCarouselSlick = {

  init: function () {

    $('.hero--home__carousel--slick').slick({
      dots: true,
      arrows: false
    });

  }

};

var stickyHeader = {
  init: function () {

    var stickyHeader = $(".js-site-header .site-header__bottom");

    if(document.getElementById('js-hero')){
      var waypoint = new Waypoint({
        element: document.getElementById('js-hero'),
        handler: function (direction) {
          if( direction === "down" ){
            if($('.site__search').length > 0) {
              $(stickyHeader, '.site__search').addClass("is-sticky");
              $('.site__search').addClass("is-sticky");
            } else {
              $(stickyHeader, '.search-box').addClass("is-sticky");
              $('.search-box').addClass("is-sticky");
            }
          } else {
            if($('.site__search').length > 0) {
              $(stickyHeader, '.site__search').removeClass("is-sticky");
              $('.site__search').removeClass("is-sticky");
            } else {
              $(stickyHeader, '.search-box').removeClass("is-sticky");
              $('.search-box').removeClass("is-sticky");
            }
          }

        },
        offset: -20
      });
    }
  }
};

var searchBox = {

  init: function() {
    $('.main-nav:not(.no-srch) > ul')
      .append('<li class="site-nav__list__item">\
						<span href="" class="site-search-toggle">\
							<span class="icon--search"></span>\
						</span>');


    $('.search-box__inner input').matchHeight();

    $('.site-search-toggle').on('click', function() {

      var $searchBox = $('.search-box');

      if ($('.main-nav__dropdown-1').hasClass('is-on') ) {
        $('.main-nav__dropdown-1').removeClass('is-on');
      }

      if ( $searchBox.hasClass('is-on') ) {
        $searchBox.removeClass('is-on');
        $('.icon--search').removeClass('is-on');
        $('.main-nav').removeClass('is-disabled');
        $('.nav__disabler').remove();

      } else {
        $('.icon--search').addClass('is-on');
        $searchBox.addClass('is-on');
        $('.main-nav').addClass('is-disabled');
        $('.main-nav').append('<div class="nav__disabler"></div>');
        $('.site-header__alternative-navigation ul').prepend('<div class="nav__disabler"></div>');
      }

    });

    $('.site-header__top, #js-hero, .main-content').on('click', function () {

      if ($('.search-box').hasClass('is-on')) {
        $('.search-box').removeClass('is-on');
        $('.nav__disabler').remove();
        $('.main-nav').removeClass('is-disabled');
        $('.icon--search').removeClass('is-on');
      }

    });


  }

};

var siteNav = {

  init: function () {

    megamenu();

    function megamenu () {

      var mouseTimeout;
      var navbarBlackBreadCrumbs = $("#black-breadcrumbs");


      $('.main-nav__dropdown-1 , .main-nav__dropdown-2').siblings('a').on('mouseenter', function () {

        $(this).parent().siblings().find('.is-on').removeClass('is-on');


        $(this).addClass("is-on")
          .siblings('.main-nav__dropdown-1, .main-nav__dropdown-2')
          .addClass('is-on');

        /* BreadCRumbs Industry Caps */
        if (navbarBlackBreadCrumbs.length ) {
          navbarBlackBreadCrumbs.removeAttr("style");
          var ddnav = $(this).parent().find('div.is-on' ).first();
          var mainnav = $(".main-nav");
            if (ddnav.height()) {
              if (ddnav.attr('class').indexOf("main-nav__dropdown-2") > 0){
                var ddnav2 = $(".main-nav__child.main-nav__dropdown-1.is-on");
                navbarBlackBreadCrumbs.attr("style", "top:"+ parseFloat(ddnav2.height() + ddnav.height() + mainnav.height() + 12)  + "px");
              }else{
                navbarBlackBreadCrumbs.addClass("nav1-on");
              }
            }
            if (!ddnav.height() ) {
              if (ddnav.attr('class').indexOf("main-nav__dropdown-2") > 0) {
                navbarBlackBreadCrumbs.removeAttr("style");
              }else{
                navbarBlackBreadCrumbs.removeClass("nav1-on");
              }
            }
          }
        /* BreadCRumbs Industry Caps */

        clearTimeout(mouseTimeout);

      });

      $('.main-nav__dropdown-1 , .main-nav__dropdown-2').on('mouseleave', function () {

        var that = this;
        var mouseOutTime = navbarBlackBreadCrumbs.length ? 2000 : 500;

        mouseTimeout = setTimeout( function() {

          $(that).removeClass('is-on').siblings('a').removeClass('is-on');
          if (navbarBlackBreadCrumbs.length ) {
              navbarBlackBreadCrumbs.removeClass("nav1-on");
              navbarBlackBreadCrumbs.removeAttr("style");
          }
          $('.main-nav__dropdown-1 > .site-nav__list > .site-nav__list__item.is-selected > a')
            .addClass('is-on');

        }, mouseOutTime );

      });


    }

    mobileNavigation();

    function mobileNavigation() {

      var mobileNav = $('.main-nav').clone().addClass('main-nav--mobile');

      var mobileAlternativeNav = $('.site-header__alternative-navigation')
        .clone().addClass('site-header__alternative-navigation--mobile');

      var mobileSearch;

      if($('.site__search').length > 0) {
        mobileSearch = $('.site__search').clone().addClass('site__search--mobile');
      } else {
        mobileSearch = $('.search-box').clone().addClass('search-box--mobile');
      }

      mobileNav.append(mobileAlternativeNav);

      if($('.site__search').length > 0) {
        mobileSearch = $('.site__search').clone().removeClass('site__search').addClass('site__search--mobile');
      } else {
        mobileSearch = $('.search-box').clone().removeClass('search-box').addClass('search-box--mobile');
      }

      mobileNav.append(mobileSearch);

      $('.site-header__bottom').append(mobileNav);

      var mobileToggle = $('.site-header__mobile-toggle');
      if(mobileToggle.length < 1) {
        mobileToggle = $('.mmc-site-header__mobile-toggle')
      }

      mobileToggle.on('click', function (e) {

        var speed = 200;

        if (mobileToggle.hasClass('is-on')) {

          $(this).removeClass('is-on');

          mobileNav.fadeOut(speed);

          if (mobileToggle.hasClass('mmc-homepage-toggle')) {
            $(this).animate({
              backgroundColor: '#04193C',
              color: '#ffffff'
            }, 150);
          } else {
            $(this).animate({
              backgroundColor: '#fff',
              color: '#000'
            }, 150);
          }

        } else {
          $(this).addClass('is-on');
          $(this).animate({
            backgroundColor: '#00a8c8',
            color: '#fff'
          }, 150);
          mobileNav.fadeIn(speed);

        }

        e.preventDefault();

      });

    }

    mobileNested();

    function mobileNested(){

      var $this = $(this),
        $mainNav = $('.main-nav'),
        speed = 200;

      $('.js-has-children').prepend('<span class="mobile-nav-toggle">+</span>');

      $('.mobile-nav-toggle').on('click', function(e) {

        e.preventDefault();

        var subNav = $(this).parent().parent().find('.main-nav__child').first();

        if (subNav.css('display') == 'block') {
          subNav.fadeOut(speed);
        } else if (subNav.css('display') == 'none'){
          subNav.fadeIn(speed);
        }

        var icon = $(this);

        if (icon.html() === '+') {
          icon.html('-');
          icon.addClass('minus');
        } else {
          icon.html('+');
          icon.removeClass('minus');
        }

      });

    }

  }

};

var tabs = {
  init: function () {

    $('.js-tabs .tabs__content').first().addClass('is-on');

    $(".js-tabs__nav").on('click', "a", function (e) {

      e.preventDefault();

      var $navItems = $(this).parents('.js-tabs').find('.js-tabs__nav a'),
        $triangle = $(this).parents('.js-tabs').find('.tabs__triangle'),
        $contentItems = $(this).parents('.js-tabs').find('.js-tabs__content'),
        index = $navItems.index(this);

      $navItems.removeClass('is-on').eq(index).addClass('is-on');
      $triangle.removeClass('is-on').eq(index).addClass('is-on');
      $contentItems.removeClass('is-on').eq(index).addClass('is-on');

    });

  }
};

var tilesHomepage = {

  init: function () {

    var tile = $('.tile--homepage'),
      tileHeader = $('.tile--homepage__header'),
      tileContent = $('.tile--homepage__content'),
      tileCTA = $('.tile--homepage__cta');

    cloneTileHeaders();

    function cloneTileHeaders(){
      tile.each(function(){
        var clonedHeader = $(this).find(tileHeader).clone().addClass('cloned');
        clonedHeader.prependTo($(this));
      });
    }

    /*if ($('.tile--homepage.js-image-liquid').length > 1) {
			$('.tile--homepage.js-image-liquid').imgLiquid();
		}

		tileImages();

		$(window).on('resize', function () {
			tileImages();
		});

		function tileImages () {
			if(window.innerWidth < 960 ){
				$('.tile--homepage').imgLiquid();
			} else {
				$('.tile--homepage__img img').css('display', 'block');
			}
		}

		tileDefaultImage();

		function tileDefaultImage () {

			$('.tile--homepage--no-image--square .tile--homepage__img img').attr('src','/img/backgrounds/ow-bg-pattern.png');

		}*/

    adjustTilesHeight();

    function adjustTilesHeight(){
      var tileHeight = $('.tiles-grid--homepage__row:first-child .tile--homepage').height();
      $('.tile--homepage--variant-1, .tile--homepage--variant-2  ').css('height', tileHeight);

    }

    $(window).on('resize', function () {
      adjustTilesHeight();
    });

    tileHovers();
    $(window).resize(tileHovers());

    function tileHovers() {
      if(helper.breakpoints('desktop')){

        tile.on('mouseenter', function () {

          var $el = $(this).find('.cloned');

          if ($el.css('opacity') == 1 ) {
            $el.css('opacity', '0');
            $(this).find(tileCTA).animate({opacity: 1}, 100);
            $(this).addClass('is-active');
          }

        });

        tile.on('mouseleave', function () {

          var $el = $(this).find('.cloned');

          if ($el.css('opacity') == 0 ) {
            $(this).removeClass('is-active');
            $el.stop().animate({opacity: 1}, 200);
            $(this).find(tileCTA).animate({opacity: 0}, 50);
          }
        });

      }
    }

  }

};

var tilesOverlay = {

  init: function () {

    var tile = $('.tile'),
      tileHeader = $('.tile__header'),
      tileContent = $('.tile__content'),
      tileCTA = $('.tile__cta');

    if(!tile.hasClass('mmc-news-tile'))
      squareBox();

    function squareBox() {
      var counter = 0;
      var li_width = 0;
      var lastItem = null;
      tile.each(function () {
        if ($(this).index()==0){
          counter = 0;
          li_width = 0;
          lastItem = null;
        }
        li_width = $(this).width();
        if (counter != 0) {
          lastItem.css('height', li_width);
        }
        lastItem = $(this);
        $(this).css('height', li_width);
        counter++;
      });
    }

    cloneTileHeaders();

    function cloneTileHeaders(){
      tile.each(function(){
        var clonedHeader = $(this).find(tileHeader).clone().addClass('cloned');
        clonedHeader.prependTo($(this));
      });
    }

    $('.tile--no-image header.cloned').remove();

    tileHovers();
    $(window).resize(tileHovers());

    function tileHovers() {
      if(helper.breakpoints('desktop')){

        tile.on('mouseenter', function () {

          var $el = $(this).find('.cloned');

          if ($el.css('opacity') == 1 ) {
            $el.css('opacity', '0');
            $(this).find(tileCTA).animate({opacity: 1}, 50);
            $(this).addClass('is-active');
          }

        });

        tile.on('mouseleave', function () {

          var $el = $(this).find('.cloned');

          if ($el.css('opacity') == 0 ) {
            $(this).removeClass('is-active');
            $el.stop().clearQueue().animate({opacity: 1}, 100);
            $(this).find(tileCTA).animate({opacity: 0}, 25);
          }
        });

      }
    }

    $(window).on('resize', function(){
      squareBox();
    });

  }
};

var dynamicTilesOverlay = {

  init: function () {

    var tile = $('.dynamic-tile');
    squareBox();

    function squareBox() {
      var counter = 0;
      var li_width = 0;
      var lastItem = null;
      tile.each(function () {
        if ($(this).index()==0){
          counter = 0;
          li_width = 0;
          lastItem = null;
        }
        li_width = $(this).width();
        if (counter != 0) {
          lastItem.css('height', li_width);
        }
        lastItem = $(this);
        $(this).css('height', li_width);
        counter++;
      });
    }

    $(window).on('resize', function(){
      squareBox();
    });

  }
};

var tilesOurValues = {

  init: function() {

    tileValues();

    function tileValues() {
      if(window.innerWidth > 769 ){

        var tile = $('.tile--our-values');

        function squareBox(){
          tile.each(function(){
            var li_width = $(this).width();
            $(this).css('height', li_width);
          });
        }

        squareBox();

        tile.on('mouseenter', function () {

          var overlay = $(this).find('.tile__overlay');
          var content = $(this).find('.tile--our-values__content');
          var footer = $(this).find('.tile--our-values__footer');

          var prevContent = content.prev();
          var prevFooter = footer.prev();

          if (footer.css('opacity') == 1 ) {
            overlay.css('opacity', 0.8);
            content.animate({opacity: 1}, 50);
            footer.animate({opacity: 0}, 25);
          }

        })
          .on('mouseleave', function () {
            var overlay = $(this).find('.tile__overlay');
            var content = $(this).find('.tile--our-values__content');
            var footer = $(this).find('.tile--our-values__footer');

            if (footer.css('opacity') == 0 ) {
              overlay.css('opacity', 0.4);
              content.animate({opacity: 0}, 25);
              footer.animate({opacity: 1}, 50);
            }

          });


      }
    }

    $(window).on("resize", function(){
      tileValues();
    });

  }

};

var tilesMoreEvents = {

  init: function() {

    var $el = $('.tiles-grid--more-events__item');

    squareBox();

    function squareBox(){
      if(window.innerWidth > 769 ){
        $el.each(function(){
          var li_width = $(this).width();
          $(this).css('height', li_width);
        });
      } else {
        $el.css('height', 'auto');
      }
    }


    $(window).on('resize', function(){
      squareBox();
    });
  }

};

var accordion = {
  init: function () {

    $('.accordion__header').on('click', function (e){
      if ($(this).find('a.accordion__toggle').length>0){
        //console.log($(this).find('a.accordion__toggle'));
        e.preventDefault();
        var $toggle = $(this).find('.accordion__toggle');

        var $content = $(this).parents('.js-accordion').find('.js-accordion__content');

        if( $toggle.hasClass('is-on') ) {
          $toggle.removeClass('is-on');
          $content.removeClass('is-on');
        } else {
          $toggle.addClass('is-on');
          $content.addClass('is-on');
        }
      }
    });
  }
};

var sidebarReveal = {
  init: function () {

    $('.js-reveal__toggle').on('click', function (e){

      e.preventDefault();

      var $content = $(this).parents('.js-reveal').find('.js-reveal__content');

      if( $(this).hasClass('is-on') ) {
        $(this).removeClass('is-on');
        $content.removeClass('is-on');
      } else {
        $(this).addClass('is-on');
        $content.addClass('is-on');
      }
    });
  }
};

var videoLightbox = {

  init: function () {

    $('.video-module__icon').each(function(){
      if(!$(this).parents('.video--hero').length){
        $(this).flexVerticalCenter({
          cssAttribute: 'top'
        });
      }
    });

    venobox();

    function venobox () {
      $('.venobox').venobox({
        bgcolor: 'white',
      });
    }

  }

};

var recruitingEvents = {

  init: function () {

    // Google Spreadsheet ID - Make sure the spreadsheet is public and published to the web
    var spreadsheetID = "1S1fqT06S8vPqyTyObmNkNRLuRBX8GQcYQSn_tyhZtek",
      url = "https://spreadsheets.google.com/feeds/list/" + spreadsheetID + "/od6/public/values?alt=json&callback=?";

    $.getJSON(url, 'jsonp', function(data) {

      var entries = data.feed.entry;

      $.each(entries, function(){

        var countries = this.gsx$country.$t;

        var filterItems = '<option class="fiter-item" value="'+countries+'">'+countries+'</option>';
        $('#js-country-filter').append(filterItems);

        Array.prototype.removeDuplicates = function() {

          var temp = new Array();
          var i, len = this.length;

          this.sort();

          for(i = 0; i < len; i++) {

            if(this[i] == this[i+1]) {

              continue;

            }

            temp[temp.length] = this[i];

          }

          return temp;
        };

        $(function() {

          var items = [];
          $('option', '#js-country-filter').each(function(i) {

            var text = $(this).text();
            items[i] = text;

          });

          var filteredItems = items.removeDuplicates();
          var html = '', i, len = filteredItems.length;

          for(i = 0; i < len; i += 1) {

            html += '<option>' + filteredItems[i] + '</option>';

          }

          $('#js-country-filter').html(html).selectric();

        });


      });

      var groups = [];

      $.each(entries,  function(i, item) {

        var school = item.gsx$school.$t;
        var country = item.gsx$country.$t;

        delete item.school;

        var thisSchool = _.find(groups, function(o) { return o.schoolName === school; });
        var thisCountry = _.find(groups, function(o) { return o.schoolCountry === country; });

        if(thisSchool){
          thisSchool.content.push(item);
        } else {
          groups.push({
            schoolName: school,
            schoolCountry: country,
            content: []
          });
        }

      });

      var html;

      $.each(groups, function(i, result){

        var country = result.schoolCountry;//sort this out

        html += '<li>\
							<span class="events__country">'+country+'</span>\
							<div class="accordion js-accordion">\
								<header class="accordion__header accordion__header--events">\
									<h4 class="recruiting-events__title"><span class="events__school">'+result.schoolName+'</span></h4>\
									<span class="accordion__toggle js-accordion__toggle"></span>\
								</header>\
								<div class="accordion__content js-accordion__content">\
									<div class="accordion__content__text">';

        $.each(result.content, function (j, detail) {

          var	country = detail.gsx$country.$t;
          school = detail.gsx$school.$t;
          eventName = detail.gsx$eventname.$t,
            eventLocation = detail.gsx$location.$t,
            eventDate = detail.gsx$date.$t,
            eventTime = detail.gsx$time.$t,
            eventSpeakers = detail.gsx$speakers.$t,
            eventDescription = detail.gsx$description.$t,
            eventButton = detail.gsx$button.$t,
            eventButtonURL = detail.gsx$buttonurl.$t;

          html += '<span><h5 class="recruiting-events__subtitle">' + eventName + '</h5>'
          if (eventLocation != null && eventLocation != '') {
            html += '<h6 class="recruiting-events__detail">\
									<span class="recruiting-events__detail--category">Location:</span>\
									<span class="recruiting-events__detail--location">\ ' + eventLocation + ' </span>\
								</h6>'
          }
          if (eventDate != null && eventDate != '') {
            html += '<h6 class="recruiting-events__detail">\
										<span class="recruiting-events__detail--category">Date:</span>\
										<span class="recruiting-events__detail--date">\ ' + eventDate + ' </span>\
									</h6>'
          }
          if (eventTime != null && eventTime != '') {
            html += '<h6 class="recruiting-events__detail">\
									<span class="recruiting-events__detail--category">Time:</span>\
									<span class="recruiting-events__detail--time">\ ' + eventTime + ' </span>\
								</h6>'
          }
          if (eventSpeakers != null && eventSpeakers != '') {
            html += '<h6 class="recruiting-events__detail">\
									<span class="recruiting-events__detail--category">Speakers:</span>\
									<span class="recruiting-events__detail--speakers">\ ' + eventSpeakers + ' </span>\
								</h6>'

          }
          html += '<p class="recruiting-events__copy">' + this.gsx$description.$t + '</p>'
          if (eventButtonURL != null && eventButtonURL != '') {
            html += '<a href="' + eventButtonURL + '" class="btn--download events-button">'
              + eventButton + '</a>'
          }
          html += '</span>'
        });



        html += '</div></div>' + '</li>';


      });


      $('#js-recruiting-events').prepend(html);


      if ($('.recruiting-events__list').length > 0) {


        function removeEmpties () {

          jQuery.expr[':'].space = function(elem) {
            var $elem = jQuery(elem);
            return !$elem.siblings().length && !$elem.text().match(/\S/);
          }

          $('.recruiting-events__subtitle:space,\
						.recruiting-events__copy:space,\
						.events-button:space').remove();

          $('.recruiting-events__detail--date:space, \
						.recruiting-events__detail--location:space, \
						.recruiting-events__detail--time:space, \
						.recruiting-events__detail--speakers:space').parent().remove();

        }

        function accordion() {
          $('.accordion__header--events').on('click', function (e){

            var $this = $(this);
            var $toggle = $this.find('.accordion__toggle');
            var $content = $this.parent().find('.js-accordion__content');

            if($toggle.hasClass('is-on') ) {
              $toggle.removeClass('is-on');
              $content.removeClass('is-on');
            } else {
              $toggle.addClass('is-on');
              $content.addClass('is-on');
            }
          });
        }

        function countryFilter() { //http://www.listjs.com/

          var	eventNotice = $('.recruiting-events__notice'),
            countryFilter = $('#js-country-filter'),
            activeFilters = $('#js-active-filters');

          var filters = [];

          var paginationTopOptions = {
            name: "paginationTop",
            paginationClass: "pagination__top",
            outerWindow: 2
          };

          var paginationBottomOptions = {
            name: "paginationBottom",
            paginationClass: "pagination__bottom",
            outerWindow: 2
          };

          var options = {

            valueNames: [ 'events__country'],
            page: 12,
            plugins: [
              ListPagination(paginationTopOptions),
              ListPagination(paginationBottomOptions)
            ]

          };

          var countrySelection = new List('js-recruiting-events-container', options);

          function createDefaultFilters(){
            if(activeFilters.attr("data-filters") != undefined && activeFilters.attr("data-filters").length > 0){
              filters = activeFilters.attr("data-filters").split(",");
              $.each(filters, function(index, value){
                createActiveFilter(value);
              });
              updateFilters();
            }
          }

          function updateFilters(){
            if (filters.length == 0) {
              countrySelection.filter();
              return false;
            } else {
              countrySelection.filter(function(item) {
                return (filters.indexOf(item.values().events__country) != -1);
              });
            }
          }

          function removeFilter(e){
            e.preventDefault();
            var parent = $(e.currentTarget).parent();
            var span = $(e.currentTarget).prev("span");
            var oldFilter = span.text();
            filters = filters.filter(function(item) {
              return (item != oldFilter);
            });
            parent.remove();
            updateFilters();
          }

          function createActiveFilter(selection){
            var newFilter = document.createElement("div");
            newFilter.innerHTML = "<span>" + selection + "</span>";
            newFilter.className = "active-filter";
            var remove = document.createElement("a");
            remove.innerText = " 🗙";
            remove.className = "remove";
            remove.setAttribute("href","#");
            newFilter.appendChild(remove);
            $(remove).click(removeFilter);
            activeFilters.append(newFilter);
          }

          countryFilter.change(function () {
            var selection = this.value;
            if(selection == "All"){
              activeFilters.empty();
              filters = [];
            }else if(filters.indexOf(selection) == -1) {
              filters.push(selection);
              createActiveFilter(selection);
            }
            return updateFilters();
          });

          countrySelection.on('filterComplete', function(){
            if ($('#js-recruiting-events li').length === 0) {
              eventNotice.css('display', 'block');
              $('.btn-next, .btn-prev').css('display', 'none');
            } else {
              eventNotice.css('display', 'none');
              $('.btn-next, .btn-prev').css('display', 'block');
            }
            if ($('#js-recruiting-events li').length < 12) {
              $('.btn-next, .btn-prev').css('display', 'none');
            } else {
              $('.btn-next, .btn-prev').css('display', 'block');
            }
          });

          createDefaultFilters();

        }

        function nextPrevious () {

          $('.btn-next').on('click', function(e){
            e.preventDefault();
            var list = $('.pagination').find('li');
            $.each(list, function(position, element){
              if($(element).is('.active')){
                $(list[position+1]).trigger('click');
              }
            })

          });
          $('.btn-prev').on('click', function(e){
            e.preventDefault();
            var list = $('.pagination').find('li');
            $.each(list, function(position, element){
              if($(element).is('.active')){
                $(list[position-1]).trigger('click');
              }
            })
          });

        }
        removeEmpties();
        accordion();
        countryFilter();
        nextPrevious();
      };

    });

  }
};

var selectStyles = {

  init: function() {

    if(helper.breakpoints('tablet')){

      $('.filter__wrapper__select').selectric();

    }

  }

};

var profilesFilters = {

  init: function () {

    if ($('.tiles-grid--aggregator__content').length > 0) {

      var	$container = $('#js-careers-profiles'),
        $grid = $('#js-careers-profiles ul'),
        $select =  $('#js-career-profile-filters .filter__wrapper__select');

      var paginationTopOptions = {
        name: "paginationTop",
        paginationClass: "pagination__top",
        outerWindow: 20
      };

      var paginationBottomOptions = {
        name: "paginationBottom",
        paginationClass: "pagination__bottom",
        outerWindow: 20
      };

      var options = {

        valueNames: [ 'role', 'school', 'office' ],
        page: 9,
        plugins: [
          ListPagination(paginationTopOptions),
          ListPagination(paginationBottomOptions)
        ]

      };

      var profilesList = new List('js-careers-profiles', options);

      function updateList () {

        var values_roles = $('.role-filter').val()
        var values_schools = $('.school-filter').val()
        var values_offices = $('.office-filter').val()

        profilesList.filter(function(item) {
          var result = false;
          if(values_roles === 'Role (ALL)' || values_roles === item.values().role || !values_roles) {
            if(values_schools === 'School (ALL)' || values_schools === item.values().school || !values_schools) {
              if(values_offices === 'Office (ALL)' || values_offices === item.values().office || !values_offices) {
                result = true
              }
            }
          }

          return result;

        });

      }

      $(function(){

        updateList();

        $('.role-filter').change(updateList);
        $('.school-filter').change(updateList);
        $('.office-filter').change(updateList);

        var all_roles = [];
        var all_schools = [];
        var all_offices = [];

        _(profilesList.items).each(function(item){
          all_roles.push(item.values().role)
          all_schools.push(item.values().school)
          all_offices.push(item.values().office)
        });

        var messageNotice = $('.tiles-grid__filter-message');

        $select.each(function(){
          $(this).on('change', function(){
            updateList();
            if ($('.tiles-grid--aggregator__content li').length === 0) {
              messageNotice.css('display', 'block');
              $('.btn-next, .btn-prev').css('display', 'none');
            } else {
              messageNotice.css('display', 'none');
              $('.btn-next, .btn-prev').css('display', 'block');
            }
            if ($('.tiles-grid--aggregator__content li').length < 9) {
              $('.btn-next, .btn-prev').css('display', 'none');
            } else {
              $('.btn-next, .btn-prev').css('display', 'block');
            }
          });
        });

      });

      function nextPrevious () {

        $('.btn-next').on('click', function(e){
          e.preventDefault();
          var list = $('.pagination').find('li');
          $.each(list, function(position){
            if($(this).is('.active')){
              $(list[position+1]).trigger('click');
            }
          })

        })
        $('.btn-prev').on('click', function(e){
          e.preventDefault();
          var list = $('.pagination').find('li');
          $.each(list, function(position){
            if($(this).is('.active')){
              $(list[position-1]).trigger('click');
            }
          })
        })

      }

      nextPrevious();

    }

  }

};

var twitterFeed = {
  init: function () {

    if($('#twitter-wjs').length){
      twitterFetcher.fetch({
        id: '350260616604303360',
        domId: 'twitter-wjs',
        "maxTweets": 5,
        "enableLinks": true,
        "showUser": false,
        "showTime":false,
        "showPermalinks": false,
        "showImages": false,
        "showRetweet": false,
        "showInteraction": false
      });
    }

    if($('#twitter-wjs-sidebar').length){
      twitterFetcher.fetch({
        id: '350260616604303360',
        domId: 'twitter-wjs-sidebar',
        "maxTweets": 5,
        "enableLinks": true,
        "showUser": false,
        "showPermalinks": false,
        "showImages": false,
        "showRetweet": false,
        "showInteraction": false
      });
    }

    setTimeout(function(){
      $('.twitter-feed__content').fadeTo( '300', 1 );
      $('#twitter-wjs > ul').addClass('tweetList');
      $('#twitter-wjs-sidebar > ul').addClass('tweetListVertical');
    }, 700);

    setTimeout(function(){
      $('.tweetList').bxSlider({
        auto: true,
        autoControls: false,
        control:false,
        speed: 7500,
        pager: false,
        nextSelector: '',
        nextText: '',
        prevText: ''
      });
    }, 850);

    setTimeout(function(){
      $('.tweetListVertical').bxSlider({
        mode: 'vertical',
        auto: true,
        autoControls: false,
        control:false,
        speed: 7500,
        pager: false,
        nextSelector: '',
        nextText: '',
        prevText: '',
      });
    }, 850);

  }

};

var stickySidebar = {
  myHash: '',
  init: function () {

    if ($('.sticky-sidebar').length > 0) {

      function sidebarPosition() {

        var sidebar = $('.sticky-sidebar'),
          positionTimeout,
          sidebarWidth = sidebar.width(),
          articleContent = $( ".article .article__main" ),
          offset = articleContent.offset(),
          positionSidebar = offset.left - sidebarWidth - 30 + 'px';

        sidebar.css('left', positionSidebar);

        $('.sticky-sidebar').animate({
          opacity: 1
        }, 1500);

      }

      sidebarPosition();

      $(window).load(function(){
        sidebarPosition();
      });

      $(window).resize(sidebarPosition);


      function rollingSidebar () {

        $('.sticky-sidebar__nav ul').animate({
          height: $('.sticky-sidebar__nav ul').get(0).scrollHeight
        }, 1200, 'easeInOutCubic', function(){
          $(this).height('auto');
        });

      }

      rollingSidebar();

      function changeHashOnScroll () {

        var top = null;
        var changed = false;
        var currentHash = null;
        var heroHeight = $('#js-hero').height();
        var headerHeight = $('.site-header').height();

        function step() {

          $(window).scroll(function () {
            var newTop = $(document).scrollTop();

            changed = newTop != top;
            if (changed) {
              top = newTop - heroHeight + headerHeight;
            }

          });

          var section = $.map($(".article__section"), function (e) {
            var $e = $(e);
            var pos = $e.position();
            return {
              top: pos.top,
              bottom: pos.top + $e.height(),
              hash: $e.attr('id')
            };
          });

          if (!changed) {
            return setTimeout(step, 200);
          }

          var count = section.length;
          var p;

          while (p = section[--count]) {
            if (p.top >= top || p.bottom <= top) {
              continue;
            }
            if (currentHash == p.hash) {
              break;
            }
            var scrollTop = $(document).scrollTop();
            stickySidebar.myHash = currentHash = p.hash;
            $(document).scrollTop(scrollTop);

          }
          setTimeout(step, 200);
        }
        setTimeout(step, 200);
      }

      changeHashOnScroll();

      function sidebarNavigation() {

        $('.sticky-sidebar__nav li:first-child').find('a').addClass('is-on');

        $('.sticky-sidebar .sticky-sidebar__nav a').on('click', function () {

          if (location.pathname.replace(/^\//,'') == this.pathname.replace(/^\//,'') && location.hostname == this.hostname) {
            var target = $(this.hash);
            target = target.length ? target : $('[name=' + this.hash.slice(1) +']');
            if (target.length) {
              $('html, body').animate({
                scrollTop: target.offset().top - 20
              }, 1000);
              return false;
            }
          }

          $('.sticky-sidebar__nav li').find('a').removeClass('is-on');

          if ($this.hasClass('is-on')) {
            $this.removeClass('is-on');
          } else {
            $this.addClass('is-on')
          }

        });

      }

      sidebarNavigation();

      function sidebarScroll () {

        $(window).on('scroll', function () {

          var hash = stickySidebar.myHash;

          $('.sticky-sidebar__nav li a').each(function (){

            var $this = $(this);

            if ($this.attr('href').replace('#' , '') == hash) {
              $this.addClass('is-on');
            } else {
              $this.removeClass('is-on');
            }

          });

        });

        var $el = $('.sticky-sidebar');

        var waypoint = new Waypoint({

          element: document.getElementById('js-main-content'),

          handler: function (direction) {
            if( direction === "down" ){
              $el.addClass("is-sticky");
            } else if ( direction === "up" ){
              $el.removeClass("is-sticky");
            }

          },

        });

        $('.tiles-grid--four-columns').attr('id', 'sticky-sidebar-stop');

        var stopHeight = $('#sticky-sidebar-stop').height();

        if(document.getElementById('sticky-sidebar-stop')){
          var waypoint2 = new Waypoint({

            element: document.getElementById('sticky-sidebar-stop'),

            handler: function (direction) {

              if( direction === "down" ){

                if ($el.hasClass('is-sticky')) {
                  $el.removeClass('is-sticky');
                  $el.addClass('is-bottom');
                }

              }

              if( direction === "up" ){

                if ($el.hasClass('is-bottom')) {
                  $el.removeClass('is-bottom');
                  $el.addClass('is-sticky');
                }

              }

            },

            offset: stopHeight + 120

          });
        }

      }

      sidebarScroll();

      $(window).scroll(sidebarPosition);

    }

  },

};

var qaSlider = {

  init: function () {

    var slider = $('.qa-widget__slider').bxSlider({
      pager: false,
      nextSelector: '#qaSlider-next',
      prevSelector: '#qaSlider-prev',
      nextText: '<i class="icon-next"></i>',
      prevText: '<i class="icon-previous"></i>',
      hideControlOnEnd: true,
      infiniteLoop: false
    });

  }

};

var articleLinkBox = {

  init: function() {
    $('.article-link-box .js-article-link-box__equal-heights').matchHeight();
  }

};

var mediaStacked = {

  init: function() {

    var container = $('.js-stacked-list');

    container.imagesLoaded( function() {
      container.isotope({
        // options
        itemSelector: '.js-stacked-item',
        layoutMode: 'moduloColumns'
      });
    });

  }
};

var dynamicTileStack = {

  init: function() {

    var container = $('.dynamic-tiles-grid.clean > ul');

    container.imagesLoaded( function() {
      container.isotope({
        // options
        itemSelector: '.dynamic-tiles-grid.clean > ul > li',
        layoutMode: 'moduloColumns',
        moduloColumns: {
          columnWidth: $('.dynamic-tiles-grid.clean > ul > li')[0]
        }
      });
    });

  }
};

var locationsStacked = {

  init: function() {

    var container = $('.location-box__lists');

    container.imagesLoaded( function() {
      container.isotope({
        // options
        itemSelector: '.location-box__country',
        layoutMode: 'moduloColumns'
      });
    });
  }
};

var matchHeight = {

  init: function() {

    $('.js-match-height').matchHeight();

  }

};

var imgLiquid = {

  init: function() {

    $('.js-image-liquid').imgLiquid();

  }

};

var smoothAnchor = {

  init: function() {

    $('.anchor-link').click(function() {
      if (location.pathname.replace(/^\//,'') == this.pathname.replace(/^\//,'') && location.hostname == this.hostname) {
        var target = $(this.hash);
        target = target.length ? target : $('[name=' + this.hash.slice(1) +']');
        if (target.length) {
          $('html, body').animate({
            scrollTop: target.offset().top - 95
          }, 1000);
          return false;
        }
      }
    });

  }
};

var ligthboxGallery = {

  init: function() {

    $('.lightbox-gallery--trigger').venobox({
      framewidth: '100%',
      frameheight: 'auto',
      border: '60px 0',
      bgcolor: '#F9F9F9',
      titleattr: 'data-title'
    });

  }

};

var imageCarousel = {

  init: function() {

    $('.article__lightbox--carousel__items').slick({

      dots: false,
      infinite: true,
      slidesToShow: 4,
      slidesToScroll: 3,
      arrows:true,
      responsive: [

        {
          breakpoint: 1024,
          settings: {
            slidesToShow: 4,
            slidesToScroll: 3,
          }
        },
        {
          breakpoint: 600,
          settings: {
            slidesToShow: 3,
            slidesToScroll: 2
          }
        },
        {
          breakpoint: 480,
          settings: {
            slidesToShow: 2,
            slidesToScroll: 1
          }
        }

      ]

    });

    $('.article__lightbox--carousel .venobox img').on('mouseenter', function(){

      var parent = $(this).parent().parent().parent().parent().parent().parent().addClass('has-icon');

    });

    $('.article__lightbox--carousel .venobox img').on('mouseleave', function(){

      var parent = $(this).parent().parent().parent().parent().parent().parent().removeClass('has-icon');;

    });


    $('.venobox').on('click', function(){

      if ($('.vbox-title').length > 0) {

        $('.vbox-title').each(function(){

          var caption = $(this);
          var content = $(this).parent().find('.vbox-content');

          caption.detach();

          setTimeout(function(){
            caption.appendTo(content);
          }, 400);

        });

      }
    });

    // $('.search-results__content li').wrap('<div class="search-results__border"></div>');


  }

};

var insigthsAggregator = {
  init: function() {
    $(window).resize(marginCorrection);
    marginCorrection();
    function marginCorrection () {
      //if(window.innerWidth > 600 ){
      //$('.tiles-grid--aggregator--insights .tile').slice(-4).attr('style', 'margin-bottom: 0 !important');
      //} else {
      //	$('.tiles-grid--aggregator--insights .tile').slice(-4).attr('style', 'margin-bottom: 20px');
      //}
    }
  }
};

var eventsAggregator = {

  init: function() {


    $(window).resize(marginCorrection);
    marginCorrection();

    function marginCorrection () {
      //if(window.innerWidth > 600 ){
      //$('.events-aggregator .tiles-grid--more-events__item').slice(-4).css('marginBottom', '0');
      //} else {
      //	$('.events-aggregator .tiles-grid--more-events__item').slice(-4).css('marginBottom', '20px');
      //}
    }
  }
};

var searchResultPage = {

  init: function() {

    $('.search-results__content li').wrap('<div class="search-results__border"></div>');

  }

};

var blogCallout = {
  init: function() {
    $('.js-match-height--blog- callout').matchHeight({ byRow: false });
  }
};


$(function(){
  mainHero.init();
  hero.init();
  heroTiled.init();
  heroCarousel.init();
  heroCarouselSlick.init();
  // searchBox.init();
  siteNav.init();
  stickyHeader.init();
  accordion.init();
  sidebarReveal.init();
  asides.init();
  tabs.init();
  videoLightbox.init();
  selectStyles.init();
  scrollUp.init();
  recruitingEvents.init();
  stickySidebar.init();
  tilesHomepage.init();
  tilesOverlay.init();
  tilesMoreEvents.init();
  tilesOurValues.init();
  /* twitterFeed.init(); No twitter in JS*/
  interviewPrep.init();
  profilesFilters.init();
  qaSlider.init();
  articleLinkBox.init();
  mediaStacked.init();
  imgLiquid.init();
  smoothAnchor.init();
  standoutHeightAdjustment.init();
  ligthboxGallery.init();
  imageCarousel.init();
  //matchHeight.init();
  blogCallout.init();
  searchResultPage.init();
  insigthsAggregator.init();
  eventsAggregator.init();

  var gridColumns = $(".dynamic-tiles-grid")[0];
  if(gridColumns != undefined && gridColumns.classList.contains("clean")){
    dynamicTileStack.init();
  }else{
    dynamicTilesOverlay.init();
  }
});

// Get the modal
var modal = document.getElementById('myModal');

// Get the image and insert it inside the modal
var modalImg = document.getElementById("imgsb01");

$("img.sdpics").click(function(){
  modal.style.display = "block";
  modalImg.src = this.src;
  document.body.style.overflow = "hidden";
  return false;
});

// Get the <span> element that closes the modal
var span = document.getElementsByClassName("vbox-close")[0];

// added  if(span != null) { to avoid error when component doesn't exit
// When the user clicks on <span> (x), close the modal
if(span != null) {
  span.onclick = function () {
    modal.style.display = "none";
    document.body.style.overflow = "auto";
  }
}

$(".mmc-leadership-grid-item").click(function(e){
  let hash = $(e.currentTarget).data('hash');
  let leadId = $(e.currentTarget).data('leadid');

  if(hash) {
    e.preventDefault();
    let modal = $("#mmc-lead-modal-" + hash);
    let content = $("#mmc-lead-modal-" + hash + "-" + leadId);
    if(content) {
      modal.css("display", "block");
      content.css("display", "block");
    }
  }
});

$(".mmc-leadership-grid-modal-container__close").click(function(e){
  e.preventDefault();
  let hash = $(e.currentTarget).data('hash');
  let leadId = $(e.currentTarget).data('leadid');

  if(hash) {
    let modal = $("#mmc-lead-modal-" + hash);
    let content = $("#mmc-lead-modal-" + hash + "-" + leadId);
    if(content) {
      modal.css("display", "none");
      content.css("display", "none");
    }
  }
});

$(".mmc-leadership-grid-modal").click(function(e){
  e.preventDefault();

  if (e.target !== this)
    return;

  let hash = $(e.currentTarget).data('hash');
  let size = $(e.currentTarget).data('size');

  if(hash) {
    let modal = $("#mmc-lead-modal-" + hash);

    if(modal) {
      modal.css("display", "none");
    }

    if(size) {
      for (let i = 1; i <= size; i++) {
        var aux = $("#mmc-lead-modal-" + hash + "-" + i);
        aux.css("display", "none");
      }
    }
  }
});

$(".mmc-modal-side-left").click(function(e){
  e.preventDefault();
  let hash = $(e.currentTarget).data('hash');
  let size = $(e.currentTarget).data('size');
  let leadId = $(e.currentTarget).data('leadid');

  if(hash) {
    let modal = $("#mmc-lead-modal-" + hash);
    let content = $("#mmc-lead-modal-" + hash + "-" + leadId);
    let newContent = $("#mmc-lead-modal-" + hash + "-" + (leadId - 1));
    if(content) {
      modal.css("display", "none");
      content.css("display", "none");
    }
    if(newContent.length > 0) {
      modal.css("display", "block");
      newContent.css("display", "block");
    } else {
      modal.css("display", "block");
      $("#mmc-lead-modal-" + hash + "-" + size).css("display", "block");
    }
  }
});

$(".mmc-modal-side-right").click(function(e){
  e.preventDefault();
  let hash = $(e.currentTarget).data('hash');
  let leadId = $(e.currentTarget).data('leadid');

  if(hash) {
    let modal = $("#mmc-lead-modal-" + hash);
    let content = $("#mmc-lead-modal-" + hash + "-" + leadId);
    let newContent = $("#mmc-lead-modal-" + hash + "-" + (leadId + 1));
    if(content) {
      modal.css("display", "none");
      content.css("display", "none");
    }
    if(newContent.length > 0) {
      modal.css("display", "block");
      newContent.css("display", "block");
    } else {
      modal.css("display", "block");
      $("#mmc-lead-modal-" + hash + "-1").css("display", "block");
    }
  }
});

function mmcHideTiles() {
  $(".mmc-aggregator-grid").remove();
  $(".mmc-aggregator-list").css("display", "block");
  $(".mmc-aggregator-container").css("border-bottom", "solid 1px #e7e7e7");
}

/**
 * Sanitize strings to avoid XSS
 * @param string
 * @returns {string | void | *}
 * @constructor
 */
function SanitizeString(string)
{
  var pattern = /[^-A-Za-z0-9+&@#/%?=~_|!:,.;()]+/g;
  return string.replace(pattern, "");
}

/**
 *
 * @param selector
 * @param maxLength
 * @returns {string | any}
 */
function truncateText(text, maxLength) {

  if (text.length > maxLength) {
    text = text.substr(0,maxLength) + '...';
  }
  return text;
}

twitterFeedSlider = {
  init: function() {
    setTimeout(function(){
      $('.twitter-feed__content').fadeTo( '300', 1 );
      $('#twitter-wjs > ul').addClass('tweetList');
      $('#twitter-wjs-sidebar > ul').addClass('tweetListVertical');
    }, 700);

    setTimeout(function(){
      $('.tweetList').bxSlider({
        auto: true,
        autoControls: false,
        control:false,
        speed: 7500,
        pager: false,
        nextSelector: '',
      });
      $('.tweetList li').each(function(index, el){
        $(el).css("padding-right", "10px");
      });
      //Fix for slider margins/padding causing overflow
      var totalWidth = 0;
      var individualWidth = 0;
      $('.tweetList li').each(function(index, el){
        individualWidth = $(el).outerWidth(true);
        totalWidth = totalWidth + individualWidth;
      });
      if(totalWidth > 0){
        //Don't forget the clones
        $('.tweetList').width(totalWidth + (individualWidth * 2));
      }
    }, 850);

    setTimeout(function(){
      $('.tweetListVertical').bxSlider({
        mode: 'vertical',
        auto: true,
        autoControls: false,
        control:false,
        speed: 7500,
        pager: false,
        nextSelector: '',
      });
    }, 850);
  }
},

    newsFeedSlider = {
      init: function() {
        setTimeout(function(){
          $('.news-feed__content').fadeTo( '300', 1 );
        }, 700);

        setTimeout(function(){
          $('.newsfeedList').bxSlider({
            auto: true,
            autoControls: false,
            control:false,
            speed: 7500,
            pager: false,
            nextSelector: ''
          });
          $('.newsfeedList li').each(function(index, el){
            $(el).css("padding-right", "10px");
          });
          //Fix for slider margins/padding causing overflow
          var totalWidth = 0;
          var individualWidth = 0;
          $('.newsfeedList li').each(function(index, el){
            individualWidth = $(el).outerWidth(true);
            totalWidth = totalWidth + individualWidth;
          });
          if(totalWidth > 0){
            //Don't forget the clones
            $('.newsfeedList').width(totalWidth + (individualWidth * 2));
          }
        }, 850);
      }
    };

/*recEventsOW = {
    init: function () {
      if ($('.recruiting-events__list').length > 0) {

        removeEmpties();

        function removeEmpties () {

          jQuery.expr[':'].space = function(elem) {
              var $elem = jQuery(elem);
              return !$elem.children().length && !$elem.text().match(/\S/);
          }

          $('.recruiting-events__subtitle:space,\
            .recruiting-events__copy:space,\
            .events-button:space').remove();

          $('.recruiting-events__detail--date:space, \
            .recruiting-events__detail--location:space, \
            .recruiting-events__detail--time:space, \
            .recruiting-events__detail--speakers:space').parent().remove();

        }

        accordion();

        function accordion() {
          $('.accordion__header--events').on('click', function (e){

            var $this = $(this);
            var $toggle = $this.children('.accordion__toggle');
            var $content = $this.parents('.js-accordion').find('.js-accordion__content');

            if( $toggle.hasClass('is-on') ) {
              $toggle.removeClass('is-on');
              $content.removeClass('is-on');
            } else {
              $toggle.addClass('is-on');
              $content.addClass('is-on');
            }
          });
        }

        countryFilter();

        function countryFilter() { //http://www.listjs.com/

          var	eventNotice = $('.recruiting-events__notice'),
            countryFilter = $('#js-country-filter');

          var paginationTopOptions = {
              name: "paginationTop",
              paginationClass: "pagination__top",
              outerWindow: 2
          };

          var paginationBottomOptions = {
              name: "paginationBottom",
              paginationClass: "pagination__bottom",
              outerWindow: 2
          };

          var options = {

            valueNames: [ 'events__country'],
            page: 12,
              plugins: [
                  ListPagination(paginationTopOptions),
                  ListPagination(paginationBottomOptions)
              ]

            };

          var countrySelection = new List('js-recruiting-events-container', options);

          countryFilter.change(function () {
              var selection = this.value;

              if (selection == 'All') {
                countrySelection.filter();
                return false;
              } else if (selection) {
                  countrySelection.filter(function(item) {
                      return (item.values().events__country == selection);
                  });
              } else {
                  countrySelection.filter();
              }
          });

          countrySelection.on('filterComplete', function(){
            if ($('#js-recruiting-events li').length === 0) {
              eventNotice.css('display', 'block');
              $('.btn-next, .btn-prev').css('display', 'none');
            } else {
              eventNotice.css('display', 'none');
              $('.btn-next, .btn-prev').css('display', 'block');
            }
            if ($('#js-recruiting-events li').length < 12) {
              $('.btn-next, .btn-prev').css('display', 'none');
            } else {
              $('.btn-next, .btn-prev').css('display', 'block');
            }
          });

        }

        nextPrevious();

        function nextPrevious () {

          $('.btn-next').on('click', function(e){
            e.preventDefault();
              var list = $('.pagination').find('li');
              $.each(list, function(position, element){
                  if($(element).is('.active')){
                      $(list[position+1]).trigger('click');
                  }
              })

          });
          $('.btn-prev').on('click', function(e){
            e.preventDefault();
              var list = $('.pagination').find('li');
              $.each(list, function(position, element){
                  if($(element).is('.active')){
                      $(list[position-1]).trigger('click');
                  }
              })
          });


        }

      };
    }
  },*/

$(function(){
  twitterFeedSlider.init();
  newsFeedSlider.init();
  //recEventsOW.init();
  initializeIndCapFilters();
});

/** Filtering **/

$(".media-filter-all").on("click", function(e){
  e.preventDefault();
  $(".filter--authored-ow").hide();
  var filterValue = "ALL";
  var yearValue = "";
  if($(".pagination__archive-links").css('display') != 'none') {
    yearValue = $(".pagination__archive-links .active .page").html();
  }
  $(this).addClass("selected");
  $(".media-filter-news").removeClass("selected");
  $(".media-filter-press").removeClass("selected");
  $(".media-filter-thoughtleadership").removeClass("selected");
  $(".media-filter-social").removeClass("selected");
  $('#ow-offset').attr('data-offset', 0);
  $('#ow-pageno').attr('data-page-no', 1);
  loadEntries(0, 1, yearValue, filterValue, "", "");
});

$(".media-filter-news").on("click", function(e){
  e.preventDefault();
  $(".filter--authored-ow").hide();
  var filterValue = "news";
  var yearValue = "";
  if($(".pagination__archive-links").css('display') != 'none') {
    yearValue = $(".pagination__archive-links .active .page").html();
  }
  $(this).addClass("selected");
  $(".media-filter-all").removeClass("selected");
  $(".media-filter-press").removeClass("selected");
  $(".media-filter-thoughtleadership").removeClass("selected");
  $(".media-filter-social").removeClass("selected");
  $('#ow-offset').attr('data-offset', 0);
  $('#ow-pageno').attr('data-page-no', 1);
  loadEntries(0, 1, yearValue, filterValue, "", "");
});

$(".media-filter-press").on("click", function(e){
  e.preventDefault();
  $(".filter--authored-ow").hide();
  var filterValue = "press";
  var yearValue = "";
  if($(".pagination__archive-links").css('display') != 'none') {
    yearValue = $(".pagination__archive-links .active .page").html();
  }
  $(this).addClass("selected");
  $(".media-filter-all").removeClass("selected");
  $(".media-filter-news").removeClass("selected");
  $(".media-filter-thoughtleadership").removeClass("selected");
  $(".media-filter-social").removeClass("selected");
  $('#ow-offset').attr('data-offset', 0);
  $('#ow-pageno').attr('data-page-no', 1);
  loadEntries(0, 1, yearValue, filterValue, "", "");
});
/*AUTHORED BY OW*/
$(".media-filter-thoughtleadership").on("click", function(e){
  e.preventDefault();
  var filterValue = "thoughtleadership";
  var yearValue = "";
  if($(".pagination__archive-links").css('display') != 'none') {
    yearValue = $(".pagination__archive-links .active .page").html();
  }

  $(".media-filter-authored-ow-tag").removeClass("selected");
  $(".media-filter-authored-ow-tag:first-child").addClass("selected");

  $(this).addClass("selected");
  $(".filter--authored-ow").show();

  $(".media-filter-all").removeClass("selected");
  $(".media-filter-news").removeClass("selected");
  $(".media-filter-press").removeClass("selected");
  $(".media-filter-social").removeClass("selected");
  $('#ow-offset').attr('data-offset', 0);
  $('#ow-pageno').attr('data-page-no', 1);
  loadEntries(0, 1, yearValue, filterValue, "", "");
});

$(".media-filter-authored-ow-tag").on("click", function(e){
  e.preventDefault();
  $(this).siblings().removeClass("selected");
  $(this).addClass("selected");

  var filterValue = "thoughtleadership";
  var yearValue = "";
  if($(".pagination__archive-links").css('display') != 'none') {
    yearValue = $(".pagination__archive-links .active .page").html();
  }
  loadEntries(0, 1, yearValue, filterValue, "", "", $(this).attr("data-value"));
});

function getAuthoredFilter(){
  var authoredOWSelected = jQuery('.media-filter-thoughtleadership.selected');
  var authoredOWSelectedFilter = jQuery('.filter--authored-ow .media-filter-authored-ow-tag.selected');
  var authoredOWFilter = "";
  if (authoredOWSelected.length && authoredOWSelectedFilter.length ){
    authoredOWFilter = authoredOWSelectedFilter.attr("data-value");
  }
  return authoredOWFilter;
}

/* FINISH AUTHORED BY OW*/
$(".media-filter-social").on("click", function(e){
  e.preventDefault();
  $(".filter--authored-ow").hide();
  var filterValue = "owSocialFilter";
  var yearValue = "";
  if($(".pagination__archive-links").css('display') != 'none') {
    yearValue = $(".pagination__archive-links .active .page").html();
  }
  $(this).addClass("selected");
  $(".media-filter-all").removeClass("selected");
  $(".media-filter-news").removeClass("selected");
  $(".media-filter-press").removeClass("selected");
  $(".media-filter-thoughtleadership").removeClass("selected");
  $('#ow-offset').attr('data-offset', 0);
  $('#ow-pageno').attr('data-page-no', 1);
  loadEntries(0, 1, yearValue, filterValue, "", "");
});

function initializeIndCapFilters() {
  var indValue = $('#industryFilter').val();
  var capValue = $('#capabilityFilter').val();
  //only allow one or the other
  if(indValue != "Industries (ALL)") {
    updateIndustryFilter();
    return;
  } else if(capValue != "Capabilities (ALL)") {
    updateCapabilityFilter();
    return;
  }
}

$("#industryFilter").on("change", function(e) {
  e.preventDefault();
  updateIndustryFilter();
});

function updateIndustryFilter() {
  var filterValue = $("#industryFilter").val();
  var secondaryFilterValue = "Capabilities (ALL)";
  $('#capabilityFilter').val(secondaryFilterValue).selectric('refresh');
  $('#ow-offset').attr('data-offset', 0);
  $('#ow-pageno').attr('data-page-no', 1);
  loadEntries(0, 1, filterValue, secondaryFilterValue, "", "");
}

$("#capabilityFilter").on("change", function(e) {
  e.preventDefault();
  updateCapabilityFilter();
});

function updateCapabilityFilter() {
  var filterValue = $("#capabilityFilter").val();
  var secondaryFilterValue = "Industries (ALL)";
  $('#industryFilter').val(secondaryFilterValue).selectric('refresh');
  $('#ow-offset').attr('data-offset', 0);
  $('#ow-pageno').attr('data-page-no', 1);
  loadEntries(0, 1, filterValue, secondaryFilterValue, "", "");
}

//Dynamic Tiles
function updateDynamicTileResults(page, year){
  var selectors = ["results",page];
  if(year != null){
    selectors.push("year|" + year);
  }
  $(".dynamicDropdownFilter").each(function(){
    var selector = this.id + "|" + $(this).val();
    selectors.push(selector.replace(/\//g,"%2F"));
  });
  if($(".dynamic-media-filter.selected").length > 0){
    var choice = $(".dynamic-media-filter.selected")[0]
    var selector = "inline|" + $(choice).attr("data-value");
    selectors.push(selector.replace(/\//g,"%2F"));
  }
  getAndUpdateDynamicTiles(selectors);
}

function getAndUpdateDynamicTiles(selectors){
  var gridResults = $(".dynamic-tile-results")[0];
  var dataSource = $(gridResults).attr("data-source") + "." + selectors.join(".") + ".html";
  var gridColumns = $(".dynamic-tiles-grid")[0];
  if(dataSource && dataSource != ""){
    dataSource = encodeURI(dataSource);
    $.get(dataSource, function(data){
      $(gridResults).html(data);
      //Masonry for clean style
      if(gridColumns != undefined && gridColumns.classList.contains("clean")){
        dynamicTileStack.init();
      }else{
        dynamicTilesOverlay.init();
      }
    });
  }
}

$(".dynamicDropdownFilter").on("change", function(e){
  e.preventDefault();
  var year = null;
  if($(".dynamicTiles .pagination__archive-links li.active").length > 0){
    year = $(".dynamicTiles .pagination__archive-links li.active")[0].innerText;
  }
  updateDynamicTileResults(1, year);
});

$(".dynamic-media-filter").on("click", function(e){
  e.preventDefault();
  $(".dynamic-media-filter").removeClass("selected");
  $(e.target).addClass("selected");
  var year = null;
  if($(".dynamicTiles .pagination__archive-links li.active").length > 0){
    year = $(".dynamicTiles .pagination__archive-links li.active")[0].innerText;
  }
  updateDynamicTileResults(1, year);
});

function dynamicPageLoadMore(event, elem){
  event.preventDefault();
  var currentPage = parseInt($(".dynamicTiles .pagination__inner .active")[0].innerText);
  var newPage;
  if(elem.classList.contains("btn-prev")){
    newPage = currentPage - 1;
  }else if(elem.classList.contains("btn-next")){
    newPage = currentPage + 1;
  }else{
    newPage = elem.innerText;
  }
  var year = null;
  if($(".dynamicTiles .pagination__archive-links li.active").length > 0){
    year = $(".dynamicTiles .pagination__archive-links li.active")[0].innerText;
  }
  updateDynamicTileResults(newPage, year);
}

function dynamicPageYearFilter(event, year){
  event.preventDefault();
  var newYear = year.innerText;
  updateDynamicTileResults(1, newYear)
}

function yearFilter(event, year) {
  event.preventDefault();
  var filterValue = jQuery('.filter--media-center .selected').attr('data-value');
  var yearValue = year.innerHTML;

  jQuery('#ow-offset').attr('data-offset', "0");
  jQuery('#ow-pageno').attr('data-page-no', "1");

  var authoredOWFilter = getAuthoredFilter();
  loadEntries(0, 1, yearValue, filterValue, "", "", authoredOWFilter);
}

/** Pagination **/

function PageNumberLoadMore(event, page, ipp, mmcList) {
  event.preventDefault();

  var template = jQuery("#ow-template").attr('data-template');
  if (typeof template === "undefined") {
    template = "";
  }

  //Get Event information if it exists
  var currentYear = jQuery.fn.currentYear(template);
  var primaryFilter = jQuery.fn.primaryFilter(template);
  var secondaryFilter = jQuery.fn.secondaryFilter(template);
  var itemsPerPage = ipp;

  //Set up pagination
  var pageNumber = parseInt(jQuery(page).html(), 10);
  var offset = (pageNumber - 1) * itemsPerPage;
  jQuery('#ow-offset').attr('data-offset', offset);
  jQuery('#ow-pageno').attr('data-page-no', pageNumber);

  var authoredOWFilter = getAuthoredFilter();

  loadEntries(offset, pageNumber, primaryFilter, secondaryFilter, currentYear, mmcList, authoredOWFilter);
};

function PreviousLoadMore(event, ipp, mmcList) {
  event.preventDefault();

  var template = jQuery("#ow-template").attr('data-template');
  if(typeof template === "undefined") template = "";

  //Get Event information if it exists
  var currentYear = jQuery.fn.currentYear(template);
  var primaryFilter = jQuery.fn.primaryFilter(template);
  var secondaryFilter = jQuery.fn.secondaryFilter(template);
  var itemsPerPage = ipp;

  //Set up pagination
  var offset = parseInt(jQuery('#ow-offset').attr('data-offset'), 10);
  var pageNo = parseInt(jQuery('#ow-pageno').attr('data-page-no'), 10);
  if(offset >= itemsPerPage) {
    offset -= itemsPerPage;
  } else {
    offset = 0;
  }
  jQuery('#ow-offset').attr('data-offset', offset);
  pageNo -= 1;
  jQuery('#ow-pageno').attr('data-page-no', pageNo);

  var authoredOWFilter = getAuthoredFilter();

  loadEntries(offset, pageNo, primaryFilter, secondaryFilter, currentYear, mmcList, authoredOWFilter);
};

function NextLoadMore(event, ipp, mmcList) {
  event.preventDefault();

  var template = jQuery("#ow-template").attr('data-template');
  if(typeof template === "undefined") template = "";

  //Get Event information if it exists
  var currentYear = jQuery.fn.currentYear(template);
  var primaryFilter = jQuery.fn.primaryFilter(template);
  var secondaryFilter = jQuery.fn.secondaryFilter(template);
  var itemsPerPage = ipp;

  //Set up pagination
  var offset = parseInt(jQuery('#ow-offset').attr('data-offset'), 10);
  var pageNo = parseInt(jQuery('#ow-pageno').attr('data-page-no'), 10);
  if(pageNo < 1) pageNo = 1;
  offset += itemsPerPage;
  jQuery('#ow-offset').attr('data-offset', offset);
  pageNo += 1;
  jQuery('#ow-pageno').attr('data-page-no', pageNo);

  var authoredOWFilter = getAuthoredFilter();

  loadEntries(offset, pageNo, primaryFilter, secondaryFilter, currentYear, mmcList, authoredOWFilter);
};

function loadEntries(offset, pageNo, primaryFilter, secondaryFilter, currentYear, isList, authoredOWFilter){
  authoredOWFilter = authoredOWFilter || '';
  var ajaxData = {offset: offset, pageNo: pageNo, primaryFilter: primaryFilter, secondaryFilter: secondaryFilter, currentYear: currentYear, mmcList: isList, authoredOWFilter : authoredOWFilter};

  var dataUrl = jQuery('#loadMoreUrl').attr('data-url');
  if(typeof dataUrl === "undefined" || dataUrl.length === 0) return;
  jQuery.ajax({
    url: dataUrl+".html",
    data: ajaxData,
    method:"GET",
    dataType: "html",
    success:function(data){
      loadMoreEntries_success(data)
    },
    error:function(){
    }
  });
}

function loadMoreEntries_success(resp){
  if(typeof resp === "undefined" || resp === null || resp.length == 0) return;

  var html = jQuery.parseHTML(jQuery.trim(resp));
  var nodes = "";
  jQuery.each(html, function(i, el){
    if(el.nodeName == 'SECTION'){
      nodes += jQuery(el).html();
    }
  });

  jQuery('#ow-aggregation-list div').first().replaceWith(nodes);

  tilesOverlay.init();
}

$.fn.currentYear = function(template) {
  var currentYear = "";
  if(template === '/apps/oliverwymanv2/templates/eventsLanding') {
    currentYear = $("#ow-currentYear").attr('data-year');
    if(typeof currentYear === "undefined") currentYear = "";
  }
  return currentYear;
}

$.fn.primaryFilter = function(template) {
  var primaryFilter = "";
  if(template === '/apps/oliverwymanv2/templates/mediaCenter') {
    primaryFilter = $('.pagination__archive-links .active .page').html();
    if(typeof primaryFilter === "undefined") primaryFilter = "";
  } else if (template === '/apps/oliverwymanv2/templates/insightsLanding') {
    primaryFilter = $('#capabilityFilter').val();
    if(typeof primaryFilter === "undefined") primaryFilter = "";
  }
  return primaryFilter;
}

$.fn.secondaryFilter = function(template) {
  var secondaryFilter = "";
  if(template === '/apps/oliverwymanv2/templates/mediaCenter') {
    secondaryFilter = $('.filter--media-center .selected').attr('data-value');
    if(typeof secondaryFilter === "undefined") secondaryFilter = "";
  } else if (template === '/apps/oliverwymanv2/templates/insightsLanding') {
    secondaryFilter = $('#industryFilter').val();
    if(typeof secondaryFilter === "undefined") secondaryFilter = "";
  }
  return secondaryFilter;
}

/** Global Locations **/

function buildMap(mapContainers) {
  mapContainers.each(function() {
    var mapContainer = $(this)[0];
    var latitude = $(this).attr('data-latitude');
    var longitude = $(this).attr('data-longitude');
    var link = $(this).attr('data-officeBusinessLink');
    var myLatLng = {
      lat: parseFloat(latitude),
      lng: parseFloat(longitude)
    };
    var map = new google.maps.Map(mapContainer, {
      zoom: 17,
      center: myLatLng
    });

    var title = 'Oliver Wyman';
    if (link) {
      var marker = new google.maps.Marker({
        position: myLatLng,
        map: map,
        title: title,
        url: link
      });
      google.maps.event.addListener(marker, 'click', function() {
        window.open(this.url, '_blank');
      });
    } else {
      var geocoder = new google.maps.Geocoder;
      geocoder.geocode({
        'location': myLatLng
      }, function(results, status) {
        if (status === google.maps.GeocoderStatus.OK) {
          if (results[0]) {
            var reverseGeocodingLocation = results[0].formatted_address;
            var mapAddress = 'place/' +
                reverseGeocodingLocation.split(' ').join(
                    '+');
            var marker = new google.maps.Marker({
              position: myLatLng,
              map: map,
              title: title,
              url: 'https://www.google.com/maps/' +
                  mapAddress
            });
            google.maps.event.addListener(marker, 'click',
                function() {
                  window.open(this.url, '_blank');
                });
            try{
              $($($(mapContainer).closest(".accordion__location-city")[0]).find(".maplink")[0]).attr(
                  "href", 'https://www.google.com/maps/' +
                  mapAddress);
            }catch(e){
              return;
            }
          } else {
            var marker = new google.maps.Marker({
              position: myLatLng,
              map: map,
              title: title
            });
          }
        } else {
          var marker = new google.maps.Marker({
            position: myLatLng,
            map: map,
            title: title
          });
        }
      });
    }

  });

}

$(".accordion__header-locations").on("click", function(e) {
  e.preventDefault();

  var $toggle = $(this).find('.accordion__toggle');

  var $content = $(this).parents('.js-accordion').find('.js-accordion__content');

  if ($toggle.hasClass('is-on')) {
    $toggle.removeClass('is-on');
    $content.removeClass('is-on');
  } else {
    $toggle.addClass('is-on');
    $content.addClass('is-on');
    $('html, body').animate({
      scrollTop: $(this).offset().top - $(".site-header__bottom .is-sticky").height()
    }, 2000);
    var mapContainers = $(this).siblings(".accordion__content").find(".accordion__location-map");
    buildMap(mapContainers);
  }

});

function globalLocationsInit(){
  if(window.location.hash){
    globalLocationsHash();
  }
  if($(".accordion__content .is-on")){
    var mapContainers = $(".accordion__content.is-on").find(".accordion__location-map")
    buildMap(mapContainers);
  }
}

function globalLocationsHash() {
  var hash = SanitizeString(window.location.hash.substring(1));
  if(hash != ""){
    $("#" + hash +
        " header a.accordion__toggle.js-accordion__toggle").addClass(
        "is-on");
    $("#" + hash + " div.accordion__content.js-accordion__content")
    .addClass("is-on");
    $('html, body').animate({
      scrollTop: $("#" + hash).offset().top
    }, 2000);
    buildMap($("#" + hash + " div.accordion__content.js-accordion__content").find(".accordion__location-map"))
  }
}

$(function(){
  if(window.location.hash && $('.accordion-group--region').length > 0){
    globalLocationsHash();
  }
});

/*focus area*/

$(document).ready(function () {
  function focusAreasTiles() {
    function setTopMargin() {
      var factor = 1;
      if (typeof CQ == !'undefined' && (CQ.WCM.isEditMode(true) || CQ.WCM.isDesignMode(true))) {
        factor = 2.5;
      }
      console.log(factor);
      /* Fix Margin if heading runs over one line*/
      $(".focus-areas-tiles__item .focus-areas-tiles__overlay h1").each(function () {
        var h1height = $(this).height();
        var parent = $(this).parent();
        var parentHeight = parent.height();
        var margin = parentHeight - (h1height * factor) + "px";
        parent.css('margin-top', margin);
        parent.attr('ow-margin-top', margin);
      })
    }

    function animateOnRollover() {
      bgtransparency = '.5';
      $(".bluetilesItem").mouseenter(function () {
        $(this).find('.focus-areas-tiles__item .focus-areas-tiles__overlay').stop().animate({
          marginTop: '0px', backgroundColor: 'rgba(0, 0, 0, ' + bgtransparency + ')'
        }, 200);
      }).mouseleave(function () {
        var margin = $(this).find('.focus-areas-tiles__item .focus-areas-tiles__overlay').attr(
            'ow-margin-top');
        $(this).find('.focus-areas-tiles__item .focus-areas-tiles__overlay').stop().animate(
            {marginTop: margin, backgroundColor: 'rgba(0, 0, 0, 1)'}, 200);
      });
    }

    function windowResize() {
      $(window).resize(function () {
        setTopMargin();
      });
    }

    function setWrapSize() {
      /* Fix wrap size*/
      var i = 1;
      $(".focus-areas-tiles__item--full").each(function () {
        var parent = $(this).parent();
        parent.addClass("bluetilesItem_full");
      });
      $(".focus-areas-tiles__item").each(function () {
        if ($(this).attr("class").indexOf("focus-areas-tiles__item--full") < 0) {
          var parent = $(this).parent();
          if (i % 2 > 0) {
            parent.addClass("bluetilesItem_odd");
          }
          i++;
        }
      });
    }

    animateOnRollover();
    setWrapSize();
    windowResize();
    setTopMargin();
  }

  function changeRteImageMargin() {
    imagesInLft = $(".insight-page .long-form-text .article__row p img");
    imagesinText = $(".insight-page .text p img");

    $.merge(imagesInLft, imagesinText).each(function() {
      console.log($(this));
      let float = $(this).css("float");
      if(float == "left") {
        $(this).addClass("lft__image--inline-left");
      } else if(float == "right") {
        $(this).addClass("lft__image--inline-right");
      }
    });
  }

  focusAreasTiles();
  changeRteImageMargin();
})

/* International Navigation Dropdown */
$(function(){
  $(".international").on("mouseover",function(e){
    var li = e.currentTarget;
    var ul = li.parentElement;
    var totalWidth = li.getBoundingClientRect().width;
    var a = $($(li)).find("a")[0];
    var content = $($(li).find(".international-content")[0]);
    var text = li.innerText.split("\n");
    var longestIndex = 0;
    for(var i = 0; i < text.length; i++){
      if(text[i].length > text[longestIndex].length){
        longestIndex = i;
      }
    }
    if(longestIndex != 0){
      a.innerText = text[longestIndex];
      totalWidth = li.getBoundingClientRect().width;
      a.innerText = text[0];
    }
    //For some strange reason, doing this the jquery way causes 25px to be added to the width, breaking it
    li.style.width = totalWidth + "px";
    content.width(totalWidth);
    var offset = $(li).offset().left;
    var parentOffset = $(ul).offset().left;
    content.css("left", offset - parentOffset);
  });
});

// MMC ESG page selects logic----------------------------
$(document).ready(function () {
  const selectors = $('.custom-select .selector');
  const optionsRef = $('.custom-select .options');
  selectors.on('click', function(event) {
    const optionsRef = $(event.currentTarget).closest('.custom-select').find('.options');
    optionsRef.show();
  });

  optionsRef.find('li').on('click', function(event) {
    const optionRef = $(event.currentTarget);
    const selectorsRef = optionRef.closest('.custom-select').find('.selector');
    selectorsRef.find('.text').text(optionRef.text())
  })

  $(document).mouseup(function(e) {
    optionsRef.hide();
  });
});

$(".esg-select-option").on("click", function(e) {
  let solsr = $(this).data('solsr');

  $('.simple-card').each(function(e) {
    $(this).css('display','none');
  });

  $('.' + solsr).each(function(e){
    $(this).css('display','flex');
  });
});

$('#mcs-tab1').on('change', function () { // on change of state
  if (this.checked) // if changed state is "CHECKED"
  {
    $("#mcs-content1").show();
    $("#mcs-content2").hide();
  }
})

$('#mcs-tab2').on('change', function () { // on change of state
  if (this.checked) // if changed state is "CHECKED"
  {
    $("#mcs-content1").hide();
    $("#mcs-content2").show();
  }
})
/**
 * 
 * JS for Cookie consent  operations
 */

$(document).ready(function(){

	//display pop-up if cookie consent is not already provided
	var isConsentProvided = readCookie("cookieConsentOW");
//	console.log("isConsentProvided: "+isConsentProvided);
	
	if( isConsentProvided == undefined || isConsentProvided == null || isConsentProvided == "") {
	//	console.log("consent cookie not found");
		$('.cookie-bar').css("display", "block");
	} else if(isConsentProvided == "true"){
	//	console.log("consent cookie is TRUE");
		$('.cookie-bar').hide();
	}
	
	//function to close the popup once the OK button is clicked 
	  $('.js-cookie-anchor').click(function(e) {
	    e.preventDefault();
	    $(this).parents('.cookie-bar').fadeOut('slow');
	    createCookie("cookieConsentOW","true",90);
	  //  console.log("closing the popup...consent cookie created !");
		//window.location.href = window.location.href;
	    //location.reload(true);
	  });
});


//create a cookie with a given name
function createCookie(name,value,days) {
	if (days) {
		var date = new Date();
		date.setTime(date.getTime()+(days*24*60*60*1000));
		var expires = "; expires="+date.toGMTString();
	}
	else var expires = "";
	document.cookie = name+"="+value+expires+"; path=/";
}

//check if a cookie with the given name exists
function readCookie(name) {
	var cookieName = name + "=";
	var ca = document.cookie.split(';');
	for(var i=0;i < ca.length;i++) {
		var c = ca[i];
		while (c.charAt(0)==' ') c = c.substring(1,c.length);
		if (c.indexOf(cookieName) == 0) return c.substring(cookieName.length,c.length);
	}
	return null;
}


//delete the cookie present with the given name
function eraseCookie(name) {
	createCookie(name,"",-1);
}
$(window).load(function () {
  hubHeight();
})
$(window).resize(function () {
  hubHeight();
})

function hubHeight() {
  if ($(window).width() >= 965) {
    var bigTileHeight = 0;
    var smallTileHeight = 0;
    $('.hero--tiled__tile').each(function () {
      smallTileHeight += $(this).outerHeight();
      if ($(this).outerHeight() > 0) {
        smallTileHeight += 9.5;
      }
    });
    bigTileHeight += smallTileHeight - 9.5;
    if (bigTileHeight > 0) {
      $(".hero--main--combination__tile").height(bigTileHeight + "px");
    }
    bigTileHeight = 0;
  } else {
    $(".hero--main--combination__tile").height("100%");
  }
}
(function ($) {
  window.OW = window.OW || {};
  window.OW.VideoBanner = {
    init: function () {
      this.resize();
    },
    resize: function () {
      var videoElement = $(".middle-bannerv-align");
      if (videoElement.length) {
        var videoHeight = videoElement.height();
        var bannerHeight = videoElement.closest(".hero--main").height() + 50;
        console.log(bannerHeight);
        console.log(videoHeight);
        if (videoHeight > bannerHeight) {
          videoElement.attr("style", "bottom: -" + (videoHeight - bannerHeight) / 2 + "px");
        } else {
          videoElement.attr("style", "bottom: 0px");
        }
      }
    }
  };
  window.OW.VideoBanner.init();
  $(window).resize(function () {
    window.OW.VideoBanner.resize();
  });

})(jQuery);

function videoContainerResize(video){
  var videoHeight = $(video).height();
  if(videoHeight > 0){
    var container = video.closest(".hero--main");
    var content = $(container).find(".hero--main__inner");
    $(content).css("max-height", videoHeight + "px");
    var containerPadding = parseInt(($(container).css("padding-top") || "0px").replace("px",""));
    if($(container).height() + (containerPadding || 50) > videoHeight){
      //  $(container).css("padding-top", "0");
    }else{
      //  $(container).css("padding-top", "5rem");
    }
    var containerHeight = $(container).innerHeight();
    if(containerHeight >= videoHeight){
      containerHeight = videoHeight;
    }
    var valignment = $(video).data("valingment") === undefined ? 0 : $(video).data("valingment");
    video.style.setProperty("top", ((containerHeight - videoHeight)/2) + valignment + "px", "important");
    $(video).css("visibility", "visible");
  }
}

window.onload = function () {
  /*Video Home Banner*/
  var videoHomeBanner = $("homepagebanner .video-container > video, generalbanner .video-container > video, .homepage-hero-module .video-container > video");
  if (videoHomeBanner.length > 0) {
    var videoHomeBannerSrc = videoHomeBanner[0];
    var aspect = videoHomeBannerSrc.videoWidth / videoHomeBannerSrc.videoHeight;
    if (aspect < 2.6) {
      videoHomeBanner.addClass("notwide");
    }
    videoHomeBanner.show();

    videoContainerResize(videoHomeBanner[0]);
    $(window).resize(function() {
      videoContainerResize(videoHomeBanner[0])
    });
  }
};

var solutionsSidebar = {
  init: function () {
    if ($('.solutions-sidebar').length > 0) {
      function sidebarPosition() {
        var sidebar = $('.solutions-sidebar'),
            positionTimeout,
            sidebarWidth = sidebar.width(),
            leftContent = $( ".solutions-left .section-content" ),
            offset = leftContent.offset(),
            positionSidebar = leftContent.innerWidth() + offset.left + 90 + 'px';
        sidebar.css('left', positionSidebar);
        $('.solutions-sidebar').animate({
          opacity: 1
        }, 1500);
      }
      sidebarPosition();
      $(window).load(function(){
        sidebarPosition();
      });
      $(window).resize(sidebarPosition);
      function rollingSidebar () {
        $('.solutions-sidebar-inner').animate({
          height: $('.solutions-sidebar-inner').get(0).scrollHeight
        }, 1200, 'easeInOutCubic', function(){
          $(this).height('auto');
        });
      }
      rollingSidebar();
      function sidebarScroll () {
        var $el = $('.solutions-sidebar');
        var waypoint = new Waypoint({
          element: document.getElementById('js-main-content'),
          handler: function (direction) {
            if( direction === "down" ){
              $el.addClass("is-sticky");
            } else if ( direction === "up" ){
              $el.removeClass("is-sticky");
            }
          },
        });
        $('.tiles-grid--four-columns').attr('id', 'solutions-sidebar-stop');
        var stopHeight = $('#solutions-sidebar').height();
        if(document.getElementById('solutions-sidebar-stop')){
          var waypoint2 = new Waypoint({
            element: document.getElementById('solutions-sidebar-stop'),
            handler: function (direction) {
              if( direction === "down" ){
                if ($el.hasClass('is-sticky')) {
                  $el.removeClass('is-sticky');
                  $el.addClass('is-bottom');
                }
              }
              if( direction === "up" ){
                if ($el.hasClass('is-bottom')) {
                  $el.removeClass('is-bottom');
                  $el.addClass('is-sticky');
                }
              }
            }
           // offset: stopHeight
          });
        }
      }
      sidebarScroll();
      $(window).scroll(sidebarPosition);
    }
  },
};

function solutionsQuoteCardResize(){
  $(".quoteCard .quote-card-wrapper.full").parent().each(function(){this.classList.add("full")});
}

$(function(){
  solutionsSidebar.init();
  solutionsQuoteCardResize();
})

$(function(){
  $(".social-share-icons a[href*='wechat']").attr("data-href","/etc.clientlibs/oliverwymanv2/clientlibs/generic/resources/images/media/ow-wechat-qr.jpg");
  $(".social-share-icons a[href*='wechat']").venobox();
});
;(function ( $, window, undefined ) {

  /** Default settings */
  var defaults = {
    active: null,
    event: 'click',
    disabled: [],
    collapsible: 'accordion',
    startCollapsed: false,
    rotate: false,
    setHash: false,
    animation: 'default',
    animationQueue: false,
    duration: 500,
    fluidHeight: true,
    scrollToAccordion: false,
    scrollToAccordionOnLoad: true,
    scrollToAccordionOffset: 0,
    accordionTabElement: '<div></div>',
    navigationContainer: '',
    click: function(){},
    activate: function(){},
    deactivate: function(){},
    load: function(){},
    activateState: function(){},
    classes: {
      stateDefault: 'r-tabs-state-default',
      stateActive: 'r-tabs-state-active',
      stateDisabled: 'r-tabs-state-disabled',
      stateExcluded: 'r-tabs-state-excluded',
      container: 'r-tabs',
      ul: 'r-tabs-nav',
      tab: 'r-tabs-tab',
      anchor: 'r-tabs-anchor',
      panel: 'r-tabs-panel',
      accordionTitle: 'r-tabs-accordion-title'
    }
  };

  /**
   * Responsive Tabs
   * @constructor
   * @param {object} element - The HTML element the validator should be bound to
   * @param {object} options - An option map
   */
  function ResponsiveTabs(element, options) {
    this.element = element; // Selected DOM element
    this.$element = $(element); // Selected jQuery element

    this.tabs = []; // Create tabs array
    this.state = ''; // Define the plugin state (tabs/accordion)
    this.rotateInterval = 0; // Define rotate interval
    this.$queue = $({});

    // Extend the defaults with the passed options
    this.options = $.extend( {}, defaults, options);

    this.init();
  }


  /**
   * This function initializes the tab plugin
   */
  ResponsiveTabs.prototype.init = function () {
    var _this = this;

    // Load all the elements
    this.tabs = this._loadElements();
    this._loadClasses();
    this._loadEvents();

    // Window resize bind to check state
    $(window).on('resize', function(e) {
      _this._setState(e);
      if(_this.options.fluidHeight !== true) {
        _this._equaliseHeights();
      }
    });

    // Hashchange event
    $(window).on('hashchange', function(e) {
      var tabRef = _this._getTabRefBySelector(window.location.hash);
      var oTab = _this._getTab(tabRef);

      // Check if a tab is found that matches the hash
      if(tabRef >= 0 && !oTab._ignoreHashChange && !oTab.disabled) {
        // If so, open the tab and auto close the current one
        _this._openTab(e, _this._getTab(tabRef), true);
      }
    });

    // Start rotate event if rotate option is defined
    if(this.options.rotate !== false) {
      this.startRotation();
    }

    // Set fluid height
    if(this.options.fluidHeight !== true) {
      _this._equaliseHeights();
    }

    // --------------------
    // Define plugin events
    //

    // Activate: this event is called when a tab is selected
    this.$element.bind('tabs-click', function(e, oTab) {
      _this.options.click.call(this, e, oTab);
    });

    // Activate: this event is called when a tab is selected
    this.$element.bind('tabs-activate', function(e, oTab) {
      _this.options.activate.call(this, e, oTab);
    });
    // Deactivate: this event is called when a tab is closed
    this.$element.bind('tabs-deactivate', function(e, oTab) {
      _this.options.deactivate.call(this, e, oTab);
    });
    // Activate State: this event is called when the plugin switches states
    this.$element.bind('tabs-activate-state', function(e, state) {
      _this.options.activateState.call(this, e, state);
    });

    // Load: this event is called when the plugin has been loaded
    this.$element.bind('tabs-load', function(e) {
      var startTab;

      _this._setState(e); // Set state

      // Check if the panel should be collaped on load
      if(_this.options.startCollapsed !== true && !(_this.options.startCollapsed === 'accordion' && _this.state === 'accordion')) {

        startTab = _this._getStartTab();

        // Open the initial tab
        _this._openTab(e, startTab); // Open first tab

        // Call the callback function
        _this.options.load.call(this, e, startTab); // Call the load callback
      }
    });
    // Trigger loaded event
    this.$element.trigger('tabs-load');
  };

  //
  // PRIVATE FUNCTIONS
  //

  /**
   * This function loads the tab elements and stores them in an array
   * @returns {Array} Array of tab elements
   */
  ResponsiveTabs.prototype._loadElements = function() {
    var _this = this;
    var $ul = (_this.options.navigationContainer === '') ? this.$element.children('ul:first') : this.$element.find(_this.options.navigationContainer).children('ul:first');
    var tabs = [];
    var id = 0;

    // Add the classes to the basic html elements
    this.$element.addClass(_this.options.classes.container); // Tab container
    $ul.addClass(_this.options.classes.ul); // List container

    // Get tab buttons and store their data in an array
    $('li', $ul).each(function() {
      var $tab = $(this);
      var isExcluded = $tab.hasClass(_this.options.classes.stateExcluded);
      var $anchor, $panel, $accordionTab, $accordionAnchor, panelSelector;

      // Check if the tab should be excluded
      if(!isExcluded) {

        $anchor = $('a', $tab);
        panelSelector = $anchor.attr('href');
        $panel = $(panelSelector);
        $accordionTab = $(_this.options.accordionTabElement).insertBefore($panel);
        $accordionAnchor = $('<a></a>').attr('href', panelSelector).html($anchor.html()).appendTo($accordionTab);

        var oTab = {
          _ignoreHashChange: false,
          id: id,
          disabled: ($.inArray(id, _this.options.disabled) !== -1),
          tab: $(this),
          anchor: $('a', $tab),
          panel: $panel,
          selector: panelSelector,
          accordionTab: $accordionTab,
          accordionAnchor: $accordionAnchor,
          active: false
        };

        // 1up the ID
        id++;
        // Add to tab array
        tabs.push(oTab);
      }
    });
    return tabs;
  };


  /**
   * This function adds classes to the tab elements based on the options
   */
  ResponsiveTabs.prototype._loadClasses = function() {
    for (var i=0; i<this.tabs.length; i++) {
      this.tabs[i].tab.addClass(this.options.classes.stateDefault).addClass(this.options.classes.tab);
      this.tabs[i].anchor.addClass(this.options.classes.anchor);
      this.tabs[i].panel.addClass(this.options.classes.stateDefault).addClass(this.options.classes.panel);
      this.tabs[i].accordionTab.addClass(this.options.classes.accordionTitle);
      this.tabs[i].accordionAnchor.addClass(this.options.classes.anchor);
      if(this.tabs[i].disabled) {
        this.tabs[i].tab.removeClass(this.options.classes.stateDefault).addClass(this.options.classes.stateDisabled);
        this.tabs[i].accordionTab.removeClass(this.options.classes.stateDefault).addClass(this.options.classes.stateDisabled);
      }
    }
  };

  /**
   * This function adds events to the tab elements
   */
  ResponsiveTabs.prototype._loadEvents = function() {
    var _this = this;

    // Define activate event on a tab element
    var fActivate = function(e) {
      var current = _this._getCurrentTab(); // Fetch current tab
      var activatedTab = e.data.tab;

      e.preventDefault();

      // Trigger click event for whenever a tab is clicked/touched even if the tab is disabled
      activatedTab.tab.trigger('tabs-click', activatedTab);

      // Make sure this tab isn't disabled
      if(!activatedTab.disabled) {

        // Check if hash has to be set in the URL location
        if(_this.options.setHash) {
          // Set the hash using the history api if available to tackle Chromes repaint bug on hash change
          if(history.pushState) {
            // Fix for missing window.location.origin in IE
            if (!window.location.origin) {
              window.location.origin = window.location.protocol + "//" + window.location.hostname + (window.location.port ? ':' + window.location.port: '');
            }

            history.pushState(null, null, window.location.origin + window.location.pathname + window.location.search + activatedTab.selector);
          } else {
            // Otherwise fallback to the hash update for sites that don't support the history api
            window.location.hash = activatedTab.selector;
          }
        }

        e.data.tab._ignoreHashChange = true;

        // Check if the activated tab isnt the current one or if its collapsible. If not, do nothing
        if(current !== activatedTab || _this._isCollapisble()) {
          // The activated tab is either another tab of the current one. If it's the current tab it is collapsible
          // Either way, the current tab can be closed
          _this._closeTab(e, current);

          // Check if the activated tab isnt the current one or if it isnt collapsible
          if(current !== activatedTab || !_this._isCollapisble()) {
            _this._openTab(e, activatedTab, false, true);
          }
        }
      }
    };

    // Loop tabs
    for (var i=0; i<this.tabs.length; i++) {
      // Add activate function to the tab and accordion selection element
      this.tabs[i].anchor.on(_this.options.event, {tab: _this.tabs[i]}, fActivate);
      this.tabs[i].accordionAnchor.on(_this.options.event, {tab: _this.tabs[i]}, fActivate);
    }
  };

  /**
   * This function gets the tab that should be opened at start
   * @returns {Object} Tab object
   */
  ResponsiveTabs.prototype._getStartTab = function() {
    var tabRef = this._getTabRefBySelector(window.location.hash);
    var startTab;

    // Check if the page has a hash set that is linked to a tab
    if(tabRef >= 0 && !this._getTab(tabRef).disabled) {
      // If so, set the current tab to the linked tab
      startTab = this._getTab(tabRef);
    } else if(this.options.active > 0 && !this._getTab(this.options.active).disabled) {
      startTab = this._getTab(this.options.active);
    } else {
      // If not, just get the first one
      startTab = this._getTab(0);
    }

    return startTab;
  };

  /**
   * This function sets the current state of the plugin
   * @param {Event} e - The event that triggers the state change
   */
  ResponsiveTabs.prototype._setState = function(e) {
    var $ul = $('ul:first', this.$element);
    var oldState = this.state;
    var startCollapsedIsState = (typeof this.options.startCollapsed === 'string');
    var startTab;

    // The state is based on the visibility of the tabs list
    if($ul.is(':visible')){
      // Tab list is visible, so the state is 'tabs'
      this.state = 'tabs';
    } else {
      // Tab list is invisible, so the state is 'accordion'
      this.state = 'accordion';
    }

    // If the new state is different from the old state
    if(this.state !== oldState) {
      // If so, the state activate trigger must be called
      this.$element.trigger('tabs-activate-state', {oldState: oldState, newState: this.state});

      // Check if the state switch should open a tab
      if(oldState && startCollapsedIsState && this.options.startCollapsed !== this.state && this._getCurrentTab() === undefined) {
        // Get initial tab
        startTab = this._getStartTab(e);
        // Open the initial tab
        this._openTab(e, startTab); // Open first tab
      }
    }
  };

  /**
   * This function opens a tab
   * @param {Event} e - The event that triggers the tab opening
   * @param {Object} oTab - The tab object that should be opened
   * @param {Boolean} closeCurrent - Defines if the current tab should be closed
   * @param {Boolean} stopRotation - Defines if the tab rotation loop should be stopped
   */
  ResponsiveTabs.prototype._openTab = function(e, oTab, closeCurrent, stopRotation) {
    var _this = this;
    var scrollOffset;

    // Check if the current tab has to be closed
    if(closeCurrent) {
      this._closeTab(e, this._getCurrentTab());
    }

    // Check if the rotation has to be stopped when activated
    if(stopRotation && this.rotateInterval > 0) {
      this.stopRotation();
    }

    // Set this tab to active
    oTab.active = true;
    // Set active classes to the tab button and accordion tab button
    oTab.tab.removeClass(_this.options.classes.stateDefault).addClass(_this.options.classes.stateActive);
    oTab.accordionTab.removeClass(_this.options.classes.stateDefault).addClass(_this.options.classes.stateActive);

    // Run panel transiton
    _this._doTransition(oTab.panel, _this.options.animation, 'open', function() {
      var scrollOnLoad = (e.type !== 'tabs-load' || _this.options.scrollToAccordionOnLoad);

      // When finished, set active class to the panel
      oTab.panel.removeClass(_this.options.classes.stateDefault).addClass(_this.options.classes.stateActive);

      // And if enabled and state is accordion, scroll to the accordion tab
      if(_this.getState() === 'accordion' && _this.options.scrollToAccordion && (!_this._isInView(oTab.accordionTab) || _this.options.animation !== 'default') && scrollOnLoad) {

        // Add offset element's height to scroll position
        scrollOffset = oTab.accordionTab.offset().top - _this.options.scrollToAccordionOffset;

        // Check if the animation option is enabled, and if the duration isn't 0
        if(_this.options.animation !== 'default' && _this.options.duration > 0) {
          // If so, set scrollTop with animate and use the 'animation' duration
          $('html, body').animate({
            scrollTop: scrollOffset
          }, _this.options.duration);
        } else {
          //  If not, just set scrollTop
          $('html, body').scrollTop(scrollOffset);
        }
      }
    });

    this.$element.trigger('tabs-activate', oTab);
  };

  /**
   * This function closes a tab
   * @param {Event} e - The event that is triggered when a tab is closed
   * @param {Object} oTab - The tab object that should be closed
   */
  ResponsiveTabs.prototype._closeTab = function(e, oTab) {
    var _this = this;
    var doQueueOnState = typeof _this.options.animationQueue === 'string';
    var doQueue;

    if(oTab !== undefined) {
      if(doQueueOnState && _this.getState() === _this.options.animationQueue) {
        doQueue = true;
      } else if(doQueueOnState) {
        doQueue = false;
      } else {
        doQueue = _this.options.animationQueue;
      }

      // Deactivate tab
      oTab.active = false;
      // Set default class to the tab button
      oTab.tab.removeClass(_this.options.classes.stateActive).addClass(_this.options.classes.stateDefault);

      // Run panel transition
      _this._doTransition(oTab.panel, _this.options.animation, 'close', function() {
        // Set default class to the accordion tab button and tab panel
        oTab.accordionTab.removeClass(_this.options.classes.stateActive).addClass(_this.options.classes.stateDefault);
        oTab.panel.removeClass(_this.options.classes.stateActive).addClass(_this.options.classes.stateDefault);
      }, !doQueue);

      this.$element.trigger('tabs-deactivate', oTab);
    }
  };

  /**
   * This function runs an effect on a panel
   * @param {Element} panel - The HTML element of the tab panel
   * @param {String} method - The transition method reference
   * @param {String} state - The state (open/closed) that the panel should transition to
   * @param {Function} callback - The callback function that is called after the transition
   * @param {Boolean} dequeue - Defines if the event queue should be dequeued after the transition
   */
  ResponsiveTabs.prototype._doTransition = function(panel, method, state, callback, dequeue) {
    var effect;
    var _this = this;

    // Get effect based on method
    switch(method) {
      case 'slide':
        effect = (state === 'open') ? 'slideDown' : 'slideUp';
        break;
      case 'fade':
        effect = (state === 'open') ? 'fadeIn' : 'fadeOut';
        break;
      default:
        effect = (state === 'open') ? 'show' : 'hide';
        // When default is used, set the duration to 0
        _this.options.duration = 0;
        break;
    }

    // Add the transition to a custom queue
    this.$queue.queue('responsive-tabs',function(next){
      // Run the transition on the panel
      panel[effect]({
        duration: _this.options.duration,
        complete: function() {
          // Call the callback function
          callback.call(panel, method, state);
          // Run the next function in the queue
          next();
        }
      });
    });

    // When the panel is openend, dequeue everything so the animation starts
    if(state === 'open' || dequeue) {
      this.$queue.dequeue('responsive-tabs');
    }

  };

  /**
   * This function returns the collapsibility of the tab in this state
   * @returns {Boolean} The collapsibility of the tab
   */
  ResponsiveTabs.prototype._isCollapisble = function() {
    return (typeof this.options.collapsible === 'boolean' && this.options.collapsible) || (typeof this.options.collapsible === 'string' && this.options.collapsible === this.getState());
  };

  /**
   * This function returns a tab by numeric reference
   * @param {Integer} numRef - Numeric tab reference
   * @returns {Object} Tab object
   */
  ResponsiveTabs.prototype._getTab = function(numRef) {
    return this.tabs[numRef];
  };

  /**
   * This function returns the numeric tab reference based on a hash selector
   * @param {String} selector - Hash selector
   * @returns {Integer} Numeric tab reference
   */
  ResponsiveTabs.prototype._getTabRefBySelector = function(selector) {
    // Loop all tabs
    for (var i=0; i<this.tabs.length; i++) {
      // Check if the hash selector is equal to the tab selector
      if(this.tabs[i].selector === selector) {
        return i;
      }
    }
    // If none is found return a negative index
    return -1;
  };

  /**
   * This function returns the current tab element
   * @returns {Object} Current tab element
   */
  ResponsiveTabs.prototype._getCurrentTab = function() {
    return this._getTab(this._getCurrentTabRef());
  };

  /**
   * This function returns the next tab's numeric reference
   * @param {Integer} currentTabRef - Current numeric tab reference
   * @returns {Integer} Numeric tab reference
   */
  ResponsiveTabs.prototype._getNextTabRef = function(currentTabRef) {
    var tabRef = (currentTabRef || this._getCurrentTabRef());
    var nextTabRef = (tabRef === this.tabs.length - 1) ? 0 : tabRef + 1;
    return (this._getTab(nextTabRef).disabled) ? this._getNextTabRef(nextTabRef) : nextTabRef;
  };

  /**
   * This function returns the previous tab's numeric reference
   * @returns {Integer} Numeric tab reference
   */
  ResponsiveTabs.prototype._getPreviousTabRef = function() {
    return (this._getCurrentTabRef() === 0) ? this.tabs.length - 1 : this._getCurrentTabRef() - 1;
  };

  /**
   * This function returns the current tab's numeric reference
   * @returns {Integer} Numeric tab reference
   */
  ResponsiveTabs.prototype._getCurrentTabRef = function() {
    // Loop all tabs
    for (var i=0; i<this.tabs.length; i++) {
      // If this tab is active, return it
      if(this.tabs[i].active) {
        return i;
      }
    }
    // No tabs have been found, return negative index
    return -1;
  };

  /**
   * This function gets the tallest tab and applied the height to all tabs
   */
  ResponsiveTabs.prototype._equaliseHeights = function() {
    var maxHeight = 0;

    $.each($.map(this.tabs, function(tab) {
      maxHeight = Math.max(maxHeight, tab.panel.css('minHeight', '').height());
      return tab.panel;
    }), function() {
      this.css('minHeight', maxHeight);
    });
  };

  //
  // HELPER FUNCTIONS
  //

  ResponsiveTabs.prototype._isInView = function($element) {
    var docViewTop = $(window).scrollTop(),
      docViewBottom = docViewTop + $(window).height(),
      elemTop = $element.offset().top,
      elemBottom = elemTop + $element.height();
    return ((elemBottom <= docViewBottom) && (elemTop >= docViewTop));
  };

  //
  // PUBLIC FUNCTIONS
  //

  /**
   * This function activates a tab
   * @param {Integer} tabRef - Numeric tab reference
   * @param {Boolean} stopRotation - Defines if the tab rotation should stop after activation
   */
  ResponsiveTabs.prototype.activate = function(tabRef, stopRotation) {
    var e = jQuery.Event('tabs-activate');
    var oTab = this._getTab(tabRef);
    if(!oTab.disabled) {
      this._openTab(e, oTab, true, stopRotation || true);
    }
  };

  /**
   * This function deactivates a tab
   * @param {Integer} tabRef - Numeric tab reference
   */
  ResponsiveTabs.prototype.deactivate = function(tabRef) {
    var e = jQuery.Event('tabs-dectivate');
    var oTab = this._getTab(tabRef);
    if(!oTab.disabled) {
      this._closeTab(e, oTab);
    }
  };

  /**
   * This function enables a tab
   * @param {Integer} tabRef - Numeric tab reference
   */
  ResponsiveTabs.prototype.enable = function(tabRef) {
    var oTab = this._getTab(tabRef);
    if(oTab){
      oTab.disabled = false;
      oTab.tab.addClass(this.options.classes.stateDefault).removeClass(this.options.classes.stateDisabled);
      oTab.accordionTab.addClass(this.options.classes.stateDefault).removeClass(this.options.classes.stateDisabled);
    }
  };

  /**
   * This function disable a tab
   * @param {Integer} tabRef - Numeric tab reference
   */
  ResponsiveTabs.prototype.disable = function(tabRef) {
    var oTab = this._getTab(tabRef);
    if(oTab){
      oTab.disabled = true;
      oTab.tab.removeClass(this.options.classes.stateDefault).addClass(this.options.classes.stateDisabled);
      oTab.accordionTab.removeClass(this.options.classes.stateDefault).addClass(this.options.classes.stateDisabled);
    }
  };

  /**
   * This function gets the current state of the plugin
   * @returns {String} State of the plugin
   */
  ResponsiveTabs.prototype.getState = function() {
    return this.state;
  };

  /**
   * This function starts the rotation of the tabs
   * @param {Integer} speed - The speed of the rotation
   */
  ResponsiveTabs.prototype.startRotation = function(speed) {
    var _this = this;
    // Make sure not all tabs are disabled
    if(this.tabs.length > this.options.disabled.length) {
      this.rotateInterval = setInterval(function(){
        var e = jQuery.Event('rotate');
        _this._openTab(e, _this._getTab(_this._getNextTabRef()), true);
      }, speed || (($.isNumeric(_this.options.rotate)) ? _this.options.rotate : 4000) );
    } else {
      throw new Error("Rotation is not possible if all tabs are disabled");
    }
  };

  /**
   * This function stops the rotation of the tabs
   */
  ResponsiveTabs.prototype.stopRotation = function() {
    window.clearInterval(this.rotateInterval);
    this.rotateInterval = 0;
  };

  /**
   * This function can be used to get/set options
   * @return {any} Option value
   */
  ResponsiveTabs.prototype.option = function(key, value) {
    if(value) {
      this.options[key] = value;
    }
    return this.options[key];
  };

  /** jQuery wrapper */
  $.fn.responsiveTabs = function ( options ) {
    var args = arguments;
    var instance;

    if (options === undefined || typeof options === 'object') {
      return this.each(function () {
        if (!$.data(this, 'responsivetabs')) {
          $.data(this, 'responsivetabs', new ResponsiveTabs( this, options ));
        }
      });
    } else if (typeof options === 'string' && options[0] !== '_' && options !== 'init') {
      instance = $.data(this[0], 'responsivetabs');

      // Allow instances to be destroyed via the 'destroy' method
      if (options === 'destroy') {
        // TODO: destroy instance classes, etc
        $.data(this, 'responsivetabs', null);
      }

      if (instance instanceof ResponsiveTabs && typeof instance[options] === 'function') {
        return instance[options].apply( instance, Array.prototype.slice.call( args, 1 ) );
      } else {
        return this;
      }
    }
  };

}(jQuery, window));

(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

var activeSearchFilters = new Array(),
    activeFacets = new Array(),
    loadedFilters = new Array(),
    loadedFacets = new Array(),
    sorted = "";

var searchBox = function searchBox() {
  return {
    init: function init(el) {
      var navbarBlackBreadCrumbs = $("#black-breadcrumbs");
      var mainnav = $(".main-nav");

      $(".main-nav:not(.no-srch) > ul").append('<li class="site-nav__list__item">\
						<span href="" class="site-search-toggle">\
							<span class="icon--search"></span>\
						</span>');

      $('.search-box__inner input').matchHeight();
      var $searchBox;

      if($('.search-box').length > 0) {
        $searchBox = $('.search-box');
      } else {
        $searchBox = $(el); 
      }
      
      $(".site-search-toggle").on("click", function () {
        if ($(".main-nav__dropdown-1").hasClass("is-on")) {
          $(".main-nav__dropdown-1").removeClass("is-on");
        }

        if (navbarBlackBreadCrumbs.length ) {
          navbarBlackBreadCrumbs.removeAttr("style");
          navbarBlackBreadCrumbs.removeClass("nav1-on");
        }

        if ($searchBox.hasClass("is-on")) {
          $searchBox.removeClass("is-on");
          $(".icon--search").removeClass("is-on");
          $(".main-nav").removeClass("is-disabled");
          $(".nav__disabler").remove();

        } else {
          $(".icon--search").addClass("is-on");
          $searchBox.addClass("is-on");
          $(".main-nav").addClass("is-disabled");
          $(".main-nav").append('<div class="nav__disabler"></div>');
          $(".site-header__alternative-navigation ul").prepend('<div class="nav__disabler"></div>');
          if (navbarBlackBreadCrumbs.length ) {
            navbarBlackBreadCrumbs.attr("style", "top: " + parseFloat($searchBox.height() + mainnav.height() + navbarBlackBreadCrumbs.height()) + "px");
          }
        }
      });

      $(".site-header__top, #js-hero, .main-content").on("click", function () {
        if ($searchBox.hasClass("is-on")) {
          $searchBox.removeClass("is-on");
          $(".nav__disabler").remove();
          $(".main-nav").removeClass("is-disabled");
          $(".icon--search").removeClass("is-on");
          if (navbarBlackBreadCrumbs.length ) {
            navbarBlackBreadCrumbs.removeAttr("style");
            navbarBlackBreadCrumbs.removeClass("nav1-on");
          }
        }
      });
    },

    parseQueryString: function parseQueryString() {
      var hash,
          query = {},
          hashes = decodeURIComponent(window.location.href).slice(window.location.href.indexOf("?") + 1).split("&");

      for (var i = 0; i < hashes.length; i++) {
        hash = hashes[i].split("=");
        query[hash[0]] = hash[1];
      }
      return query;
    },

    setFilters: function setFilters() {
      activeSearchFilters.map(function (filter) {
        var t = decodeURIComponent(filter);
        // triggering click will add active class
        // and populate active filter bar
        $("[data-tag-id='" + t + "']").addClass("active");
        var $activeFilter = $("[data-tag-id='" + t + "']").clone();
        $activeFilter.addClass("active-filter");
        $(".active-filters .container").append($activeFilter).addClass("active");
        return t;
      });
      $(".filterInput").val(encodeURIComponent(activeSearchFilters));
      this.showActiveFilters();
    },

    setSort: function() {
      $(".sortInput").val(encodeURIComponent(sorted));
    },

    setFacets: function setFacets() {
      activeFacets.map(function (facet) {
        var t = decodeURIComponent(facet);
        $("[data-facet-id='" + t + "']").addClass("active");
        var $activeFacet = $("[data-facet-id='" + t + "']").clone();
        $activeFacet.addClass("active-filter");
        $(".active-filters .container").append($activeFacet).addClass("active");
        return t;
      });
      $(".facetInput").val(encodeURIComponent(activeFacets));
      this.showActiveFilters();
    },

    showActiveFilters: function showActiveFilters() {
      if (activeSearchFilters.length >= 1 || activeFacets.length >= 1) {
        $(".active-filters").addClass("active");
      } else {
        $(".active-filters").removeClass("active");
        $(".js-active-filter-apply").show(0);
      }
    },

    addFilter: function addFilter(tag) {
      var $filter = $("[data-tag-id='" + decodeURIComponent(tag) + "']");
      //tags not in array lets add it.
      activeSearchFilters.push(tag);
      $filter.addClass("active");
      // var $activeFilter = $filter.clone();
      // $(".active-filters .container").append($activeFilter);
      $(".filterInput").val(encodeURIComponent(activeSearchFilters));
    },

    addFacet: function addFacet(facet) {
      var $facet = $("[data-facet-id='" + decodeURIComponent(facet) + "']");
      //tags not in array lets add it.
      activeFacets.push(facet);
      $facet.addClass("active");
      // var $activeFilter = $filter.clone();
      // $(".active-filters .container").append($activeFilter);
      $(".facetInput").val(encodeURIComponent(activeFacets));
    },

    removeFilter: function removeFilter(tag) {
      var newArr = activeSearchFilters.filter(function (v) {
        return v != tag;
      });
      //(activeSearchFilters.indexOf(tag));
      var $filter = $("[data-tag-id='" + decodeURIComponent(tag) + "']");
      $(".active-filters").find($filter).remove();
      $filter.removeClass("active");
      activeSearchFilters = newArr;
    },

    removeFacet: function removeFacet(facet) {
      var newArr = activeFacets.filter(function (v) {
        return v != facet;
      });
      var $facet = $("[data-facet-id='" + decodeURIComponent(facet) + "']");
      $(".active-filters").find($facet).remove();
      $facet.removeClass("active");
      activeFacets = newArr;
    },

    cookieName: "pastSearches",

    setCookie: function setCookie($el) {
      var cd = new Date();
      cd.setMonth(cd.getMonth() + 1);
      var $searchVal = encodeURIComponent($el.find("[name='q']").val()).replace(/%3C/g, "").replace(/%3E/g, "")
                      .replace(/</g, "").replace(/>/g, "").replace(/&gt;/g, "").replace(/&lt;/g, ""),
          cs = document.cookie.replace(/(?:(?:^|.*;\s*)pastSearches\s*\=\s*([^;]*).*$)|^.*$/, "$1"),
          cv = $searchVal;
      //if cookie string exists slice last 4
      if (cs) {
        var ca = cs.split(","),
            terms = ca;
        if (ca.length >= 5) {
          terms = ca.slice(Math.max(ca.length - 4, 1));
        }
        if (terms.indexOf(cv) !== -1 || !cv) {
          return false;
        }
        var ls = $searchVal ? "," + $searchVal : "",
            cv = terms.join() + ls;
      }
      document.cookie = this.cookieName + "=" + cv + "; expires=" + cd + "; ";
    },

    getCookie: function() {
      var rs = document.cookie.replace(
          /(?:(?:^|.*;\s*)pastSearches\s*\=\s*([^;]*).*$)|^.*$/,
          "$1"
        ),
        sa = rs.split(",").reverse(),
        res = new Array();

        var searchPageName = "/search.html"
      //var locationArr = window.location.pathname.split("/");
      //var page = locationArr.pop();

      // if (page !== "insights.html") {
      //   locationArr.push("search.html");
      // } else {
      //   locationArr.push("insights/search.html");
      // }

      sa.map(function(search) {
        if (search != "") {
          res.push([
            decodeURIComponent(search),
            searchPageName + "?q=" + search
          ]);
        }
      });
      return res;
    }
  };
};

$(document).ready(function () {
  var sb = searchBox(),
      queryString = sb.parseQueryString(),
      cookiedata = sb.getCookie(),
      isIE11 = !!window.MSInputMethodContext && !!document.documentMode;

  //add recent search terms to dom
  if (cookiedata.length >= 1) {
    var cookieList = cookiedata.map(function (item) {
      return '<li><a href="' + item[1] + '">' + item[0] + "</a></li>";
    });

    $(".js-list-container").html('<div class="site__search-suggest">Recent Searches:<ul class="js-search-list">' + cookieList.join("") + "</ul></div>");
  }

  if (!queryString.n) {
    $(".js-clear-all").hide(0);
  }

  sb.init(".site__search");

  //init responsive tabs for filters
  $("#tabs").responsiveTabs({
    collapsible: true,
    startCollapsed: true,
    setHash: false,
    animation: "slide",
    duration: 250,
    activate: function activate(event, tab) {
      $("body").addClass("prevent-mobile-scroll");
      $("#tabs").addClass("is-open");
      $("#tabs .after").height($("body").height() - ($("#tabs").offset().top + $("#tabs").outerHeight()));
    },
    deactivate: function deactivate(event, tab) {
      $("body").removeClass("prevent-mobile-scroll");
      $("#tabs").removeClass("is-open");
      $("#tabs .after").height(0);
    }
  });

  //EVENT LISTENERS

  //ie11 doesnt support position sticky
  //so lets do it the old fashion way
  if (isIE11) {
    $(window).on("scroll", function () {
      var $filterContainer = $(".search__filters"),
          sticky = $filterContainer.offset().top + $filterContainer.outerHeight();
      if (window.pageYOffset > sticky) {
        $(".active-filters").addClass("sticky");
        $filterContainer.css({
          marginBotton: $(".active-filters").outerHeight() + "px"
        });
      } else {
        $(".active-filters").removeClass("sticky");
        $filterContainer.css({ marginBotton: "0px" });
      }
    });
  }

  //If pagination button is desable we need to prevent default
  $(".search-pagination .button--disabled").on("click", function (e) {
    e.preventDefault();
  });

  $("body").on("click", "[data-tag-id]", function (e) {
    e.preventDefault();
    var tag = encodeURIComponent($(this).data("tag-id")),
        $thisFilter = $("[data-tag-id='" + $(this).data("tag-id") + "']");
    if ($(this).hasClass("active") && activeSearchFilters.indexOf(tag) !== -1) {
      //remove filter
      sb.removeFilter(tag);
      //if removing an active filter submit right away

      if ($(this).hasClass("active-filter")) {
        $(".filterInput").val(encodeURIComponent(activeSearchFilters));
        $(".page__search-form").submit();
      }
    } else if (!$(this).hasClass("active") && activeSearchFilters.indexOf(tag) === -1) {
      //add filter
      sb.addFilter(tag);
    }
    // sb.showActiveFilters(filters);
  });

  $("body").on("click", "[data-facet-id]", function (e) {
    e.preventDefault();
    var facet = encodeURIComponent($(this).data("facet-id"));

    if ($(this).hasClass("active") && activeFacets.indexOf(facet) !== -1) {
      //remove filter
      sb.removeFacet(facet);
      //if removing an active filter submit right away

      if ($(this).hasClass("active-filter")) {
        $(".facetInput").val(encodeURIComponent(activeFacets));
        $(".page__search-form").submit();
      }
    } else if (!$(this).hasClass("active") && activeFacets.indexOf(facet) === -1){
      //add filter
      sb.addFacet(facet);
    }
  });

  //applying new filters
  $(".js-apply").on("click", function (e) {
    e.preventDefault();
    $(".filterInput").val(encodeURIComponent(activeSearchFilters));
    $(".facetInput").val(encodeURIComponent(activeFacets));
    $(".page__search-form").submit();
  });

  //cancel appied filters
  $(".js-cancel").on("click", function (e) {
    e.preventDefault();
    $(".filterInput").val(encodeURIComponent(loadedFilters));
    $(".facetInput").val(encodeURIComponent(loadedFacets));
    $(".page__search-form").submit();
  });

  //cancel appied filters
  $(".js-show-filters").on("click", function (e) {
    e.preventDefault();
    $("#tabs").toggleClass("is-open");
    if ($("#tabs").hasClass("is-open")) {
      $(this).html("Hide Filters");
    } else {
      $(this).html("Filters");
    }
  });

  //remove appied filters
  $(".js-clear-all").on("click", function (e) {
    e.preventDefault();
    $(".filterInput").val("");
    $(".facetInput").val("");
    $(".page__search-form").submit();
  });

  $(".js-sort-by").on("change", function (e) {
    e.preventDefault();
    $(".sortInput").val($(this).val());
    $(".page__search-form").submit();
  });

  $(".page__search-form, .site__search-form").on("submit", function (e) {
    sb.setCookie($(this));
  });

  if (queryString["n"]) {
    activeSearchFilters = decodeURIComponent(queryString["n"]).split(",");
    loadedFilters = decodeURIComponent(queryString["n"]).split(",");
    sb.setFilters(activeSearchFilters);
  }
  if (queryString["s"]) {
    sorted = decodeURIComponent(queryString["s"]);
    sb.setSort(sorted);
  }
  if (queryString["f.value"]) {
    activeFacets = decodeURIComponent(queryString["f.value"]).split(",");
    loadedFacets = decodeURIComponent(queryString["f.value"]).split(",");
    sb.setFacets(activeFacets);
  }
  setTimeout(function () {
    $(".search-page-content").addClass("loaded");
  }, 500);
});

},{}]},{},[1])

//# sourceMappingURL=search-generated.js.map

var __dispatched__ = {};

var __i__ = self.postMessage && setInterval(function(){
  if(self.PrivacyManagerAPI && __i__){
    var apiObject = {PrivacyManagerAPI:
          {action:"getConsentDecision",
            timestamp: new Date().getTime(),
            self: self.location.host}};
    self.top.postMessage(JSON.stringify(apiObject),"*");
    __i__ = clearInterval(__i__);
  }},50);

self.addEventListener("message", function(e, d){
  try{
    if(e.data && (d= JSON.parse(e.data)) &&
        (d = d.PrivacyManagerAPI) && d.capabilities &&
        d.action=="getConsentDecision"){
      var newDecision =
          self.PrivacyManagerAPI.callApi("getGDPRConsentDecision",
              self.location.host).consentDecision;
      newDecision && newDecision.forEach(function(label){
        if(!__dispatched__[label]){
          self.dataLayer && self.dataLayer.push({"event":"GDPR Pref Allows "+label});
            __dispatched__[label] = 1;
          }
        });
    }
  }catch(xx){/** not a cm api message **/}
});
